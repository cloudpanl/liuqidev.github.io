<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>MNIST pros</title>
      <link href="/2018/08/12/MNIST-pros/"/>
      <url>/2018/08/12/MNIST-pros/</url>
      <content type="html"><![CDATA[<h3 id="运行TensorFlow的InteractiveSession-交互式会话"><a href="#运行TensorFlow的InteractiveSession-交互式会话" class="headerlink" title="运行TensorFlow的InteractiveSession/交互式会话"></a>运行TensorFlow的InteractiveSession/交互式会话</h3><p><code>sess = tf.InteractiveSession()</code>用来创建交互式的会话，其余使用同Session</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br></pre></td></tr></table></figure><pre><code>D:\Anaconda3\Anaconda3_py36\lib\site-packages\h5py\__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.  from ._conv import register_converters as _register_converters</code></pre><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>和上一节类似</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># http://yann.lecun.com/exdb/mnist/  to download mnist dataset</span></span><br><span class="line"><span class="comment"># https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/tutorials/mnist/input_data.py</span></span><br><span class="line"><span class="comment"># to read dataset</span></span><br><span class="line"><span class="keyword">from</span> load_mnist <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> tensorflow.examples.tutorials.mnist.input_data <span class="keyword">as</span> input_data</span><br><span class="line">minst_dir = <span class="string">"MNIST_data/"</span></span><br><span class="line">mnist = input_data.read_data_sets(minst_dir, one_hot=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = tf.placeholder(<span class="string">"float"</span>, shape=[<span class="keyword">None</span>, <span class="number">784</span>]) </span><br><span class="line">y_ = tf.placeholder(<span class="string">"float"</span>, shape=[<span class="keyword">None</span>, <span class="number">10</span>]) <span class="comment"># true label</span></span><br></pre></td></tr></table></figure><h2 id="构建一个多层卷积网络"><a href="#构建一个多层卷积网络" class="headerlink" title="构建一个多层卷积网络"></a>构建一个多层卷积网络</h2><h3 id="权重初始化"><a href="#权重初始化" class="headerlink" title="权重初始化"></a>权重初始化</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">weight_variable</span><span class="params">(shape)</span>:</span></span><br><span class="line">    initial = tf.truncated_normal(shape, stddev=<span class="number">0.1</span>) <span class="comment">#  The generated values follow a normal distribution with specified mean and</span></span><br><span class="line">    <span class="comment"># standard deviation.从截断的正态分布中输出随机值，中如果x的取值在区间（μ-2σ，μ+2σ）之外则重新进行选择</span></span><br><span class="line">    <span class="keyword">return</span> tf.Variable(initial)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bias_variable</span><span class="params">(shape)</span>:</span></span><br><span class="line">    initial = tf.constant(<span class="number">0.1</span>, shape=shape) <span class="comment"># Constant 2-D tensor populated with scalar value 0.1. 初始值为0.1，广播到shape形状的二维数组</span></span><br><span class="line">    <span class="keyword">return</span> tf.Variable(initial)</span><br></pre></td></tr></table></figure><h3 id="卷积和汇聚（池化）"><a href="#卷积和汇聚（池化）" class="headerlink" title="卷积和汇聚（池化）"></a>卷积和汇聚（<del>池化</del>）</h3><p><em>由于Pooling翻译成池化让人不明所以，个人习惯依据其作用，而称之为汇聚。</em></p><p>简单起见，卷积使用1步长（stride size），0边距（padding size）的模板，保证输出和输入是同一个大小。我们的池化用简单传统的2x2大小的模板做max pooling.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">conv2d</span><span class="params">(x, W)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> tf.nn.conv2d(x, W, strides=[<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>], padding=<span class="string">'SAME'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">max_pool_2x2</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> tf.nn.max_pool(x, ksize=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>], strides=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>], padding=<span class="string">'SAME'</span>)</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="第一层卷积"><a href="#第一层卷积" class="headerlink" title="第一层卷积"></a>第一层卷积</h3><p>它由一个卷积接一个max pooling完成。卷积在每个5x5的patch中算出32个特征。卷积的权重张量形状是[5, 5, 1, 32]，前两个维度是patch的大小，接着是输入的通道数目，最后是输出的通道数目。 而对于每一个输出通道都有一个对应的偏置量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">W_conv1 = weight_variable([<span class="number">5</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">32</span>])</span><br><span class="line">b_conv1 = bias_variable([<span class="number">32</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># convert x to 4d vector</span></span><br><span class="line">x_image = tf.reshape(x, [<span class="number">-1</span>, <span class="number">28</span>,<span class="number">28</span>, <span class="number">1</span>])<span class="comment"># num x height x width x channel</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># We then convolve x_image with the weight tensor, add the bias, apply the ReLU function, and finally max pool. </span></span><br><span class="line"><span class="comment"># 我们把x_image和权值向量进行卷积，加上偏置项，然后应用ReLU激活函数，最后进行max pooling。</span></span><br><span class="line">h_conv1 = tf.nn.relu(conv2d(x_image, W_conv1)+b_conv1)</span><br><span class="line">h_pool1 = max_pool_2x2(h_conv1)</span><br></pre></td></tr></table></figure><h3 id="第二层卷积"><a href="#第二层卷积" class="headerlink" title="第二层卷积"></a>第二层卷积</h3><p>为了构建一个更深的网络，我们会把几个类似的层堆叠起来。第二层中，每个5x5的patch会得到64个特征。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">W_conv2 = weight_variable([<span class="number">5</span>, <span class="number">5</span>, <span class="number">32</span>, <span class="number">64</span>])</span><br><span class="line">b_conv2 = bias_variable([<span class="number">64</span>])</span><br><span class="line"></span><br><span class="line">h_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2)+b_conv2)</span><br><span class="line">h_pool2 = max_pool_2x2(h_conv2)</span><br></pre></td></tr></table></figure><h3 id="密集连接（全连接）层"><a href="#密集连接（全连接）层" class="headerlink" title="密集连接（全连接）层"></a>密集连接（全连接）层</h3><p>经过两层卷积（激活）汇聚组合拳，原本的28x28的图像，特征图的尺寸减小到7x7（主要得益于汇聚）。<br>并且一张图片有64个特征图（得益于卷积）。<br>引入一个有1024个神经元的全连接层，来处理整个图片。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">W_fc1 = weight_variable([<span class="number">7</span>*<span class="number">7</span>*<span class="number">64</span>, <span class="number">1024</span>])</span><br><span class="line">b_fc1 = bias_variable([<span class="number">1024</span>])</span><br><span class="line"></span><br><span class="line">h_pool2_flat = tf.reshape(h_pool2, [<span class="number">-1</span>, <span class="number">7</span>*<span class="number">7</span>*<span class="number">64</span>])</span><br><span class="line">h_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1)+b_fc1)</span><br></pre></td></tr></table></figure><h3 id="Dropout"><a href="#Dropout" class="headerlink" title="Dropout"></a>Dropout</h3><p><em>好像还没有官方中文翻译，那就叫它断电吧。使用TensorFlow构建计算图和使用vhdl构建电路有很多相似之处</em></p><p>减少过拟合。用一个placeholder来代表一个神经元的输出在dropout中保持不变的概率。这样我们可以在训练过程中启用dropout，在测试过程中关闭dropout。 TensorFlow的tf.nn.dropout操作除了可以屏蔽神经元的输出外，还会自动处理神经元输出值的scale。所以用dropout的时候可以不用考虑scale。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">keep_prob = tf.placeholder(<span class="string">"float"</span>)</span><br><span class="line">h_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)</span><br></pre></td></tr></table></figure><h3 id="输出层"><a href="#输出层" class="headerlink" title="输出层"></a>输出层</h3><p>最后添加一个softmax层，如同前一节的softmax回归一样。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">W_fc2 = weight_variable([<span class="number">1024</span>, <span class="number">10</span>])</span><br><span class="line">b_fc2 = bias_variable([<span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">y_conv = tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2)+b_fc2) <span class="comment"># 输出层不需要激活函数</span></span><br></pre></td></tr></table></figure><h3 id="训练和评估"><a href="#训练和评估" class="headerlink" title="训练和评估"></a>训练和评估</h3><p>我们会用更加复杂的ADAM优化器来做梯度最速下降，在feed_dict中加入额外的参数keep_prob来控制dropout比例。然后每100次迭代输出一次日志。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">cross_entropy = -tf.reduce_sum(y_*tf.log(y_conv))</span><br><span class="line">train_step = tf.train.AdamOptimizer(<span class="number">1e-4</span>).minimize(cross_entropy) <span class="comment"># 优化器只是按照规则（参数更新算法）来更新参数的</span></span><br><span class="line">correct_prediction = tf.equal(tf.argmax(y_conv, <span class="number">1</span>), tf.argmax(y_, <span class="number">1</span>))</span><br><span class="line">accuracy = tf.reduce_mean(tf.cast(correct_prediction, <span class="string">"float"</span>)) <span class="comment"># acc rate</span></span><br><span class="line"></span><br><span class="line">sess = tf.InteractiveSession()</span><br><span class="line">sess.run(tf.global_variables_initializer())</span><br><span class="line"></span><br><span class="line">print(<span class="string">'Training...'</span>)</span><br><span class="line">start_t = time.clock()</span><br><span class="line"><span class="keyword">for</span> step <span class="keyword">in</span> range(<span class="number">20001</span>):</span><br><span class="line">    batch = mnist.train.next_batch(<span class="number">50</span>)</span><br><span class="line">    <span class="keyword">if</span> step%<span class="number">100</span>==<span class="number">0</span>:</span><br><span class="line">        train_accuracy = accuracy.eval(feed_dict=&#123;x:batch[<span class="number">0</span>], y_:batch[<span class="number">1</span>], keep_prob:<span class="number">1.0</span>&#125;)</span><br><span class="line">        print(<span class="string">"Step %d, training accuracy %f"</span>%(step, train_accuracy))</span><br><span class="line">    train_step.run(feed_dict=&#123;x:batch[<span class="number">0</span>], y_:batch[<span class="number">1</span>], keep_prob:<span class="number">0.5</span>&#125;)</span><br><span class="line">end_t = time.clock()</span><br><span class="line">print(<span class="string">"Train Time Cost: "</span>, end_t-start_t)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'Testing...'</span>)</span><br><span class="line">print(<span class="string">"Test accuracy %f"</span>%accuracy.eval(feed_dict=&#123;x:mnist.test.images,</span><br><span class="line">                                                 y_:mnist.test.labels,</span><br><span class="line">                                                 keep_prob:<span class="number">1.0</span>&#125;))</span><br><span class="line"></span><br><span class="line">sess.close()</span><br></pre></td></tr></table></figure><pre><code>Training...Step 0, training accuracy 0.120000Step 100, training accuracy 0.780000Step 200, training accuracy 0.860000Step 300, training accuracy 0.860000Step 400, training accuracy 0.980000Step 500, training accuracy 0.860000Step 600, training accuracy 0.940000Step 700, training accuracy 0.940000Step 800, training accuracy 0.960000Step 900, training accuracy 0.940000Step 1000, training accuracy 0.960000Step 1100, training accuracy 1.000000Step 1200, training accuracy 0.960000Step 1300, training accuracy 0.980000Step 1400, training accuracy 1.000000Step 1500, training accuracy 0.960000Step 1600, training accuracy 0.940000Step 1700, training accuracy 0.940000Step 1800, training accuracy 0.940000Step 1900, training accuracy 0.980000Step 2000, training accuracy 0.980000Step 2100, training accuracy 0.960000Step 2200, training accuracy 0.940000Step 2300, training accuracy 0.980000Step 2400, training accuracy 0.980000Step 2500, training accuracy 0.960000Step 2600, training accuracy 1.000000Step 2700, training accuracy 1.000000Step 2800, training accuracy 0.980000Step 2900, training accuracy 1.000000Step 3000, training accuracy 0.980000Step 3100, training accuracy 1.000000Step 3200, training accuracy 0.980000Step 3300, training accuracy 1.000000Step 3400, training accuracy 1.000000Step 3500, training accuracy 0.960000Step 3600, training accuracy 1.000000Step 3700, training accuracy 0.980000Step 3800, training accuracy 1.000000Step 3900, training accuracy 0.980000Step 4000, training accuracy 0.980000Step 4100, training accuracy 1.000000Step 4200, training accuracy 0.980000Step 4300, training accuracy 0.960000Step 4400, training accuracy 1.000000Step 4500, training accuracy 1.000000Step 4600, training accuracy 1.000000Step 4700, training accuracy 1.000000Step 4800, training accuracy 1.000000Step 4900, training accuracy 0.980000Step 5000, training accuracy 0.980000Step 5100, training accuracy 0.980000Step 5200, training accuracy 1.000000Step 5300, training accuracy 1.000000Step 5400, training accuracy 1.000000Step 5500, training accuracy 1.000000Step 5600, training accuracy 1.000000Step 5700, training accuracy 0.980000Step 5800, training accuracy 1.000000Step 5900, training accuracy 0.980000Step 6000, training accuracy 0.980000Step 6100, training accuracy 0.980000Step 6200, training accuracy 1.000000Step 6300, training accuracy 0.980000Step 6400, training accuracy 0.980000Step 6500, training accuracy 1.000000Step 6600, training accuracy 0.980000Step 6700, training accuracy 1.000000Step 6800, training accuracy 1.000000Step 6900, training accuracy 1.000000Step 7000, training accuracy 1.000000Step 7100, training accuracy 0.980000Step 7200, training accuracy 1.000000Step 7300, training accuracy 1.000000Step 7400, training accuracy 0.980000Step 7500, training accuracy 1.000000Step 7600, training accuracy 0.980000Step 7700, training accuracy 0.980000Step 7800, training accuracy 1.000000Step 7900, training accuracy 0.980000Step 8000, training accuracy 1.000000Step 8100, training accuracy 1.000000Step 8200, training accuracy 0.980000Step 8300, training accuracy 0.980000Step 8400, training accuracy 1.000000Step 8500, training accuracy 0.980000Step 8600, training accuracy 1.000000Step 8700, training accuracy 0.980000Step 8800, training accuracy 0.980000Step 8900, training accuracy 1.000000Step 9000, training accuracy 1.000000Step 9100, training accuracy 1.000000Step 9200, training accuracy 1.000000Step 9300, training accuracy 0.980000Step 9400, training accuracy 1.000000Step 9500, training accuracy 0.960000Step 9600, training accuracy 0.980000Step 9700, training accuracy 1.000000Step 9800, training accuracy 1.000000Step 9900, training accuracy 1.000000Step 10000, training accuracy 1.000000Step 10100, training accuracy 1.000000Step 10200, training accuracy 1.000000Step 10300, training accuracy 1.000000Step 10400, training accuracy 1.000000Step 10500, training accuracy 1.000000Step 10600, training accuracy 1.000000Step 10700, training accuracy 1.000000Step 10800, training accuracy 0.980000Step 10900, training accuracy 1.000000Step 11000, training accuracy 1.000000Step 11100, training accuracy 1.000000Step 11200, training accuracy 0.980000Step 11300, training accuracy 1.000000Step 11400, training accuracy 1.000000Step 11500, training accuracy 0.980000Step 11600, training accuracy 0.980000Step 11700, training accuracy 0.960000Step 11800, training accuracy 1.000000Step 11900, training accuracy 1.000000Step 12000, training accuracy 0.980000Step 12100, training accuracy 1.000000Step 12200, training accuracy 0.980000Step 12300, training accuracy 1.000000Step 12400, training accuracy 1.000000Step 12500, training accuracy 1.000000Step 12600, training accuracy 1.000000Step 12700, training accuracy 1.000000Step 12800, training accuracy 1.000000Step 12900, training accuracy 1.000000Step 13000, training accuracy 1.000000Step 13100, training accuracy 1.000000Step 13200, training accuracy 1.000000Step 13300, training accuracy 1.000000Step 13400, training accuracy 1.000000Step 13500, training accuracy 1.000000Step 13600, training accuracy 1.000000Step 13700, training accuracy 1.000000Step 13800, training accuracy 1.000000Step 13900, training accuracy 1.000000Step 14000, training accuracy 1.000000Step 14100, training accuracy 1.000000Step 14200, training accuracy 1.000000Step 14300, training accuracy 1.000000Step 14400, training accuracy 1.000000Step 14500, training accuracy 1.000000Step 14600, training accuracy 0.980000Step 14700, training accuracy 1.000000Step 14800, training accuracy 1.000000Step 14900, training accuracy 1.000000Step 15000, training accuracy 0.980000Step 15100, training accuracy 1.000000Step 15200, training accuracy 1.000000Step 15300, training accuracy 1.000000Step 15400, training accuracy 1.000000Step 15500, training accuracy 1.000000Step 15600, training accuracy 1.000000Step 15700, training accuracy 1.000000Step 15800, training accuracy 1.000000Step 15900, training accuracy 1.000000Step 16000, training accuracy 1.000000Step 16100, training accuracy 1.000000Step 16200, training accuracy 1.000000Step 16300, training accuracy 1.000000Step 16400, training accuracy 1.000000Step 16500, training accuracy 1.000000Step 16600, training accuracy 1.000000Step 16700, training accuracy 0.960000Step 16800, training accuracy 1.000000Step 16900, training accuracy 1.000000Step 17000, training accuracy 1.000000Step 17100, training accuracy 1.000000Step 17200, training accuracy 0.980000Step 17300, training accuracy 1.000000Step 17400, training accuracy 1.000000Step 17500, training accuracy 1.000000Step 17600, training accuracy 1.000000Step 17700, training accuracy 1.000000Step 17800, training accuracy 1.000000Step 17900, training accuracy 1.000000Step 18000, training accuracy 1.000000Step 18100, training accuracy 1.000000Step 18200, training accuracy 1.000000Step 18300, training accuracy 1.000000Step 18400, training accuracy 1.000000Step 18500, training accuracy 1.000000Step 18600, training accuracy 1.000000Step 18700, training accuracy 1.000000Step 18800, training accuracy 1.000000Step 18900, training accuracy 1.000000Step 19000, training accuracy 1.000000Step 19100, training accuracy 1.000000Step 19200, training accuracy 1.000000Step 19300, training accuracy 1.000000Step 19400, training accuracy 1.000000Step 19500, training accuracy 1.000000Step 19600, training accuracy 1.000000Step 19700, training accuracy 1.000000Step 19800, training accuracy 1.000000Step 19900, training accuracy 0.980000Step 20000, training accuracy 1.000000Train Time Cost:  205.04848637568546Testing...Test accuracy 0.992300</code></pre><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>本节对mnist数据集，使用TensorFlow构建了卷积池化API，并构建了两层卷积池化层，一层全连接层的神经网络，使用dropout来减少过拟合，最后输出到softmax回归层，从而构建了完整的卷积神经网络模型。优化器使用Adam，经过2万次迭代的训练，在测试集上精确度达到了(99%).</p>]]></content>
      
      <categories>
          
          <category> Machine Learning </category>
          
          <category> TensorFlow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mnist </tag>
            
            <tag> TensorFlow </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>TensorFlow tutorial mnist beginners</title>
      <link href="/2018/08/11/TensorFlow-tutorial-mnist-beginners/"/>
      <url>/2018/08/11/TensorFlow-tutorial-mnist-beginners/</url>
      <content type="html"><![CDATA[<h1 id="从示例开始"><a href="#从示例开始" class="headerlink" title="从示例开始"></a>从示例开始</h1><h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np <span class="comment"># 和tf配合使用</span></span><br></pre></td></tr></table></figure><pre><code>D:\Anaconda3\Anaconda3_py36\lib\site-packages\h5py\__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.  from ._conv import register_converters as _register_converters</code></pre><h3 id="构造线性模型"><a href="#构造线性模型" class="headerlink" title="构造线性模型"></a>构造线性模型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># generate phony data | 生成假数据</span></span><br><span class="line"><span class="comment"># 实际应用应该是面对真实的数据</span></span><br><span class="line"><span class="comment"># 100个点，（2x100）</span></span><br><span class="line">x_data = np.float32(np.random.rand(<span class="number">2</span>, <span class="number">100</span>))</span><br><span class="line">y_data = np.dot([<span class="number">0.100</span>, <span class="number">0.200</span>], x_data)+<span class="number">0.300</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 构造线性模型</span></span><br><span class="line">b = tf.Variable(tf.zeros([<span class="number">1</span>])) <span class="comment"># tensor of shape 1</span></span><br><span class="line">W = tf.Variable(tf.random_uniform([<span class="number">1</span>, <span class="number">2</span>], minval=<span class="number">-0.1</span>, maxval=<span class="number">1.0</span>)) <span class="comment"># tensor of shape 1x2 whose values are from a uniform distribution </span></span><br><span class="line"><span class="comment"># in the range of [minval, maxval)</span></span><br><span class="line">y = tf.matmul(W, x_data)+b</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最小化方差</span></span><br><span class="line">loss = tf.reduce_mean(tf.square(y-y_data))</span><br><span class="line">optimizer = tf.train.GradientDescentOptimizer(<span class="number">0.5</span>)</span><br><span class="line">train = optimizer.minimize(loss)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化变量</span></span><br><span class="line"><span class="comment"># init = tf.initialize_all_variables()</span></span><br><span class="line">init = tf.global_variables_initializer()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动计算图(graph)</span></span><br><span class="line">sess = tf.Session() <span class="comment"># 创建会话</span></span><br><span class="line">sess.run(init)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拟合平面</span></span><br><span class="line"><span class="keyword">for</span> step <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">201</span>):</span><br><span class="line">    sess.run(train)</span><br><span class="line">    <span class="keyword">if</span> step%<span class="number">20</span>==<span class="number">0</span>:</span><br><span class="line">        print(<span class="string">"Step: "</span>, step, <span class="string">" W= "</span>,sess.run(W), <span class="string">" b= "</span>, sess.run(b))</span><br></pre></td></tr></table></figure><pre><code>Step:  0  W=  [[0.4871506  0.41139394]]  b=  [-0.09778017]Step:  20  W=  [[0.22539519 0.34252512]]  b=  [0.15573283]Step:  40  W=  [[0.14763923 0.26675704]]  b=  [0.23892412]Step:  60  W=  [[0.11975352 0.22945689]]  b=  [0.2737922]Step:  80  W=  [[0.10842387 0.21279107]]  b=  [0.2887098]Step:  100  W=  [[0.10362242 0.20552918]]  b=  [0.2951307]Step:  120  W=  [[0.10156146 0.20238699]]  b=  [0.29789925]Step:  140  W=  [[0.10067356 0.2010301 ]]  b=  [0.2990936]Step:  160  W=  [[0.10029061 0.20044449]]  b=  [0.29960892]Step:  180  W=  [[0.10012538 0.20019177]]  b=  [0.29983127]Step:  200  W=  [[0.10005409 0.20008272]]  b=  [0.2999272]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭会话</span></span><br><span class="line">sess.close()</span><br></pre></td></tr></table></figure><h2 id="MNIST机器学习入门"><a href="#MNIST机器学习入门" class="headerlink" title="MNIST机器学习入门"></a>MNIST机器学习入门</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># http://yann.lecun.com/exdb/mnist/  to download mnist dataset</span></span><br><span class="line"><span class="comment"># https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/tutorials/mnist/input_data.py</span></span><br><span class="line"><span class="comment"># to read dataset</span></span><br><span class="line"><span class="keyword">from</span> load_mnist <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow.examples.tutorials.mnist.input_data <span class="keyword">as</span> input_data</span><br><span class="line">minst_dir = <span class="string">"MNIST_data/"</span></span><br><span class="line">mnist = input_data.read_data_sets(minst_dir, one_hot=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><pre><code>Extracting MNIST_data/train-images-idx3-ubyte.gzExtracting MNIST_data/train-labels-idx1-ubyte.gzExtracting MNIST_data/t10k-images-idx3-ubyte.gzExtracting MNIST_data/t10k-labels-idx1-ubyte.gzWARNING:tensorflow:From D:\Anaconda3\Anaconda3_py36\lib\site-packages\tensorflow\contrib\learn\python\learn\datasets\mnist.py:290: DataSet.__init__ (from tensorflow.contrib.learn.python.learn.datasets.mnist) is deprecated and will be removed in a future version.Instructions for updating:Please use alternatives such as official/mnist/dataset.py from tensorflow/models.</code></pre><p>下载下来的数据集被分成两部分：60000行的训练数据集（mnist.train）和10000行的测试数据集（mnist.test）.</p><p>每一个MNIST数据单元有两部分组成：一张包含手写数字的图片和一个对应的标签。我们把这些图片设为“xs”，把这些标签设为“ys”。训练数据集和测试数据集都包含xs和ys，比如训练数据集的图片是 mnist.train.images ，训练数据集的标签是 mnist.train.labels.</p><p>每一张图片包含28像素X28像素。我们可以用一个数字数组来表示这张图片：<br><img src="http://www.tensorfly.cn/tfdoc/images/MNIST-Matrix.png" alt=""></p><p>我们把这个数组展开成一个向量，长度是 28x28 = 784。如何展开这个数组（数字间的顺序）不重要，只要保持各个图片采用相同的方式展开。从这个角度来看，MNIST数据集的图片就是在784维向量空间里面的点, 并且拥有比较复杂的结构 (提醒: 此类数据的可视化是计算密集型的)。</p><p>在MNIST训练数据集中，mnist.train.images 是一个形状为 <code>[60000, 784]</code>的张量，第一个维度数字用来索引图片，第二个维度数字用来索引每张图片中的像素点。在此张量里的每一个元素，都表示某张图片里的某个像素的强度值，值介于0和1之间。<br><img src="http://www.tensorfly.cn/tfdoc/images/mnist-train-xs.png" alt=""></p><p>相对应的MNIST数据集的标签是介于0到9的数字，用来描述给定图片里表示的数字。为了用于这个教程，我们使标签数据是”one-hot vectors”。 一个one-hot向量除了某一位的数字是1以外其余各维度数字都是0。所以在此教程中，数字n将表示成一个只有在第n维度（从0开始）数字为1的10维向量。比如，标签0将表示成(<code>[1,0,0,0,0,0,0,0,0,0,0])</code>。因此， mnist.train.labels 是一个<code>[60000, 10]</code>的数字矩阵。<br><img src="http://www.tensorfly.cn/tfdoc/images/mnist-train-ys.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># x represent the input</span></span><br><span class="line"><span class="comment"># None means number of images is adaptable</span></span><br><span class="line"><span class="comment"># a 28x28 image is flatten to a vector of 784</span></span><br><span class="line">x = tf.placeholder(<span class="string">"float"</span>, [<span class="keyword">None</span>, <span class="number">784</span>])</span><br><span class="line"></span><br><span class="line">W = tf.Variable(tf.zeros([<span class="number">784</span>, <span class="number">10</span>]))</span><br><span class="line">b = tf.Variable(tf.zeros([<span class="number">10</span>]))</span><br></pre></td></tr></table></figure><h3 id="Softmax-regression"><a href="#Softmax-regression" class="headerlink" title="Softmax regression"></a>Softmax regression</h3><p>关于Softmax可以阅读<a href="http://www.tensorfly.cn/tfdoc/tutorials/mnist_beginners.html" target="_blank" rel="noopener">这篇</a>或者<a href="http://neuralnetworksanddeeplearning.com/chap3.html" target="_blank" rel="noopener">这篇</a>.</p><p><img src="http://www.tensorfly.cn/tfdoc/images/mnist6.png" alt=""></p><p>整个回归模型：<br><img src="http://www.tensorfly.cn/tfdoc/images/softmax-regression-scalargraph.png" alt=""><br><img src="http://www.tensorfly.cn/tfdoc/images/mnist7.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># softmax</span></span><br><span class="line">y = tf.nn.softmax(tf.matmul(x, W)+b)</span><br></pre></td></tr></table></figure><h3 id="训练模型"><a href="#训练模型" class="headerlink" title="训练模型"></a>训练模型</h3><p>使用交叉熵损失函数，更多介绍看<a href="https://colah.github.io/posts/2015-09-Visual-Information/" target="_blank" rel="noopener">这篇</a>.<br><img src="http://www.tensorfly.cn/tfdoc/images/mnist10.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">y_ = tf.placeholder(<span class="string">"float"</span>, [<span class="keyword">None</span>, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意，这里的交叉熵不仅仅用来衡量单一的一对预测和真实值，而是所有100幅图片的交叉熵的总和</span></span><br><span class="line">cross_entropy = -tf.reduce_sum(y_*tf.log(y))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gradient descent and backprapagation</span></span><br><span class="line">train_step = tf.train.GradientDescentOptimizer(<span class="number">0.01</span>).minimize(cross_entropy)</span><br></pre></td></tr></table></figure><p>更多优化算法点击<a href="http://www.tensorfly.cn/tfdoc/api_docs/python/train.html#optimizers" target="_blank" rel="noopener">这里</a>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># init graph</span></span><br><span class="line">init = tf.global_variables_initializer()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    sess.run(init)</span><br><span class="line">    <span class="keyword">for</span> step <span class="keyword">in</span> range(<span class="number">1001</span>):</span><br><span class="line">        batch_xs, batch_ys = mnist.train.next_batch(<span class="number">100</span>)</span><br><span class="line">        feed_dict =&#123;x: batch_xs, y_:batch_ys&#125;</span><br><span class="line">        sess.run(train_step, feed_dict)</span><br></pre></td></tr></table></figure><h3 id="评估我们的模型"><a href="#评估我们的模型" class="headerlink" title="评估我们的模型"></a>评估我们的模型</h3><p>tf.argmax 是一个非常有用的函数，它能给出某个tensor对象在某一维上的其数据最大值所在的索引值。由于标签向量是由0,1组成，因此最大值1所在的索引位置就是类别标签，比如tf.argmax(y,1)返回的是模型对于任一输入x预测到的标签值，而 tf.argmax(y_,1) 代表正确的标签，我们可以用 tf.equal 来检测我们的预测是否真实标签匹配(索引位置一样表示匹配)。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    sess.run(init)</span><br><span class="line">    <span class="keyword">for</span> step <span class="keyword">in</span> range(<span class="number">1001</span>):</span><br><span class="line">        batch_xs, batch_ys = mnist.train.next_batch(<span class="number">100</span>)</span><br><span class="line">        feed_dict =&#123;x: batch_xs, y_:batch_ys&#125;</span><br><span class="line">        sess.run(train_step, feed_dict)</span><br><span class="line">        <span class="keyword">if</span> step%<span class="number">100</span>==<span class="number">0</span>:</span><br><span class="line">            correct_prediction = tf.equal(tf.argmax(y, <span class="number">1</span>), tf.argmax(y_, <span class="number">1</span>))</span><br><span class="line">            accuracy = tf.reduce_mean(tf.cast(correct_prediction, <span class="string">"float"</span>))</span><br><span class="line">            print(step, <span class="string">" train acc: "</span>, sess.run(accuracy, feed_dict))</span><br></pre></td></tr></table></figure><pre><code>0  train acc:  0.48100  train acc:  0.94200  train acc:  0.96300  train acc:  0.93400  train acc:  0.93500  train acc:  0.89600  train acc:  0.96700  train acc:  0.94800  train acc:  0.94900  train acc:  0.951000  train acc:  0.98</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    sess.run(init)</span><br><span class="line">    <span class="keyword">for</span> step <span class="keyword">in</span> range(<span class="number">1001</span>):</span><br><span class="line">        batch_xs, batch_ys = mnist.train.next_batch(<span class="number">100</span>)</span><br><span class="line">        feed_dict =&#123;x: batch_xs, y_:batch_ys&#125;</span><br><span class="line">        sess.run(train_step, feed_dict)</span><br><span class="line"><span class="comment">#         if step%100==0:</span></span><br><span class="line"><span class="comment">#             correct_prediction = tf.equal(tf.argmax(y, 1), tf.argmax(y_, 1))</span></span><br><span class="line"><span class="comment">#             accuracy = tf.reduce_mean(tf.cast(correct_prediction, "float"))</span></span><br><span class="line"><span class="comment">#             print(step, " train acc: ", sess.run(accuracy, feed_dict))</span></span><br><span class="line"><span class="comment">#   # for test set</span></span><br><span class="line">    correct_prediction = tf.equal(tf.argmax(y, <span class="number">1</span>), tf.argmax(y_, <span class="number">1</span>))</span><br><span class="line">    accuracy = tf.reduce_mean(tf.cast(correct_prediction, <span class="string">"float"</span>))</span><br><span class="line">    print(<span class="string">"Test acc:"</span>, sess.run(accuracy, feed_dict=&#123;x:mnist.test.images, y_:mnist.test.labels&#125;))</span><br></pre></td></tr></table></figure><pre><code>Test acc: 0.9138</code></pre><p>更多内容<a href="https://www.tensorflow.org/tutorials/" target="_blank" rel="noopener">https://www.tensorflow.org/tutorials/</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本文首先通过一个完整的线性回归的例子，展示了TensorFlow的基本使用，首先构造计算图graph，其中包含诸如<code>Variable</code>、<code>placeholder</code>等节点，以及节点之间的数学运算如矩阵乘法；接着对计算图初始化，<code>tf.global_variables_initializer()</code>，其中TensorFlow中很重要的就是回话session机制，通过会话来运行计算图；随后，通过会话进行训练，拟合并德大检测结果。</p><p>其次，使用TensorFlow完成了基于MNIST数据集，进行手写体识别的任务，并在测试集上实现了91%的正确率。<br>其完整过程，首先是准备数据，下载的数据被分为训练数据和测试数据。每种数据的基本单元都包含两部分，一部分是手写体图片，统一规格28x28，另一部分是对应的标记，来指出对应的数字，将原始图片展开向量表示，标记采用one-hot表示；<br>接着，构建softmax回归模型。使用梯度下降算法进行反向传播，最小化交叉熵损失进行训练。<br>最后，在测试机上测试，得到实验正确率指标，可以达到91%以上。</p>]]></content>
      
      <categories>
          
          <category> Machine Learning </category>
          
          <category> TensorFlow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mnist </tag>
            
            <tag> TensorFlow </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Code Highlight</title>
      <link href="/2018/08/11/code-hightlight/"/>
      <url>/2018/08/11/code-hightlight/</url>
      <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * This is some sample code to illustrate how things look!</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> Musician <span class="keyword">from</span> <span class="string">'./liverpool'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Paul</span> <span class="keyword">extends</span> <span class="title">Musician</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(bass) &#123;</span><br><span class="line">        <span class="keyword">super</span>(bass);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    get fullName() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Paul McCartney'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    perform() &#123;</span><br><span class="line">        <span class="keyword">this</span>.play(<span class="keyword">this</span>.instrument);</span><br><span class="line">        <span class="keyword">this</span>.sing();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Paul;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Projects </category>
          
          <category> hexo-theme-bootstrap-blog </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Code </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Numpy随机数1</title>
      <link href="/2018/08/11/Numpy%E9%9A%8F%E6%9C%BA%E6%95%B0/"/>
      <url>/2018/08/11/Numpy%E9%9A%8F%E6%9C%BA%E6%95%B0/</url>
      <content type="html"><![CDATA[<p>更多内容查看<a href="https://docs.scipy.org/doc/numpy/reference/routines.random.html" target="_blank" rel="noopener">这里</a></p><h2 id="Simple-random-data-常用随机函数"><a href="#Simple-random-data-常用随机函数" class="headerlink" title="Simple random data | 常用随机函数"></a>Simple random data | 常用随机函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rand(d0, d1, …, dn)</span></span><br><span class="line"><span class="comment"># random values in a given shape</span></span><br><span class="line">np.random.rand(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><pre><code>array([0.15771123])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.rand(<span class="number">3</span>, <span class="number">4</span>)</span><br></pre></td></tr></table></figure><pre><code>array([[0.17303082, 0.13546342, 0.96790769, 0.54289967],       [0.47752797, 0.3163813 , 0.33804729, 0.63760302],</code></pre><p>更多内容查看<a href="https://docs.scipy.org/doc/numpy/reference/routines.random.html" target="_blank" rel="noopener">这里</a></p><h2 id="Simple-random-data-常用随机函数-1"><a href="#Simple-random-data-常用随机函数-1" class="headerlink" title="Simple random data | 常用随机函数"></a>Simple random data | 常用随机函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><h3 id="rand-d0-d1-…-dn"><a href="#rand-d0-d1-…-dn" class="headerlink" title="rand(d0, d1, …, dn)"></a>rand(d0, d1, …, dn)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rand(d0, d1, …, dn)</span></span><br><span class="line"><span class="comment"># random values in a given shape</span></span><br><span class="line">np.random.rand(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><pre><code>array([0.97299322])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.rand(<span class="number">3</span>, <span class="number">4</span>)</span><br></pre></td></tr></table></figure><pre><code>array([[0.81969546, 0.63076449, 0.70050141, 0.28701361],       [0.5909755 , 0.10265285, 0.03841936, 0.04747027],       [0.50586629, 0.33692611, 0.18006999, 0.37508064]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.rand(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><pre><code>array([0.4027442 , 0.29275407, 0.15175853, 0.76296697, 0.84970737])</code></pre><h3 id="正态分布随机数-randn-d0-d1-…-dn"><a href="#正态分布随机数-randn-d0-d1-…-dn" class="headerlink" title="正态分布随机数 randn(d0, d1, …, dn)"></a>正态分布随机数 randn(d0, d1, …, dn)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># randn(d0, d1, …, dn)</span></span><br><span class="line"><span class="comment"># return a sample or samples from standard norma sidtribution</span></span><br><span class="line">np.random.randn(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><pre><code>array([0.68010349])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.randn(<span class="number">4</span>)</span><br></pre></td></tr></table></figure><pre><code>array([-0.22561174, -0.12611506,  1.42778485,  0.69267162])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.randn(<span class="number">2</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><pre><code>array([[ 1.09486998, -0.12217683],       [-0.26184258,  0.70775913]])</code></pre><p><em>Note: We can use matplotlib to show the distrubution</em></p><h3 id="随机整数"><a href="#随机整数" class="headerlink" title="随机整数"></a>随机整数</h3><p>randint(low[, high, size, dtype]) / np.random.random_integers(2)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># randint(low[, high, size, dtype])</span></span><br><span class="line"><span class="comment"># return random integers from low(inclusive) to high(exclusive)</span></span><br><span class="line">np.random.randint(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><pre><code>0</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.randint(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><pre><code>2</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.randint(<span class="number">100</span>, <span class="number">1000</span>)</span><br></pre></td></tr></table></figure><pre><code>945</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.randint(<span class="number">0</span>, <span class="number">100</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure><pre><code>array([76, 86, 29, 40, 76])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.randint(<span class="number">0</span>, <span class="number">100</span>, (<span class="number">3</span>, <span class="number">3</span>))</span><br></pre></td></tr></table></figure><pre><code>array([[88, 50, 90],       [64, 69, 57],       [ 2, 10, 95]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># random_integers(low[, high, size])</span></span><br><span class="line"><span class="comment"># random integers of type np.int between low and high, inclusive</span></span><br><span class="line">np.random.random_integers(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># This function is deprecated. Please call randint(l, r + 1) instead</span></span><br></pre></td></tr></table></figure><pre><code>D:\Anaconda3\Anaconda3_py36\lib\site-packages\ipykernel_launcher.py:3: DeprecationWarning: This function is deprecated. Please call randint(1, 2 + 1) instead  This is separate from the ipykernel package so we can avoid doing imports until1</code></pre><h3 id="随机小数"><a href="#随机小数" class="headerlink" title="随机小数"></a>随机小数</h3><ul><li>random_sample([size]) </li><li>random([size])</li><li>ranf([size])</li><li>sample([size])</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># random_sample([size])</span></span><br><span class="line"><span class="comment"># return random floats in the half-open interval[0.0, 1.0)</span></span><br><span class="line">np.random.random_sample(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><pre><code>array([0.42922028])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.random_sample((<span class="number">3</span>,<span class="number">3</span>))</span><br></pre></td></tr></table></figure><pre><code>array([[0.13911191, 0.29153576, 0.38330187],       [0.39095818, 0.37114282, 0.69224038],       [0.3664121 , 0.02533538, 0.76235701]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># random([size])</span></span><br><span class="line"><span class="comment"># return random floats in the half-open interval[0.0, 1.0)</span></span><br><span class="line">np.random.random(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><pre><code>array([0.57758511])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.random((<span class="number">2</span>, <span class="number">2</span>))</span><br></pre></td></tr></table></figure><pre><code>array([[0.89365816, 0.10505705],       [0.76704421, 0.27889437]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ranf([size])</span></span><br><span class="line"><span class="comment"># return random floats int the half-open interval [0.0, 1.0)</span></span><br><span class="line">np.random.ranf(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><pre><code>array([0.64518204])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.ranf((<span class="number">3</span>,<span class="number">4</span>))</span><br></pre></td></tr></table></figure><pre><code>array([[0.10753966, 0.70902024, 0.63834775, 0.65623879],       [0.71709776, 0.34437971, 0.42639926, 0.70715686],       [0.12977266, 0.20338805, 0.94316098, 0.3082274 ]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sample([size])</span></span><br><span class="line"><span class="comment"># return random floats int the half-open interval [0.0, 1.0)</span></span><br><span class="line">np.random.sample(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><pre><code>array([0.95896772, 0.64870791])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.sample((<span class="number">2</span>, <span class="number">2</span>))</span><br></pre></td></tr></table></figure><pre><code>array([[0.91634732, 0.95899658],       [0.59189998, 0.53045256]])</code></pre><h3 id="自定义随机"><a href="#自定义随机" class="headerlink" title="自定义随机"></a>自定义随机</h3><ul><li>choice(a[, size, replace, p])</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># choice(a[, size, replace, p])</span></span><br><span class="line"><span class="comment"># generate a random sample from a given 1-D array</span></span><br><span class="line">np.random.choice([<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>],<span class="number">3</span>)</span><br></pre></td></tr></table></figure><pre><code>array([3, 1, 3])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.choice([<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>],<span class="number">3</span>, replace=<span class="keyword">False</span>)</span><br></pre></td></tr></table></figure><pre><code>array([1, 2, 3])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.choice([<span class="string">"cat"</span>, <span class="string">"dog"</span>, <span class="string">"fish"</span>, <span class="string">"mouse"</span>, <span class="string">"bird"</span>],(<span class="number">2</span>, <span class="number">2</span>), replace=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><pre><code>array([[&#39;cat&#39;, &#39;dog&#39;],       [&#39;bird&#39;, &#39;dog&#39;]], dtype=&#39;&lt;U5&#39;)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># p represents properties of the elements of the 1-D array</span></span><br><span class="line"><span class="comment"># sum of p must be 1.0</span></span><br><span class="line">np.random.choice([<span class="string">"cat"</span>, <span class="string">"dog"</span>, <span class="string">"fish"</span>, <span class="string">"mouse"</span>, <span class="string">"bird"</span>],(<span class="number">2</span>, <span class="number">2</span>), replace=<span class="keyword">True</span>,</span><br><span class="line">                p=[<span class="number">0.1</span>, <span class="number">0.5</span>, <span class="number">0.3</span>, <span class="number">0.05</span>, <span class="number">0.05</span>])</span><br></pre></td></tr></table></figure><pre><code>array([[&#39;fish&#39;, &#39;dog&#39;],       [&#39;dog&#39;, &#39;fish&#39;]], dtype=&#39;&lt;U5&#39;)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bytes(length)</span></span><br><span class="line"><span class="comment"># return random bytes</span></span><br><span class="line">np.random.bytes(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><pre><code>b&#39;\x8c&#39;</code></pre><h2 id="Permutations-排列"><a href="#Permutations-排列" class="headerlink" title="Permutations | 排列"></a>Permutations | 排列</h2><ul><li>shuffle(x)</li><li>permutation(x)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shuffle(x)</span></span><br><span class="line"><span class="comment"># modify a sequence in-place by shuffling its contents</span></span><br><span class="line"><span class="comment"># 将序列在原地打乱</span></span><br><span class="line">x = np.arange(<span class="number">11</span>)</span><br><span class="line">print(<span class="string">'----befor shuffle x----'</span>)</span><br><span class="line">print(x)</span><br><span class="line">print(<span class="string">'----after shuffle x----'</span>)</span><br><span class="line">np.random.shuffle(x)</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure><pre><code>----befor shuffle x----[ 0  1  2  3  4  5  6  7  8  9 10]----after shuffle x----[ 8  1  5  4  0  2  3  9  7  6 10]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># permutation(x)</span></span><br><span class="line"><span class="comment"># randomly permute a sequence, or return a permuted range</span></span><br><span class="line">x = np.arange(<span class="number">11</span>)</span><br><span class="line">print(<span class="string">"---permutation----"</span>)</span><br><span class="line">print(np.random.permutation(x))</span><br><span class="line">print(<span class="string">"---x----"</span>)</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure><pre><code>---permutation----[ 9  4  6  0  5 10  8  3  7  2  1]---x----[ 0  1  2  3  4  5  6  7  8  9 10]</code></pre><h2 id="Random-generator-随机数生成器"><a href="#Random-generator-随机数生成器" class="headerlink" title="Random generator | 随机数生成器"></a>Random generator | 随机数生成器</h2><p>如果设置了seed，每次重新运行时生成的随机数都是确定和上次相同的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># RandomState([seed])</span></span><br><span class="line"><span class="comment"># container for the Mersenne Twister pseudo-random number generator</span></span><br><span class="line">np.random.RandomState(<span class="number">1</span>)</span><br><span class="line">np.random.random(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><pre><code>array([0.58048047, 0.57948883, 0.82388234, 0.77501925, 0.70183176])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># seed([seed])</span></span><br><span class="line"><span class="comment"># seed the generator</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">np.random.random(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><pre><code>array([0.5488135 , 0.71518937, 0.60276338, 0.54488318, 0.4236548 ])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># get_state()</span></span><br><span class="line"><span class="comment"># return a tuple representing the internal state of the generator </span></span><br><span class="line"><span class="comment"># np.random.get_state()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># set_state(state)</span></span><br><span class="line"><span class="comment"># set the interna state of the generator from a tuple</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Languages </category>
          
          <category> Python </category>
          
          <category> Numpy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Numpy </tag>
            
            <tag> random </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Emoji</title>
      <link href="/2018/08/10/emoji-text/"/>
      <url>/2018/08/10/emoji-text/</url>
      <content type="html"><![CDATA[<p>Input emoji with syntax <code>:smile:</code>.  Sad, it is failed.</p><p>😂😁</p><p>Use inputs(eg. MS default input) which can input emoji directly, this is the easiest way.</p><p><a href="https://www.webfx.com/tools/emoji-cheat-sheet/" target="_blank" rel="noopener">Here</a> to know more.</p>]]></content>
      
      <categories>
          
          <category> Projects </category>
          
          <category> hexo-theme-bootstrap-blog </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Emoji </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mathjax</title>
      <link href="/2018/08/10/mathjax-test/"/>
      <url>/2018/08/10/mathjax-test/</url>
      <content type="html"><![CDATA[<p>This post is used for testing mathjax(latex) support.</p><h2 id="Inline-math"><a href="#Inline-math" class="headerlink" title="Inline math"></a>Inline math</h2><p><strong>Use <code>$...$</code></strong>, example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$\lim_&#123;x \to \infty&#125; \exp(-x) = 0$</span><br></pre></td></tr></table></figure><p>Writing LaTex like: <script type="math/tex">\lim_{x \to \infty} \exp(-x) = 0</script></p><h2 id="Displayed-formulas"><a href="#Displayed-formulas" class="headerlink" title="Displayed formulas"></a><strong>Displayed formulas</strong></h2><p><strong>Use <code>$$...$$</code></strong> , example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$\sum_&#123;i=0&#125;^n i^2 = \frac&#123;(n^2+n)(2n+1)&#125;&#123;6&#125;$$</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}</script><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">    \begin&#123;matrix&#125;</span><br><span class="line">    <span class="number">1</span> &amp; x &amp; x^<span class="number">2</span> \\</span><br><span class="line">    <span class="number">1</span> &amp; y &amp; y^<span class="number">2</span> \\</span><br><span class="line">    <span class="number">1</span> &amp; z &amp; z^<span class="number">2</span> \\</span><br><span class="line">    \end&#123;matrix&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\begin{matrix}    1 & x & x^2 \\    1 & y & y^2 \\    1 & z & z^2 \\    \end{matrix}</script><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;align&#125;</span><br><span class="line">\sqrt&#123;37&#125; &amp; = \sqrt&#123;\frac&#123;73^2-1&#125;&#123;12^2&#125;&#125; \\</span><br><span class="line"> &amp; = \sqrt&#123;\frac&#123;73^2&#125;&#123;12^2&#125;\cdot\frac&#123;73^2-1&#125;&#123;73^2&#125;&#125; \\ </span><br><span class="line"> &amp; = \sqrt&#123;\frac&#123;73^2&#125;&#123;12^2&#125;&#125;\sqrt&#123;\frac&#123;73^2-1&#125;&#123;73^2&#125;&#125; \\</span><br><span class="line"> &amp; = \frac&#123;73&#125;&#123;12&#125;\sqrt&#123;1 - \frac&#123;1&#125;&#123;73^2&#125;&#125; \\ </span><br><span class="line"> &amp; \approx \frac&#123;73&#125;&#123;12&#125;\left(<span class="number">1</span> - \frac&#123;1&#125;&#123;2\cdot73^2&#125;\right)</span><br><span class="line">\end&#123;align&#125;</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\begin{align}\sqrt{37} & = \sqrt{\frac{73^2-1}{12^2}} \\ & = \sqrt{\frac{73^2}{12^2}\cdot\frac{73^2-1}{73^2}} \\  & = \sqrt{\frac{73^2}{12^2}}\sqrt{\frac{73^2-1}{73^2}} \\ & = \frac{73}{12}\sqrt{1 - \frac{1}{73^2}} \\  & \approx \frac{73}{12}\left(1 - \frac{1}{2\cdot73^2}\right)\end{align}</script><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;array&#125;&#123;c|lcr&#125;</span><br><span class="line">n &amp; \text&#123;Left&#125; &amp; \text&#123;Center&#125; &amp; \text&#123;Right&#125; \\</span><br><span class="line">\hline</span><br><span class="line"><span class="number">1</span> &amp; <span class="number">0.24</span> &amp; <span class="number">1</span> &amp; <span class="number">125</span> \\</span><br><span class="line"><span class="number">2</span> &amp; <span class="number">-1</span> &amp; <span class="number">189</span> &amp; <span class="number">-8</span> \\</span><br><span class="line"><span class="number">3</span> &amp; <span class="number">-20</span> &amp; <span class="number">2000</span> &amp; <span class="number">1</span>+<span class="number">10</span>i</span><br><span class="line">\end&#123;array&#125;</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\begin{array}{c|lcr}n & \text{Left} & \text{Center} & \text{Right} \\\hline1 & 0.24 & 1 & 125 \\2 & -1 & 189 & -8 \\3 & -20 & 2000 & 1+10i\end{array}</script><p>More information can be found <a href="https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">Here</a>.</p><p>To know how to let hexo support Matjax, you can read <a href="https://ranmaosong.github.io/2017/11/29/hexo-support-mathjax/" target="_blank" rel="noopener">this</a>.</p>]]></content>
      
      <categories>
          
          <category> Projects </category>
          
          <category> hexo-theme-bootstrap-blog </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Categories</title>
      <link href="/2018/08/08/categories/"/>
      <url>/2018/08/08/categories/</url>
      <content type="html"><![CDATA[<p>This post contains 3 categories. Make sure the theme can display all of the categories.</p>]]></content>
      
      <categories>
          
          <category> Projects </category>
          
          <category> hexo-theme-bootstrap-blog </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Elements</title>
      <link href="/2018/08/08/elements/"/>
      <url>/2018/08/08/elements/</url>
      <content type="html"><![CDATA[<p>The purpose of this post is to make sure all HTML elements can display properly.</p><hr><h1 id="Heading-1"><a href="#Heading-1" class="headerlink" title="Heading 1"></a>Heading 1</h1><h2 id="Heading-2"><a href="#Heading-2" class="headerlink" title="Heading 2"></a>Heading 2</h2><h3 id="Heading-3"><a href="#Heading-3" class="headerlink" title="Heading 3"></a>Heading 3</h3><h4 id="Heading-4"><a href="#Heading-4" class="headerlink" title="Heading 4"></a>Heading 4</h4><h5 id="Heading-5"><a href="#Heading-5" class="headerlink" title="Heading 5"></a>Heading 5</h5><h6 id="Heading-6"><a href="#Heading-6" class="headerlink" title="Heading 6"></a>Heading 6</h6><hr><h2 id="Paragraph"><a href="#Paragraph" class="headerlink" title="Paragraph"></a>Paragraph</h2><p>Lorem ipsum dolor sit amet, <a href="">test link</a> consectetur adipiscing elit. <strong>Strong text</strong> pellentesque ligula commodo viverra vehicula. <em>Italic text</em> at ullamcorper enim. Morbi a euismod nibh. <u>Underline text</u> non elit nisl. <del>Deleted text</del> tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam laoreet dui odio, id tempus justo tincidunt id. Phasellus scelerisque nunc sed nunc ultricies accumsan.</p><p>Interdum et malesuada fames ac ante ipsum primis in faucibus. <code>Sed erat diam</code>, blandit eget felis aliquam, rhoncus varius urna. Donec tellus sapien, sodales eget ante vitae, feugiat ullamcorper urna. Praesent auctor dui vitae dapibus eleifend. Proin viverra mollis neque, ut ullamcorper elit posuere eget.</p><blockquote><p>Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.</p></blockquote><p>Maecenas ornare arcu at mi suscipit, non molestie tortor ultrices. Aenean convallis, diam et congue ultricies, erat magna tincidunt orci, pulvinar posuere mi sapien ac magna. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent vitae placerat mauris. Nullam laoreet ante posuere tortor blandit auctor. Sed id ligula volutpat leo consequat placerat. Mauris fermentum dolor sed augue malesuada sollicitudin. Vivamus ultrices nunc felis, quis viverra orci eleifend ut. Donec et quam id urna cursus posuere. Donec elementum scelerisque laoreet.</p><h2 id="List-Types"><a href="#List-Types" class="headerlink" title="List Types"></a>List Types</h2><h3 id="Definition-List-dl"><a href="#Definition-List-dl" class="headerlink" title="Definition List (dl)"></a>Definition List (dl)</h3><dl><dt>Definition List Title</dt><dd>This is a definition list division.</dd></dl><h3 id="Ordered-List-ol"><a href="#Ordered-List-ol" class="headerlink" title="Ordered List (ol)"></a>Ordered List (ol)</h3><ol><li>List Item 1</li><li>List Item 2</li><li>List Item 3</li></ol><h3 id="Unordered-List-ul"><a href="#Unordered-List-ul" class="headerlink" title="Unordered List (ul)"></a>Unordered List (ul)</h3><ul><li>List Item 1</li><li>List Item 2</li><li>List Item 3</li></ul><h2 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h2><div class="table-container"><table><thead><tr><th>Table Header 1</th><th>Table Header 2</th><th>Table Header 3</th></tr></thead><tbody><tr><td>Division 1</td><td>Division 2</td><td>Division 3</td></tr><tr><td>Division 1</td><td>Division 2</td><td>Division 3</td></tr><tr><td>Division 1</td><td>Division 2</td><td>Division 3</td></tr></tbody></table></div><h2 id="Misc-Stuff-abbr-acronym-sub-sup-etc"><a href="#Misc-Stuff-abbr-acronym-sub-sup-etc" class="headerlink" title="Misc Stuff - abbr, acronym, sub, sup, etc."></a>Misc Stuff - abbr, acronym, sub, sup, etc.</h2><p>Lorem <sup>superscript</sup> dolor <sub>subscript</sub> amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. <cite>cite</cite>. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. <acronym title="National Basketball Association">NBA</acronym> Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.  <abbr title="Avenue">AVE</abbr></p>]]></content>
      
      <categories>
          
          <category> Projects </category>
          
          <category> hexo-theme-bootstrap-blog </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Elements </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Gallery</title>
      <link href="/2018/08/08/gallery/"/>
      <url>/2018/08/08/gallery/</url>
      <content type="html"><![CDATA[<p>A photo gallery example…</p>]]></content>
      
      <categories>
          
          <category> Projects </category>
          
          <category> hexo-theme-bootstrap-blog </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Photos </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo Theme: Bootstrap Blog</title>
      <link href="/2018/08/08/hexo-theme-bootstrap-blog/"/>
      <url>/2018/08/08/hexo-theme-bootstrap-blog/</url>
      <content type="html"><![CDATA[<p>A simple <a href="http://getbootstrap.com/" target="_blank" rel="noopener">Bootstrap</a> v3 blog theme for <a href="http://zespia.tw/hexo/" target="_blank" rel="noopener">Hexo</a>.</p><p>Based on the <a href="http://getbootstrap.com/examples/blog/" target="_blank" rel="noopener">official Bootstrap Blog example template</a>.</p><p>The theme and example site source code can be found on Github:</p><ul><li><a href="https://github.com/liuqidev/hexo-theme-bootstrap-blog" target="_blank" rel="noopener">Theme package source code</a></li><li><a href="https://github.com/liuqidev/hexo-theme-bootstrap-blog" target="_blank" rel="noopener">Example site source content</a></li><li><a href="https://github.com/liuqidev/hexo-theme-bootstrap-blog" target="_blank" rel="noopener">Example site generated output</a></li><li><a href="https://github.com/liuqidev/hexo-theme-bootstrap-blog" target="_blank" rel="noopener">Theme announcement blog post</a></li></ul><a id="more"></a><h2 id="Setup-Instructions"><a href="#Setup-Instructions" class="headerlink" title="Setup Instructions"></a>Setup Instructions</h2><h3 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h3><p><strong>This theme requires Hexo 2.4 and above.</strong></p><p>1) Install theme:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/cgmartin/hexo-theme-bootstrap-blog.git \</span><br><span class="line">            themes/bootstrap-blog</span><br></pre></td></tr></table></figure><p>2) (optional) Install <a href="https://github.com/wzpan/hexo-tag-bootstrap" target="_blank" rel="noopener">hexo-tag-bootstrap</a> for more Bootstrap tags (textcolors, buttons, labels, badges, etc.):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-tag-bootstrap --save</span><br></pre></td></tr></table></figure><p>3) (optional) Install <a href="https://github.com/akarzim/hexo-tag-fontawesome" target="_blank" rel="noopener">hexo-tag-fontawesome</a> for placing Font Awesome icons in your Markdown:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-tag-fontawesome --save</span><br></pre></td></tr></table></figure><h3 id="Enable"><a href="#Enable" class="headerlink" title="Enable"></a>Enable</h3><p>Modify the <code>theme</code> setting in <code>_config.yml</code> to <code>bootstrap-blog</code>.</p><h3 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/bootstrap-blog</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># File: themes/bootstrap-blog/_config.yml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Header</span></span><br><span class="line"><span class="attr">navbar_brand:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  Home:</span> <span class="string">index.html</span></span><br><span class="line"><span class="attr">  Archives:</span> <span class="string">archives/</span></span><br><span class="line"><span class="attr">  Categories:</span> <span class="string">categories/</span></span><br><span class="line">  <span class="comment"># Projects: projects/</span></span><br><span class="line"><span class="attr">  About:</span> <span class="string">about/</span></span><br><span class="line">  <span class="comment"># Blogroll: blogroll/</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Content</span></span><br><span class="line"><span class="attr">excerpt_link:</span> <span class="string">Read</span> <span class="string">more...</span></span><br><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">wordcount:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">viewcount:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">timecost:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sidebar</span></span><br><span class="line"><span class="attr">widgets:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">translate</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">recent_posts</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">about</span>         <span class="comment"># See also: `about_content`</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">category</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">archive</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">tag</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">tagcloud</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">search</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">about_widget_content:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">  &lt;p&gt;Etiam porta &lt;em&gt;sem malesuada magna&lt;/em&gt; mollis euismod.</span></span><br><span class="line"><span class="string">  Cras mattis consectetur purus sit amet fermentum. Aenean</span></span><br><span class="line"><span class="string">  lacinia bibendum nulla sed consectetur.&lt;/p&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># widget behavior</span></span><br><span class="line"><span class="string"></span><span class="attr">archive_type:</span> <span class="string">'monthly'</span></span><br><span class="line"><span class="attr">show_count:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Miscellaneous</span></span><br><span class="line"><span class="attr">google_analytics:</span> <span class="string">UA-122713769-1</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">images/icon.png</span></span><br><span class="line"><span class="attr">twitter_id:</span></span><br><span class="line"><span class="attr">google_plus:</span> <span class="number">112373242775367333102</span></span><br><span class="line"><span class="attr">fb_admins:</span></span><br><span class="line"><span class="attr">fb_app_id:</span></span><br><span class="line"><span class="comment"># baidu analytics</span></span><br><span class="line"><span class="attr">baidu_tongji:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://github.com/hustcc/canvas-nest.js</span></span><br><span class="line"><span class="attr">canvas_nest:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://github.com/imsun/gitment</span></span><br><span class="line"><span class="comment">#gitment: false</span></span><br><span class="line"><span class="attr">gitment:</span></span><br><span class="line"><span class="attr">  owner:</span> </span><br><span class="line"><span class="attr">  repo:</span> </span><br><span class="line"><span class="attr">  client_id:</span> </span><br><span class="line"><span class="attr">  client_secret:</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Valine Comment system. https://valine.js.org</span></span><br><span class="line"><span class="attr">valine:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># valine:</span></span><br><span class="line">  <span class="comment"># enable: true # 如果你想使用valine，请将值设置为 true</span></span><br><span class="line">  <span class="comment"># appId: kBrTfD8l4RFzueSAt65hASek-gzGzoHsz # your leancloud appId</span></span><br><span class="line">  <span class="comment"># appKey: AFsAfwfHqW6iEHkAc3TjYEzh # your leancloud appKey</span></span><br><span class="line">  <span class="comment"># notify: false # Mail notify</span></span><br><span class="line">  <span class="comment"># verify: false # Verify code</span></span><br><span class="line">  <span class="comment"># avatar: mm # Gravatar style : mm/identicon/monsterid/wavatar/retro/hide</span></span><br><span class="line">  <span class="comment"># placeholder: 我有话想说~ # Comment Box placeholder</span></span><br><span class="line">  <span class="comment"># guest_info: nick,mail # Comment header info</span></span><br><span class="line">  <span class="comment"># pageSize: 20 # comment list page size</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># livere https://livere.com/</span></span><br><span class="line"><span class="attr">livere:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># livere:</span></span><br><span class="line">  <span class="comment"># dataUID: MTAyMC8zODU5MS8xNTExOQ==</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># http://www.daovoice.io</span></span><br><span class="line"><span class="attr">dao_voice:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># dao_voice:</span></span><br><span class="line">  <span class="comment"># appId: a2c8df52</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">eyes_protected:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># dynamic_title</span></span><br><span class="line"><span class="comment"># title_change: false</span></span><br><span class="line"><span class="attr">title_change:</span></span><br><span class="line"><span class="attr">  normal:</span> <span class="string">o(∩_∩)o</span></span><br><span class="line"><span class="attr">  leave:</span> <span class="string">Opps...●﹏●</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Miscellaneous</span></span><br><span class="line"><span class="attr">google_analytics:</span></span><br><span class="line"><span class="attr">favicon:</span></span><br><span class="line"><span class="attr">twitter:</span></span><br><span class="line"><span class="attr">google_plus:</span></span><br></pre></td></tr></table></figure><ul><li><strong>navbar_brand</strong> - The HTML content for an optional <a href="http://getbootstrap.com/components/#navbar-brand-image" target="_blank" rel="noopener">“navbar-brand”</a>. Can be text or an image. <code>false</code> to hide.</li><li><strong>menu</strong> - Navigation menu (map of Titles to URLs)</li><li><strong>rss</strong> - RSS link (ie. “/atom.xml”)</li><li><strong>excerpt_link</strong> - “Read More” link at the bottom of excerpted articles. <code>false</code> to hide the link.</li><li><strong>fancybox</strong> - Enable <a href="http://fancyapps.com/fancybox/" target="_blank" rel="noopener">Fancybox</a> for images</li><li><strong>widgets</strong> - Enable sidebar widgets (more info below)</li><li><strong>about_widget_content</strong> - The HTML content for the “About” sidebar widget (more info below)</li><li><strong>google_analytics</strong> - Google Analytics ID</li><li><strong>favicon</strong> - Favicon path (ie. ‘/favicon.ico’)</li><li><strong>twitter_id</strong> - Twitter ID of the author (ie. <code>@c_g_martin</code>)</li><li><strong>google_plus</strong> - Google+ profile link</li></ul><p>Instead of editing the layout’s configuration file directly, you can override the theme settings from your project’s root <code>_config.yml</code>, ie.:<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme_config:</span></span><br><span class="line">  <span class="comment"># Header</span></span><br><span class="line"><span class="attr">  navbar_brand:</span> <span class="string">&lt;img</span> <span class="string">src="/navbrand.png"&gt;</span></span><br><span class="line"><span class="attr">  menu:</span></span><br><span class="line"><span class="attr">    Home:</span> <span class="string">index.html</span></span><br><span class="line"><span class="attr">    Archives:</span> <span class="string">archives/</span></span><br><span class="line">    <span class="string">'Another Page'</span><span class="string">:</span> <span class="string">page/index.html</span></span><br><span class="line"><span class="attr">  widgets:</span></span><br><span class="line"><span class="bullet">   -</span> <span class="string">about</span></span><br><span class="line"><span class="bullet">   -</span> <span class="string">category</span></span><br><span class="line"><span class="bullet">   -</span> <span class="string">archive</span></span><br><span class="line"><span class="bullet">   -</span> <span class="string">recent_posts</span></span><br><span class="line"><span class="bullet">   -</span> <span class="string">tag</span></span><br><span class="line"><span class="attr">  about_widget_content:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;This is &lt;strong&gt;custom content&lt;/strong&gt; for the</span></span><br><span class="line"><span class="string">    "about" sidebar widget.&lt;/p&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><h3 id="Front-Matter-Extras"><a href="#Front-Matter-Extras" class="headerlink" title="Front-Matter Extras"></a>Front-Matter Extras</h3><p>Optional settings in the front-matter can be added for various effects:<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Author</span> <span class="string">Name</span>   <span class="comment"># displays the post's author</span></span><br><span class="line"><span class="attr">photos:</span>               <span class="comment"># displays a Bootstrap thumbnail gallery</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">images/HNCK0537.jpg</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">images/HNCK6173.jpg</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></p><h3 id="Fancybox"><a href="#Fancybox" class="headerlink" title="Fancybox"></a>Fancybox</h3><p>This theme uses <a href="http://fancyapps.com/fancybox/" target="_blank" rel="noopener">Fancybox</a> to showcase your photos. You can use the image Markdown syntax or fancybox tag plugin to add your photos.</p><p>Usage:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">![img caption](img url)</span><br><span class="line"></span><br><span class="line">~or~</span><br><span class="line"></span><br><span class="line">&#123;% fancybox img_url [img_thumbnail] [img_caption] %&#125;</span><br></pre></td></tr></table></figure></p><h3 id="Callouts"><a href="#Callouts" class="headerlink" title="Callouts"></a>Callouts</h3><p>A custom tag for the <a href="http://cpratt.co/twitter-bootstrap-callout-css-styles/" target="_blank" rel="noopener">Bootstrap “callout” style</a> is available for use.</p><p>Usage:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% callout [type:default|primary|success|info|warning|danger] %&#125;</span><br><span class="line">...content...</span><br><span class="line">&#123;% endcallout %&#125;</span><br></pre></td></tr></table></figure></p><p>Example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% callout info %&#125;</span><br><span class="line">#### &#123;% fa info-circle %&#125; Info tip</span><br><span class="line">This is some callout content</span><br><span class="line">&#123;% endcallout %&#125;</span><br></pre></td></tr></table></figure></p><h3 id="Sidebar"><a href="#Sidebar" class="headerlink" title="Sidebar"></a>Sidebar</h3><p>This theme provides 6 built-in widgets that can be displayed in the sidebar:</p><ul><li>about *</li><li>category</li><li>tag</li><li>tagcloud</li><li>archives</li><li>recent_posts</li></ul><p>All widgets are enabled and displayed by default. You can toggle them on/off with the <code>widgets</code> setting in the theme’s _config.yml.</p><p>* <strong>NOTE</strong>: The “about” widget contains static Lorem Ipsum text by default. You’ll want to edit the <code>about_widget_content</code> setting for your site or disable the widget in the theme config. You can also modify the widget file itself to include contents from a Markdown page:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- file: ./layout/_widget/about.ejs --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sidebar-module sidebar-module-inset"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h4</span>&gt;</span>About<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%-</span> <span class="attr">site.pages</span>['<span class="attr">data</span>']<span class="attr">.find</span>(<span class="attr">function</span>(<span class="attr">p</span>) &#123; <span class="attr">return</span> <span class="attr">p.path</span> === <span class="string">'about/index.html'</span>; &#125;)<span class="attr">.content</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>…then run <code>hexo new page about</code> to create the Markdown page.</p><h3 id="Bootstrap-Paginator-Helper"><a href="#Bootstrap-Paginator-Helper" class="headerlink" title="Bootstrap Paginator Helper"></a>Bootstrap Paginator Helper</h3><p>A custom <code>bs_paginator()</code> helper is used to produce <a href="http://getbootstrap.com/components/#pagination" target="_blank" rel="noopener">Bootstrap-compatible pagination markup</a>. It is a drop-in replacement for Hexo’s built-in <code>paginator()</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- bs_paginator(&#123;</span><br><span class="line">      prev_text: &apos;&lt;i class=&quot;fa fa-chevron-left&quot;&gt;&lt;/i&gt; Prev&apos;,</span><br><span class="line">      next_text: &apos;Next &lt;i class=&quot;fa fa-chevron-right&quot;&gt;&lt;/i&gt;&apos;</span><br><span class="line">    &#125;) %&gt;</span><br></pre></td></tr></table></figure><h2 id="Development"><a href="#Development" class="headerlink" title="Development"></a>Development</h2><p>The <a href="https://github.com/hexojs/hexo-theme-landscape" target="_blank" rel="noopener">default Landscape Hexo theme</a> was used as the starting point and heavily edited for this theme.</p><p>The Landscape Stylus styles have been replaced with standard CSS files which override <code>bootstrap.min.css</code>. Stylus is used only for bundling the CSS files (see <code>./source/css/styles.styl</code>). Feel free to convert the CSS to your pre-processor of choice (Stylus, LESS, Sass, etc.).</p><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p><a href="http://cgm.mit-license.org/" target="_blank" rel="noopener">MIT License</a></p><p>Copyright © 2016 Christopher Martin</p><p>Copyright © 2018 lqdev</p>]]></content>
      
      <categories>
          
          <category> Projects </category>
          
          <category> hexo-theme-bootstrap-blog </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Theme </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>日本語テスト</title>
      <link href="/2018/08/08/%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%83%86%E3%82%B9%E3%83%88/"/>
      <url>/2018/08/08/%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%83%86%E3%82%B9%E3%83%88/</url>
      <content type="html"><![CDATA[<p>This is a Japanese test post.</p><p>私は昨日ついにその助力家というのの上よりするたなけれ。</p><p>最も今をお話団はちょうどこの前後なかろでくらいに困りがいるたをは帰着考えたなかって、そうにもするでうたらない。</p><a id="more"></a><p>がたを知っないはずも同時に九月をいよいよたありた。</p><p>もっと槙さんにぼんやり金少し説明にえた自分大した人私か影響にというお関係たうませないが、この次第も私か兄具合に使うて、槙さんののに当人のあなたにさぞご意味と行くて私個人が小尊敬を聴いように同時に同反抗に集っだうて、いよいよまず相当へあっうからいだ事をしでなけれ。</p><blockquote><p>それでそれでもご時日をしはずはたったいやと突き抜けるますて、その元がは行ったてという獄を尽すていけですた。</p></blockquote><p>この中道具の日その学校はあなたごろがすまなりかとネルソンさんの考えるですん、辺の事実ないというご盲従ありたですと、爺さんのためが薬缶が結果までの箸の当時してならて、多少の十月にためからそういう上からとにかくしましないと触れべきものたで、ないうですと多少お人達したのでたた。</p><p><em>From <a href="http://lipsum.sugutsukaeru.jp/index.cgi" target="_blank" rel="noopener">すぐ使えるダミーテキスト - 日本語 Lorem ipsum</a></em></p>]]></content>
      
      <categories>
          
          <category> Projects </category>
          
          <category> hexo-theme-bootstrap-blog </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>中文测试</title>
      <link href="/2018/08/08/%E4%B8%AD%E6%96%87%E6%B8%AC%E8%A9%A6/"/>
      <url>/2018/08/08/%E4%B8%AD%E6%96%87%E6%B8%AC%E8%A9%A6/</url>
      <content type="html"><![CDATA[<p>This is a Chinese test post.</p><p>当朝大学士，统共有五位，朕不得不罢免四位，六部尚书，朕不得不罢免三位。</p><p>看看这七个人吧，哪个不是两鬓半百，哪个不是朝廷的栋梁，哪个不是朕的儿女亲家。</p><p>他们烂了，朕心要碎了。</p><p>祖宗把江山交到朕的手里，却搞成了这个样子，朕是痛心疾首。</p><p>朕有罪于国家，愧对祖宗，愧对天地，朕恨不得自己罢免了自己！</p><p>还有你们，虽然各个冠冕堂皇站在干岸上，你们，就那么干净吗？！！！！</p><p>朕知道，你们有的人比这七个人更腐败！</p><p>朕劝你们一句，都把自己的心肺肠子翻出来晒一晒洗一洗拾掇拾掇！</p><p>。。。。。。。</p><a id="more"></a><p>朕现在是越来越清楚了，大清的心头之患不在外边，而是在朝廷。就是在这乾清宫！！！！</p><p>就在朕的骨肉皇子和大臣们当中。</p><p>咱们这烂一点，大清国就烂一片！你们要是全烂了，大清各地就会揭竿而起，让咱们死无葬身之地呀！</p><p>想想吧，崇祯皇帝朱由检吊死在煤山上才几年呢。。</p><p>忘啦？？？？！！！！！！！！！！！！</p><p>那棵老歪脖子树还站在皇宫后边天天地盯着你们哪！</p><p>朕已经三天三夜没有合眼了，老想着和大伙儿说些什么，可是话总得有个头哇，想来想去只有四个字——————————————————————</p><blockquote><p>（悲壮音乐响起，匾额从康熙身后徐徐升起，上面赫然书写着四个大字：</p><p><strong>正——大——光——明</strong>）</p></blockquote><p>这四个字，说说容易阿，身体力行又何其难？？！！！</p><p>这四个字，朕是从心里刨出来的，从血海里挖出来的。</p><p>记着，从今日起，此殿改为正大光明殿！</p><p>好好看看，你们都抬起头来好好看看，想想自己，给朕看半个时辰——</p>]]></content>
      
      <categories>
          
          <category> Projects </category>
          
          <category> hexo-theme-bootstrap-blog </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Videos</title>
      <link href="/2018/08/08/videos/"/>
      <url>/2018/08/08/videos/</url>
      <content type="html"><![CDATA[<p>This is a video test post.</p><p><strong>Bilibili</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"//player.bilibili.com/player.html?aid=28777599&amp;cid=49864265&amp;page=1"</span> <span class="attr">scrolling</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">framespacing</span>=<span class="string">"0"</span> <span class="attr">allowfullscreen</span>=<span class="string">"true"</span> <span class="attr">width</span>=<span class="string">’100%‘’</span> <span class="attr">height</span>=<span class="string">’560px’</span> <span class="attr">max</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><iframe src="//player.bilibili.com/player.html?aid=28777599&cid=49864265&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="560px"> </iframe><a id="more"></a><p><strong>Youtube</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#123;%</span> <span class="string">youtube</span> <span class="string">HWHBCsUR-58</span> <span class="string">%&#125;</span></span><br></pre></td></tr></table></figure><p><strong>Vimeo</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#123;%</span> <span class="string">vimeo</span> <span class="number">82090131</span> <span class="string">%&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Projects </category>
          
          <category> hexo-theme-bootstrap-blog </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Tag Plugins</title>
      <link href="/2018/08/08/tag-plugins/"/>
      <url>/2018/08/08/tag-plugins/</url>
      <content type="html"><![CDATA[<p>This post is used for testing tag plugins. See <a href="https://hexo.io/docs/tag-plugins.html" target="_blank" rel="noopener">docs</a> for more info.</p><h2 id="Block-Quote"><a href="#Block-Quote" class="headerlink" title="Block Quote"></a>Block Quote</h2><h3 id="Normal-blockquote"><a href="#Normal-blockquote" class="headerlink" title="Normal blockquote"></a>Normal blockquote</h3><blockquote><p>Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.</p></blockquote><h3 id="Quote-from-a-book"><a href="#Quote-from-a-book" class="headerlink" title="Quote from a book"></a>Quote from a book</h3><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote><a id="more"></a><h3 id="Quote-from-Twitter"><a href="#Quote-from-Twitter" class="headerlink" title="Quote from Twitter"></a>Quote from Twitter</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote @L https://twitter.com/devdocs/status/xxx %&#125;</span><br><span class="line"></span><br><span class="line">NEW: DevDocs now comes with syntax highlighting. http://devdocs.io</span><br><span class="line"></span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href="http://devdocs.io" target="_blank" rel="noopener">http://devdocs.io</a></p><footer><strong>@L</strong><cite><a href="https://twitter.com/devdocs/status/xxx" target="_blank" rel="noopener">twitter.com/devdocs/status/xxx</a></cite></footer></blockquote><h3 id="Quote-from-an-article-on-the-web"><a href="#Quote-from-an-article-on-the-web" class="headerlink" title="Quote from an article on the web"></a>Quote from an article on the web</h3><blockquote><p>WizardLQ’s</p><footer><strong>Seth Godin</strong><cite><a href="https://www.blankspace.cn/">Welcome</a></cite></footer></blockquote><h2 id="Code-Block"><a href="#Code-Block" class="headerlink" title="Code Block"></a>Code Block</h2><h3 id="Normal-code-block"><a href="#Normal-code-block" class="headerlink" title="Normal code block"></a>Normal code block</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert(&apos;Hello World!&apos;);</span><br></pre></td></tr></table></figure><h3 id="With-caption"><a href="#With-caption" class="headerlink" title="With caption"></a>With caption</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock Array.map %&#125;</span><br><span class="line">array.map(callback[, thisArg])</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>Array.map</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure><h3 id="With-caption-and-URL"><a href="#With-caption-and-URL" class="headerlink" title="With caption and URL"></a>With caption and URL</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock .compact http://underscorejs.org/#compact Underscore.js %&#125;</span><br><span class="line">.compact([0, 1, false, 2, ‘’, 3]);</span><br><span class="line">=&gt; [1, 2, 3]</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>.compact</span><a href="http://underscorejs.org/#compact" target="_blank" rel="noopener">Underscore.js</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.compact([0, 1, false, 2, ‘’, 3]);</span><br><span class="line">=&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure><h3 id="Gist"><a href="#Gist" class="headerlink" title="Gist"></a>Gist</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gist 996818 %&#125;</span><br></pre></td></tr></table></figure><script src="//gist.github.com/996818.js"></script><h3 id="jsFiddle"><a href="#jsFiddle" class="headerlink" title="jsFiddle"></a>jsFiddle</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% jsfiddle ccWP7 %&#125;</span><br></pre></td></tr></table></figure><iframe scrolling="no" width="100%" height="300" src="//jsfiddle.net/ccWP7/embedded/js,resources,html,css,result/light" frameborder="0" allowfullscreen></iframe><h2 id="Pullquote"><a href="#Pullquote" class="headerlink" title="Pullquote"></a>Pullquote</h2><h3 id="Left"><a href="#Left" class="headerlink" title="Left"></a>Left</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pullquote left %&#125;</span><br><span class="line">A cat on the left.</span><br><span class="line">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure><blockquote class="pullquote left"><p>A cat on the left.</p></blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ligula justo, lobortis sit amet semper vel, dignissim sit amet libero. Praesent ac tempus ligula. Maecenas at gravida odio. Etiam tristique volutpat lacus eu faucibus.</p><h3 id="Right"><a href="#Right" class="headerlink" title="Right"></a>Right</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pullquote left %&#125;</span><br><span class="line">A cat on the right.</span><br><span class="line">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure><blockquote class="pullquote left"><p>A cat on the right.</p></blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ligula justo, lobortis sit amet semper vel, dignissim sit amet libero. Praesent ac tempus ligula. Maecenas at gravida odio. Etiam tristique volutpat lacus eu faucibus.</p><h2 id="Bootstrap-Callouts"><a href="#Bootstrap-Callouts" class="headerlink" title="Bootstrap Callouts"></a>Bootstrap Callouts</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% callout info %&#125;</span><br><span class="line">#### &#123;% fa info-circle %&#125; Info</span><br><span class="line">This is some info content</span><br><span class="line">&#123;% endcallout %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% callout warning %&#125;</span><br><span class="line">#### &#123;% fa exclamation-triangle %&#125; Warning</span><br><span class="line">This is some warning content</span><br><span class="line">&#123;% endcallout %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% callout danger %&#125;</span><br><span class="line">#### &#123;% fa exclamation-triangle %&#125; Danger</span><br><span class="line">This is some danger content</span><br><span class="line">&#123;% endcallout %&#125;</span><br></pre></td></tr></table></figure><div class="bs-callout bs-callout-info"><h4 id="Info"><a href="#Info" class="headerlink" title=" Info"></a><i class="fa fa-info-circle"></i> Info</h4><p>This is some info content</p></div><div class="bs-callout bs-callout-warning"><h4 id="Warning"><a href="#Warning" class="headerlink" title=" Warning"></a><i class="fa fa-exclamation-triangle"></i> Warning</h4><p>This is some warning content</p></div><div class="bs-callout bs-callout-danger"><h4 id="Danger"><a href="#Danger" class="headerlink" title=" Danger"></a><i class="fa fa-exclamation-triangle"></i> Danger</h4><p>This is some danger content</p></div>]]></content>
      
      <categories>
          
          <category> Projects </category>
          
          <category> hexo-theme-bootstrap-blog </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Secret</title>
      <link href="/2018/08/08/secret/"/>
      <url>/2018/08/08/secret/</url>
      <content type="html"><![CDATA[<p>This post is used for testing password.</p><p>password: 5201314</p>]]></content>
      
      <categories>
          
          <category> Projects </category>
          
          <category> hexo-theme-bootstrap-blog </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>No comment</title>
      <link href="/2018/08/08/no-comments/"/>
      <url>/2018/08/08/no-comments/</url>
      <content type="html"><![CDATA[<p>This post have no comment.</p>]]></content>
      
      <categories>
          
          <category> Projects </category>
          
          <category> hexo-theme-bootstrap-blog </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Very Looooooog Title, Yes it is, fhia ahdifh, ahiewhihe, cat on the keyboard, amazing!!!! /^^%*&amp;*^ &amp;% === end</title>
      <link href="/2018/08/08/long-title/"/>
      <url>/2018/08/08/long-title/</url>
      <content type="html"><![CDATA[<p>This post has a long title. Make sure the title is displaying correctly.</p>]]></content>
      
      <categories>
          
          <category> Projects </category>
          
          <category> hexo-theme-bootstrap-blog </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>www.google.com</title>
      <link href="/2018/08/08/link-post-without-title/"/>
      <url>/2018/08/08/link-post-without-title/</url>
      <content type="html"><![CDATA[<p>This is a link post without a title. The title should be the link with or without protocol. Clicking on the link should open <a href="http://www.google.com/" target="_blank" rel="noopener">Google</a> in a new tab or window.</p>]]></content>
      
      <categories>
          
          <category> Projects </category>
          
          <category> hexo-theme-bootstrap-blog </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Link Post</title>
      <link href="/2018/08/08/link-post/"/>
      <url>/2018/08/08/link-post/</url>
      <content type="html"><![CDATA[<p>This is a link post. Clicking on the link should open <a href="http://www.google.com/" target="_blank" rel="noopener">Google</a> in a new tab or window.</p>]]></content>
      
      <categories>
          
          <category> Projects </category>
          
          <category> hexo-theme-bootstrap-blog </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>images</title>
      <link href="/2018/08/08/images-test/"/>
      <url>/2018/08/08/images-test/</url>
      <content type="html"><![CDATA[<p>This is a image test post.</p><p><img src="/2018/08/08/images-test/test-pic-1.jpg" alt=""></p><p><img src="/2018/08/08/images-test/test-pic-2.jpg" alt="Caption"></p><p><img src="/2018/08/08/images-test/test-pic-3.jpg" alt=""></p><p><img src="http://placehold.it/350x150.jpg" alt="Small Picture"></p><a id="more"></a>]]></content>
      
      <categories>
          
          <category> Projects </category>
          
          <category> hexo-theme-bootstrap-blog </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Images </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2013/12/24/hello-world/"/>
      <url>/2013/12/24/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      <categories>
          
          <category> Projects </category>
          
          <category> hexo-theme-bootstrap-blog </category>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
