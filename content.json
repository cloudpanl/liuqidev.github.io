{"meta":{"title":"WizardLQ’s | 魔法师の小茶馆","subtitle":"Keep moving, never give up. | 锲而不舍，金石可镂.","description":"远不止魔法......","author":"liuqidev","url":"https://www.blankspace.cn"},"pages":[{"title":"404 Not Found","date":"2018-08-04T05:55:12.000Z","updated":"2018-08-06T07:40:12.006Z","comments":true,"path":"404.html","permalink":"https://www.blankspace.cn/404.html","excerpt":"","text":""},{"title":"categories","date":"2018-08-09T13:16:34.000Z","updated":"2018-08-09T13:16:51.810Z","comments":true,"path":"categories/index.html","permalink":"https://www.blankspace.cn/categories/index.html","excerpt":"","text":""},{"title":"About Me","date":"2018-08-09T13:17:50.000Z","updated":"2018-10-10T11:48:55.789Z","comments":true,"path":"about/index.html","permalink":"https://www.blankspace.cn/about/index.html","excerpt":"","text":"Leo LiuEmail: nihaoworld@outlook.com Web: https://blankspace.cn Division of Informatics, Tsinghua Campus, University Town, Shenzhen 518055, P.R. China BiographyMy name is Leo Liu (刘奇). Now, I am a first year master student at Graduate School at Shenzhen, Tsinghua University. I want to seek admission to a doctoral degree program in the future because of my love to science and technology from the buttom of my heart. Research InterestsBig Data, Evolutionary Computation, Machine Learning to discovery new medicine EducationM.S-09/2018 to present (Expected graduation: July 2021) Control Engineering, Department of Automation, Tsinghua University, P.R China Advisor：Min Liu B.Ec-09/2014 to 06/2018 Electronic Engineering, Institute of Computer Science and Technology, China University of Mining and Technology, P.R China Advisor: Bing Liu Experience Publications Projects SkillsProficient: Data Analysis, Python, Java, … Experienced: Machine Learning, Linux, Spark, Git, Hadoop, MongoDB, R, C/C++… Familiar: Web, JavaScript, SQL, … Languages: Chinese, English, German Misc Hi,我是一名魔法师，目前自动化硕士在读.“科技是普通人眼中的魔法”.之前有在CSDN、博客园、简书等写过博客. 写博客一方面能够帮助自己查缺补漏，总结和反思，同时还能被他人看到和甚至对他人产生帮助，十分有意义.若有读者在阅读中发现问题或者有什么意见或者建议，欢迎联系我的邮箱， 或者在博客或者博文中留言，我会尽量回复.(由于平时比较忙我比较懒，有些文章可能需要很长时间才能完善.)你通过下列方式联系到我： &#xe66e;Email: nihaoworld@outlook.com| &#xe64f;CSDN| &#xe655;Weibo| &#xe6e1;BiliBili"},{"title":"projects","date":"2018-08-09T07:56:23.000Z","updated":"2018-08-09T07:56:51.194Z","comments":true,"path":"projects/index.html","permalink":"https://www.blankspace.cn/projects/index.html","excerpt":"","text":""},{"title":"comments","date":"2018-08-19T03:57:16.000Z","updated":"2018-08-19T03:57:16.622Z","comments":true,"path":"comments/index.html","permalink":"https://www.blankspace.cn/comments/index.html","excerpt":"","text":""},{"title":"Links","date":"2018-10-02T06:28:25.000Z","updated":"2018-10-02T07:18:00.829Z","comments":true,"path":"links/index.html","permalink":"https://www.blankspace.cn/links/index.html","excerpt":"","text":"友链实验室斯坦福大学计算机视觉实验室 南大LAMDA：机器学习和数据挖掘研究所 南开大学媒体计算实验室 哈工大社会计算和信息检索研究中心"},{"title":"Moments","date":"2018-10-02T07:27:10.000Z","updated":"2018-10-14T23:36:46.260Z","comments":true,"path":"moments/index.html","permalink":"https://www.blankspace.cn/moments/index.html","excerpt":"","text":"2018-10-14农历九月初六，尕爹过生日，爸爸从RS回QC给外公过生，我没记错的话这是尕爹八十一岁生日。祝尕爹天天快乐，身体健康。和尕爹视频，一直对着屏幕笑，我知道他的耳朵不好，不晓得他听没听到我说的话。 读了果长时间书，发现咋尕反而不善自然地表达说话了，想起周五英语课上老师所问的问题，研究生期间最重要的是什么，几个同学说是，学术，科研，学习等等，老师说是“to be a human, to be alive”。嗯，“像一个人一样去生活”，去感受生活的实实在在，去体会人生酸甜苦辣百味陈杂，去直面时间，赋予时间以温度和意义。人之生命，从历史，宇宙来说不值一提，而对于自己，则是全部，对于亲密和有情感纽带之人，则是生活之重心，思绪寄托之所。 “每个人只会陪你走一段路”。 TO BE HUMAN IS TO LOVE. TO BE HUMAN, TO BE ALIVE. 座谈会。YF同学很能从老师的立场分析，👍。 大作业。 早睡早起，10点半之前睡觉，最迟最迟11点。早上五点🕔起床。 英语要好，多阅读英语文章，多动手实验，做电子笔记。 自身实力第一位。 2018-10-13论文阅读，综述。 工作汇报。 2018-10-12晚会，上台表演。 2018-10-11键盘莫名其妙案件不灵敏。 晚上背诵和默写英语作文，明天英语课用。 大数据系统作业明天做。大数据分析还有模式识别需要预习。 加油。 2018-10-10今日最佳，大数据系统第一次试验的due推迟了3天。 今日最糟糕，实验设计和数据处理上课灰常灰常无聊，包含统计学，概率论，R，又要自学一波。 明天疯狂背英语，复读机模式开启！！！对啦，PPT也要先完善，前者多次，遵循艾斯浩宾遗忘曲线，先频繁后间隔长一点也没事。后者明早就给它弄完最好。有点后悔和XZB合作英语，但是不管怎样，对事不对人，要看人家的优点，心放宽，做好自己的事儿就行。 睡觉前泡脚并没有明显提高睡眠质量。 2018-10-09超尴尬，去图书馆二楼上完厕所才发现居然跑错厕所，还说进来的人：“你们走错了吧”。 大数据系统实验权限管理得这是麻烦，一堆限制… 又超时了，提交跑路睡觉… 2018-10-08晚上进行了大数据系统基础的实验，老师的操作非常风骚流畅，mac用得风生水起，腾蛟起凤，可惜年级轻轻就秃了…… 下午做PPT花了太多时间，下次记得带鼠标。主要是因为找素材，现有的素材无法对应于我的想象，所以最终的实现版本有些偏差，明天接着改正。 下载一个叫做timing的APP，时间管理的，有些意思。 导师告诉了我明确的课题，早上查了关于课题的东西，一本bible很厚很厚。加入了丁香园，隐患关系真是紧张，医生发那些比如皮肤病，组织器官的图居然不打码，真是骇人。 大数据的课程作业！预习！早睡早起！又到了十一点半，加油，我要做到。 2018-10-07突发奇想，每月使用头像使用一种动物。9月是大熊猫（小的大熊猫叫小大熊猫，不叫小熊猫），补发一张靓照，来源果壳，版权归原来作者所有，这个月是座头鲸（来源Whit Wlles Wwlles14|Wikimedia Commons）。 下午本来去华强北看看，不太想和TZJ一起找个玩的地方，因为纯粹是玩理由有点单薄，想去华强北买点比方说电脑支架，播放器（收音机？因为有报名了六级，可能需要），顺便看看这个全世界电子产品种类最齐全的地方长什么样，估计很少人有这样的需求。但是打算还是和ta商量一下先，然而脚还没好，所以先泡了个脚。泡脚过程中发现手机电还没充满，最后找了份番刷了几集，名字叫做“齐木楠雄的灾难”。这一看就刷了好几话，总算知道了肥宅为什么那么喜欢宅了，番确实是搞笑轻松的番，但仔细想想着实觉得是一种简单容易获得的快乐感觉，男主拥有各种超能力却很苦恼，里面的人物也是和其他大部分番一样多是极其扁平化，比如呆萌，中二病，公主病，无脑，热血，好色等等，和现实世界人的复杂和多元形成鲜明对比，这也就是二次元容易让人上瘾和找到慰藉之感的原因吧——简单/迅速/容易获得的能够轻松改变世界的快乐谁不想要呢。所以我及时制止了我刷剧的行为，之后再淘宝上买了几本书。在买书的过程中发现几个盗版书店，里面的计算机相关的书籍不光便宜，还很齐全，要是老板看过这些书的话，当个副教授估计都有可能。这也给了我启发，我其实买过也读过很多书，但是很难说吸收了多少，假如只是追求数量只是占有的话，那人就和书架无异，要读进去，读进去的表现就是读完，做笔记，做练习。 早上在石墨上写了英文作业。于是哪也没去，国庆节最后一天假期就这样咯。关于英语还有运动，让我想想哈，11点20准备睡觉，之前的洗澡洗衣服洗漱大概会花上50分钟。倒推运动时间，最好是每天都能固定，所以就是9点50到10点30这段。暂定的计划如下 晚上： 11点30：睡觉 11点20：收拾东西睡觉 11点~11点20：每天总结 10点10~11点：洗澡+洗衣服+洗漱 9点50到10点10分：运动（加上平日走路，骑行，每周周末9点开始锻炼，5公里跑步，每月骑行至少一次，这个运动量应该是够了） 之前就是大块单位时间的分配了。早上就不空腹运动了，血糖太低，抵抗力就不行。由于脚还么好，今天就不去了。 对于英语： 宜使用碎片时间或者是垃圾时间，我发现最大的垃圾时间是中午吃完饭之后，没有好好安排得话，总是刷手机后睡觉度过了。所以中午一直到下午1点钟，宜系统学习英语，具体而言适合reading, writting, 所以倒推，早上应该进行speaking，同样宜固定时间，7点到8点，为了防止血糖低。 6点10：起床 6点10~6点30：洗漱，指定今天的计划（大块时间的划分和任务，准备英语听力还有阅读素材） 6点30~7点：吃饭，听英语听力 7点~8点：读一个小时英语（材料前一天找好），最好能大声朗读出来，海洋楼和图书馆之间的那个小广场挺好的，骑车从实验楼那边走，过去到靠近P大的那边，广场能锻炼人的胆量。要是下雨的话，就去教学楼或者教学楼的楼梯口或者C1楼沙发应该蛮好。 8点~8点半：课前准备 晚上本来想洗澡的，不过SQY老哥好像很疲惫的样子，早早上了床睡觉，所以打算明天早上再洗咯，再洗个衣服。 2018-10-06刚给导师邮件汇报完工作，明确了研究课题，希望能够精确制导，网不要撒那么大。 又到了12点多，尴尬。 下午和LF，XZB对英语作业进一步进行了讨论，模拟人生。 晚上谢了英语稿子，学了会儿Kaggle，模式识别又了解了一下，发现上课还有课件都没咋讲清楚，课件听室友SQY搜索的结果说是什么纽约大学水牛城分校部分汉化和手改的，有点出人意料，拿谷歌搜了搜没有搜到。CML打微信电话过来，ta在准备考研，一个学会计的居然要去考同声传译，我的理性告诉我这事成功的概率不是很高，而且不记得ta英语很好呀，但不忍心伤害ta，感觉ta做事总是不太过很多脑子，经常想当然。高中的时候认为ta这样很天真浪漫，之后想想难道不是对自身认知不明，甚至狠心的说就是挺傻的吗！？不管怎样把，祝ta成功，考研录取！！！ 早上干了啥？ 为啥总是记不得早上干了什么？算了，就这样吧。 舍友WC蛮拼，每天都学到十二点多，工作日也是6点多起。扶着起来，我还能接着学！！ 感觉很大一部分原因应该各种压力还有赶超的动力迫使他这样的，但我发现T大研究生的同学都灰常现实，几乎都是奔着找工业界的工作去的，还是冲着热门的工作，薪资高的工作，我不说也知道是什么工作了，我咋感觉格局不是很高啊。不管怎么样吧，实干才是最重要的！！！“他说风雨中这点痛算什么”，不要怂，就是GAN（对抗生成网络）。 哦，既然都快十二点半了，牙还没刷，记起来了，早上一直在学制药化学，复习了一下矩阵求导。记录一下感受，那就是博士生很硕士生的差距不是一般的大！！！硕士生三年憋出一篇论文就能毕业，今天看到的几个博士资料，几乎每年都有，而且和硕士不在同一个档次。要是能够读博，假如发不出厉害的文章，那我就不读了。hiahiahia，刷牙睡觉！！！ 明天国庆节最后一天，英语，锻炼，这两件事只能靠少睡觉来解决了。 2018-10-05今天，国庆节的导数第三天，居然中午在图书馆找不到座位，很多人的书还有其他物品在座位上自习，最后无奈在书架旁找了个凳子，”pia叽“坐在地上，电脑放在上面，看矩阵代数。主要是做笔记花了太多时间，有点不值当。 晚上在学堂在线还有EdX上找到了戴维森学院关于生物制药的课程，当听到前导化合物的那一刻，灰常灰常激动（虽然晚自习有些迷糊和疲惫），总算是找到要找的课程了，毕业有望，毕业有望！！！每周六汇报科研进展，不能总是在周六突击，每天抽出一两个小时看看课程看看论文应该是最佳状态。 以前学习的方式大大的有问题，老师发的材料应该打印出来，在上面做笔记记录自己的疑问，老师上课不一定有材料上写的清楚，语言具有模糊性。 晚上十一点后停止学习，用来总结。十一点半睡觉，现在超时4分多钟。以后请严格执行。 2018-10-04早上和英语课小组材料专业的LF同学讨论了一下小组任务的事情，另一位睡过头没到。二食堂的早餐比一食堂便宜很多，粥还有豆浆居然是免费的，但是味道却逊色了很多。之后就啃了一上午的《模式识别》，主要还是贝叶斯决策那一章节，一个贝叶斯公式居然能够引申出辣么多的东西，单变量还好说，推广到n维随机，联合概率，估计概率密度，混合高斯，到之后的EM，吧啦吧啦，让人头大并且想睡觉，不得不说蛮神奇的。本来想找找贝叶斯决策的课程来学习学习的，却死活找不着，斯坦福吴恩达十年前开的CS229有讲到一些，却没有最新学习的视频，当然课件还有安排都在它的网站上挂着呢，找来看看，结果发现第一期的作业是关于线性代数的一些东西，特别是矩阵求导，喵喵喵，我在学高数还有线代的时候不记得有人讲过矩阵求导啊，之前有在西瓜书上附录上看到一些，看起来也蛮简单，但是只是给出了结论性的公式，很让人不爽。 下午还有晚上疯狂地找相关的视频课程以及去图书馆找书，貌似都觉得矩阵求导很简单吗，居然没有找到相关的慕课（百度的视频搜索简直不能再垃圾了），最后总算找到了两本有介绍的书，一本中文的，《矩阵论》，把它归到矩阵分析中，我在其他矩阵论，矩阵分析的书里找了半天，也没有发现其他书中有介绍矩阵微分。后来去西文图书中，找到一本《矩阵代数》，总算是有完整的一个章节介绍矩阵积分和微分了，其他的矩阵还有代数的书也没有类似的安排，真是很迷。 最近浑身难受，感觉同时得了肠胃不适，脚气病，昨晚还好像感冒了。买了一堆药，特别是脚气，反反复复。 以后得多吃蔬菜，尽量少吃肉类，多吃水果，今天晚上买了一些。要早睡，shame，又熬到十二点。赶快提交。 2018-10-03 听说过RSS，以前一直不知道有什么用已经怎么用，只知道能来做订阅。生成的XML果然不是给人看的，需要经过RSS阅读器才能够解析成好看的格式。涨知识了。 浙大的翁恺老师说过： 获取资料能获取第一手的资料就不要获取第二手甚至更多手的资料。 我深以为然。当然有的时候只有非一手的资料可用，或者一手的资料实在难啃，读读他人转手的知识也是可以接受的。 2018-10-02脚上起的水泡破了，昨天还骑了车，导致今天疼得有点厉害。 中午吃了食堂最贵的饺子庆祝了一下，也受到了班级同学的祝福，高兴。 整理了博客，增加了几个板块，算是全新的开始。发现对于研究生来说的自己，简历还真是空空荡荡啊（本科的清零），特别是发表文章那一栏，希望自己能够有所突破。 昨天诺贝尔生理学奖公布，(⊙o⊙)…，两位前辈貌似把我想实现的科研理想之一给实现了，佩服佩服。 晚上解决了为项目增添Gitpages并增加下载按钮，很有意思，算是我在GitHub上完整进行的第一个项目，整个流程走下来很有收获。"},{"title":"Academic","date":"2018-10-10T11:12:16.000Z","updated":"2018-10-20T13:00:44.066Z","comments":true,"path":"academic/index.html","permalink":"https://www.blankspace.cn/academic/index.html","excerpt":"","text":"Targeted therapy for non-small cell lung cancer: current standards and the promise of the future/非小细胞肺癌：靶向治疗现状及未来类型：综述 发表/链接/DOI: Translational lung cancer research，原文，10.3978/j.issn.2218-6751.2014.05.01 摘要 问题和方法：Non-small cell lung cancer (NSCLC, 非小细胞肺癌)在最近几年诊疗有了显著变化，一旦确定患病，则需要根据组织学和突变信息进一步细分类。而对于靶向治疗法而言，可以使用受体的单克隆抗体（receptor monoclonal antibodies, mAb）或小分子络氨酸酶抑制剂（tyrosine kinase inhibitors, TKI)对相关突变进行抑制。 意义：虽然目前的（诊疗）经验，含铂的二联化疗（empirical chemotherapy with a platinum-doublet）依然还是采用最普遍的方法，但是靶向疗法改善了患者的预后和生活质量。 这篇综述，Bryan A.Chan 和Brett G.M. Hughes围绕NSCLC背后致癌突变的几种类型，以及靶向治疗（这几种类型）的现有方法和未来可能的方法展开了综述。 关键词：Non-small cell lung carcinoma; targeted therapy; epidermal growth factor receptor (EGFR); anaplastic lymphoma kinase (ALK) 结论 十年内，分子病理学的巨大进步已经使我们对 NSCLC 潜在病理机制及 显著的异质性（heterogeneity）的理解有了很大进展 。目前也确定了多条信号通路及导致恶性转化的致癌性驱动突变。具体到临床实践，对肿瘤组织进行这类驱动突变的分子检测已经成为了习以为常的做法。 目前而言，大部分肿瘤中仍未检测到驱动突变，因此对这类患者仍为细胞毒性化疗经验性治疗（化疗）。 对于具有已知驱动性突变的非小细胞肺癌患者，已经表现出了显著临床获益，但获得性耐药仍常见，且为我们制定独特的个体化治疗提出了下一个挑战。 过去的新药获批经验，例如，克唑替尼（crizotinib）用于 ALK 阳性患者，从开始 I 期试验、到 III 期试验得到阳性结果仅用了 6 年；仅 II 期试验的数据就得到了 FDA 的批准，此时仅仅四年，正朝着有利于靶向治疗的方向发展。 未来，诊断治疗学的成功、真正肿瘤个体化治疗的关键，将是充分利用有限资源、通过预测性生物标志物确保筛选出恰当类型的患者并使得不良作用最低。至于耐药性方面，适度应用抑制剂、或联合应用抑制剂，同时控制不良作用最低，有望在将来实现患者生存改善。 再进一步，真正的挑战将是把这些制剂运用到早期患者的治疗，以真正改善这种恶性病的治愈率。 引言 肺癌约占所有癌症致死中的20%，而肺癌中约80%是NSCLC。 NSCLC不是一个单独的病变，而是多种具有独特分子标记的病理状态。 主要亚型有： 肺腺癌 pulmonary adenocarcinoma 鳞状细胞癌 squamous cell carcinoma (SCC) 大细胞癌 large cell carcinoma 目前对 NSCLC 的合理治疗，需对肿瘤进行预测性及预后性标志物的筛查，以帮助预测靶向治疗敏感性、并估测预后。 最近这些年在表皮生长因子受体酪氨酸激酶抑制剂（EGFR tyrosine kinase inhibitors (TKI)）来抑制EGFR （epidermal growth factor receptor，EGFR）的突变，以及使用克唑替尼（crizotinib）抑制间变性淋巴瘤激酶（anaplastic lymphoma kinase， ALK）的异常融合这两方面分别都取得了进展。 本文就是对 NSCLC 中已确定的驱动突变的主要类型、相关靶向治疗进行综述，并对未来进行展望。 NSCLC中的信号通路靶点NSCLC 的组织学分类中，不管是传统分法、还是现在简化的分法，都包括腺癌、鳞状细胞癌及大细胞癌。高达 60%的腺癌、50-80% 的鳞癌中具有已知的肿瘤性驱动突变。这类受体或蛋白激酶的突变可导致涉及多条信号通路的复杂级联反应。最终，导致不受调控的生长、增生及存活。 表皮生长因子受体(EGFR)导致 EGFR 激活的主要机制有三种：恶性细胞中 EGFR 表达增加、恶性细胞导致配体增强、恶性细胞中 EGFR 活性突变。高达 40-80% 的 NSCLC 中 EGFR 过表达，因此是一个大有潜力的转化治疗靶点。不过，后来发现 EGFR 较好的治疗靶点是其活性突变、而不是过表达。两个最常见的突变是 19 号外显子缺失（60%）及位点 858 处亮氨酸被精氨酸取代产生的 L858R 错义替换（35%），导致受体失去配体结合从而构成性活化。突变的 EGFR 可被小分子酪氨酸激酶（如吉非替尼及厄洛替尼）或小分子抗体（如西妥昔单抗）来抑制。 EGFR 突变的 NSCLCNSCLC 治疗方案中最显著的改变可能就是 EGFR 酪氨酸激酶抑制剂用于具有 EGFR 靶向性驱动突变患者一线治疗了。 EGFR 野生型及 EGFR 状态未知的进展期 NSCLC抗 EGFR 的单克隆抗体单克隆抗体是抑制 EGFR 活性和信号的另一方案。除竞争性抑制胞外结构域的配体结合外，还可形成被内吞及降解的抗体 - 受体复合物。 EGFR 靶向性治疗的耐药性大部分患者均会出现「获得性耐药」，可能是 EGFR 二次突变、也可能是 EGFR 非依赖性通路的活化。因此，临床医生应考虑对出现进展的肿瘤重新活检、以评估该肿瘤的生物学行为。EGFR 耐药机制中最常见的（约 50%）是同时出现 20 号外显子突变，编码 T790M。苏氨酸被蛋氨酸取代，改变了激酶结构域的构象并增强了其对 ATP 的亲和力，因此就对第一代可逆性酪氨酸激酶抑制剂的亲和力降低了。第二种常见的机制（约占 5-10%）是 MET 扩增、通过 PI3K-Akt-mTOR 信号通路而绕过了 EGFR 的抑制。其他耐药机制还有 PIK3CA、HER2、BRAF、STAT3、AXL 激酶的突变及 CRKL 的扩增，还有 5% 出乎意料的转化为了小细胞肺癌。尽管我们对获得性耐药机制的理解已经取得了显著进展，但高达 30% 的耐药机制还是未知的，因此经验性细胞毒性药物化疗仍是治疗方案。 另外几种NSCLC突变类型EML4-ALK 阳性 NSCLC NSCLC 中的 K-RAS 突变NSCLC 中的 MET 扩增 NSCLC 中的 ROS1 重排 NSCLC 中的 RET 融合 NSCLC 中的 HER2 过表达及突变 NSCLC 中的 BRAF 突变 鳞状细胞癌 NSCLC 中的血管生成抑制 缩写和概念 非小细胞肺腺癌 Non-small cell lung cancer，NSCLC 单克隆抗体 Receptor monoclonal antibody, mAb 小分子络氨酸酶抑制剂 Typrosine Kinase Inhibitor, TKI 含铂的二联化疗 Empirical chemotherapy with a platinum-doublet 肺腺癌症 pulmonary adenocarcinoma 鳞状细胞癌 squamous cell carcinoma, SCC 大细胞癌 large cell carcinoma 表皮生长因子受体 epidermal growth factor receptor, EGFP 表皮生长因子受体络氨酸激酶抑制剂 EGFR tyrosine kinase inhibitors, EGFR TKI 间变性淋巴瘤激酶 anaplastic lymphoma kinase, ALK EGFP Plasma：细胞液 membrane：膜 无进展生存 Progression free survival（PFS） 指肿瘤疾病患者从接受治疗开始，到观察到疾病进展或者发生因为任何原因的死亡之间的这段时间。 一线治疗 first-line therapy The first treatment given for a disease. It is often part of a standard set of treatments, such as surgery followed by chemotherapy and radiation. When used by itself, first-line therapy is the one accepted as the best treatment. If it doesn’t cure the disease or it causes severe side effects, other treatment may be added or used instead. Also called induction therapy, primary therapy, and primary treatment. 二线治疗 second-line therapy Treatment that is given when initial treatment (first-line therapy) doesn’t work, or stops working. 野生型 文中指没有EGFR突变的肿瘤类型"}],"posts":[{"title":"","slug":"EM","date":"2018-10-19T11:26:37.848Z","updated":"2018-10-19T11:27:19.101Z","comments":true,"path":"2018/10/19/EM/","link":"","permalink":"https://www.blankspace.cn/2018/10/19/EM/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Questions and Answers","slug":"questions-and-answers","date":"2018-10-19T00:21:47.000Z","updated":"2018-10-19T02:40:16.974Z","comments":true,"path":"2018/10/19/questions-and-answers/","link":"","permalink":"https://www.blankspace.cn/2018/10/19/questions-and-answers/","excerpt":"","text":"stick with 按照继续 in place 适当的 motivation (the reason to learn) Self-introductionFramework basic infomation education background experience future plan Learning language need praticing. What happen after your interview? Questions &amp; ProblemWhat is the problem What is your problem What is your question hard evidence lose track write on the fly ?? Base on the fact and numbers. Keep your answer short and right to the point 测试video Name, vocation, location, address, numbers 关键词 conduct run do performance work configure configuration(s) set-up(s) setting(s) Debate World CupChairman Positive/Affiemative side Negtive side Positive side: High salary job ? Money is important difficult 称述 recruiment 补充 两种不同的场景，一种是高薪酬但是不开森；另一种是低薪酬 Round 1 临时，钱买快乐 love your creation 正方 growup: 高薪酬===困难，困难===成长 | 简单的事情无法带来进步 反方 低薪!==简单 Round 2… 评价动机： 群面面试 表达赞同和不赞同 关键： 对话，有来有回 不光是表述我赞同还是不赞同xx观点，重要的是给予支撑 辩论会主持人: minutes taker, monitor opening statement conclusion(?) statement salary+other income=income paying i am for/agast 分条 at the begining, firstly, then, moreover fu..more finally, one more thing, in the end, in summary, in conclusion 举例 video test trouble shooting video 2 repoter, PR department head scandal 作业角色扮演。一方老师，一方学生。对话，关于是否接受assignment。","categories":[{"name":"Englishh","slug":"Englishh","permalink":"https://www.blankspace.cn/categories/Englishh/"},{"name":"Notes","slug":"Englishh/Notes","permalink":"https://www.blankspace.cn/categories/Englishh/Notes/"}],"tags":[]},{"title":"方差分析","slug":"方差分析","date":"2018-10-18T22:34:41.000Z","updated":"2018-10-20T05:09:03.386Z","comments":true,"path":"2018/10/19/方差分析/","link":"","permalink":"https://www.blankspace.cn/2018/10/19/方差分析/","excerpt":"[TOC] 方差分析引论相关术语 定义1：检验多个总体均值是否相等的统计方法，成为方差分析（analysis of variance, ANOVA）。也叫F检验（F test）。 对象：分类型自变量对数值型自变量的影响。 作用：自变量之间有没有关系，关系的强度如何。显著性。 举例1：Head Movement Example: neural talking, expressive movement, random head movement多组实验之间评价，需要用到方差分析。average , one-way ANOVA(F统计量（k-1, n-k），P)，说明有显著性差异，但是没有说明哪个好。Post-hoc analysis(tukey HSD)处理说明那个更好。 举例2：treatments measurement 定义2：所要检测的对象称为因素或者因子（factor） 定义3：因素的不同表现称为水平或者处理（treatment） 定义4：每个因子水平下得到的样本数据称为观测值。 基本思想和原理误差分解方差分析，虽然感兴趣的是均值，但是在判断均值之间是否有差异要借助方差。通过数据误差来源的分析来判断不同总体之间的均值是否相等。 定义5：组内误差（within groups），来自水平内部的数据误差。组内误差只包含随机误差。 定义6：来自不同水平之间的数据误差成为组建误差（between groups）组间误差既包含随机误差也包含系统误差。 定义7：全部数据误差大小的平方和称为总平方和（sum of squares for total, SST） 定义8：组内误差大小平方和成为组内平方和（sum of suqares for error(within), SSE/SSw） 定义9：组间平方和反映组间误差的平方和（sum of squares for factor A(between), SSA/SSb） 误差分析 比较系统误差和随机误差两类误差（具体通过方差比），以检验均值是否相等。（假设$H_0$:各族总体均值相等）。 单因素方差分析双因素方差分析假设条件 独立 正态分布 variance 无交互双因素方差分析有交互双因素方差分析Z-, t-, F-统计量 3个以上，F检验 1个，Z，$\\mu$已知，$Z=\\frac{x_i-\\mu}{\\sigma /\\sqrt{n}}$ t统计 paried two-sample 合并方差和非合并方差 任务sx和sy相等，合并方差作为总体方差。 比较T统计量和F统计量之间的关系 $F=t^2$ 后处理（Post-Hoc Test）大纲 找出来哪个最好。 找出来一系列的t-test进行检验（两两作比较）。 问题：type-I error inflation。$\\alpha$ 解决：每次显著性水平控制在一定很小的范围内, or ,将几个组组合在一起比较显著性水平。 Bonferroni Tukey Test Scheffe’s Test BonferroniTukeyScheffeHolm and Hochberg 从小到大排序，越小越有可能是显著的。 $p1, p2, \\dots , pn$ 若在p2处停，则表明p1，p2组和其他剩余的组之间有显著性差异。 下集预告 考虑多个因素之间的关系","text":"[TOC] 方差分析引论相关术语 定义1：检验多个总体均值是否相等的统计方法，成为方差分析（analysis of variance, ANOVA）。也叫F检验（F test）。 对象：分类型自变量对数值型自变量的影响。 作用：自变量之间有没有关系，关系的强度如何。显著性。 举例1：Head Movement Example: neural talking, expressive movement, random head movement多组实验之间评价，需要用到方差分析。average , one-way ANOVA(F统计量（k-1, n-k），P)，说明有显著性差异，但是没有说明哪个好。Post-hoc analysis(tukey HSD)处理说明那个更好。 举例2：treatments measurement 定义2：所要检测的对象称为因素或者因子（factor） 定义3：因素的不同表现称为水平或者处理（treatment） 定义4：每个因子水平下得到的样本数据称为观测值。 基本思想和原理误差分解方差分析，虽然感兴趣的是均值，但是在判断均值之间是否有差异要借助方差。通过数据误差来源的分析来判断不同总体之间的均值是否相等。 定义5：组内误差（within groups），来自水平内部的数据误差。组内误差只包含随机误差。 定义6：来自不同水平之间的数据误差成为组建误差（between groups）组间误差既包含随机误差也包含系统误差。 定义7：全部数据误差大小的平方和称为总平方和（sum of squares for total, SST） 定义8：组内误差大小平方和成为组内平方和（sum of suqares for error(within), SSE/SSw） 定义9：组间平方和反映组间误差的平方和（sum of squares for factor A(between), SSA/SSb） 误差分析 比较系统误差和随机误差两类误差（具体通过方差比），以检验均值是否相等。（假设$H_0$:各族总体均值相等）。 单因素方差分析双因素方差分析假设条件 独立 正态分布 variance 无交互双因素方差分析有交互双因素方差分析Z-, t-, F-统计量 3个以上，F检验 1个，Z，$\\mu$已知，$Z=\\frac{x_i-\\mu}{\\sigma /\\sqrt{n}}$ t统计 paried two-sample 合并方差和非合并方差 任务sx和sy相等，合并方差作为总体方差。 比较T统计量和F统计量之间的关系 $F=t^2$ 后处理（Post-Hoc Test）大纲 找出来哪个最好。 找出来一系列的t-test进行检验（两两作比较）。 问题：type-I error inflation。$\\alpha$ 解决：每次显著性水平控制在一定很小的范围内, or ,将几个组组合在一起比较显著性水平。 Bonferroni Tukey Test Scheffe’s Test BonferroniTukeyScheffeHolm and Hochberg 从小到大排序，越小越有可能是显著的。 $p1, p2, \\dots , pn$ 若在p2处停，则表明p1，p2组和其他剩余的组之间有显著性差异。 下集预告 考虑多个因素之间的关系","categories":[{"name":"Math","slug":"Math","permalink":"https://www.blankspace.cn/categories/Math/"},{"name":"Statistics","slug":"Math/Statistics","permalink":"https://www.blankspace.cn/categories/Math/Statistics/"},{"name":"ANOVA","slug":"Math/Statistics/ANOVA","permalink":"https://www.blankspace.cn/categories/Math/Statistics/ANOVA/"}],"tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://www.blankspace.cn/tags/Statistics/"},{"name":"ANOVA","slug":"ANOVA","permalink":"https://www.blankspace.cn/tags/ANOVA/"}]},{"title":"R介绍","slug":"R介绍","date":"2018-10-17T06:07:01.000Z","updated":"2018-10-21T08:46:31.085Z","comments":true,"path":"2018/10/17/R介绍/","link":"","permalink":"https://www.blankspace.cn/2018/10/17/R介绍/","excerpt":"","text":"前言书籍这里使用的是Robert IKabacoff著王小宁，刘撷芯等译的的《R语言实践（第二版）》。 编程环境使用的Rstudio， R的版本是R3.5.1。 教程：swirl。 它太神奇了，满载珍宝，可以让那些狡猾聪明和粗野胆大的人得以充分满足；但并不适合胆小者。 ——Q. “Q Who”, 《星际迷航》 Lesson 1: Basic Building Blocks 赋值&lt;- 打印print() 帮助 ? 变量：接在赋值符号的左边 数组c() c()中参数可以依然是向量 对向量可以直接进行看起来像对标量进行的数值运算，例如：+, -, /, ^， sqrt(), abs()等, 运算结果是逐元素的，类似于Numpy中的广播。 向量运算 两个向量进行运算，若二者长度是相等的，则R会对向量进行著逐个元素计算（element-by-element） 若连个向量长度不等，则会使用短的向量来填充，直到二者长度相等后，两者再进行和相等长度向量相同的运算 向量和标量的运算，将标量视作长度是一的向量，然后将其循环填充至与向量长度相等的向量，再进行运算 补全：tap 历史输入：↑ 关于swirl assignment token 去Coursera上选修约翰霍普金斯大学的R学习课程 第一周的作业是关于swirl提交的，网页右边栏会有提交码 在swirl完成的时候输入提交码，作业就提交成功 Lesson 2: Workspace and Files 获取当前工作区路径：getwd() 返回原来的工作路径：getwd(old.dir) 查看当前工作区下有哪些对象：`ls()（和Linux命令类似） 产看有哪些文件： list.files() 查看帮助：?list.files() 查看函数的参数有哪些：例如args(name = list.files ) 保存旧路径：old.dir &lt;- getwd() 创建新路径：dir.creat() 设置(新的)工作路径：setwd(), 例如setwd(&quot;testdir&quot;) 创建新文件：file.create()，例如file.create(&quot;mytest.R&quot;) 查看当前工作路径文件：list.files() 产看当前工作路径某文件是否存在：file.exists(), 例如file.exists(&quot;mytest.R&quot;) 查看文件信息：file.info(), 例如file.info(&quot;mytest.R&quot;) 重命名文件：file.rename(from, to), 例如file.rename(&quot;oldname.R&quot;, &quot;newname.R&quot;)，将原来叫做oldname.R的文件重命名为newname.R 删除文件：file.remove() 复制文件：file.copy(from, to), 例如file.copy(&quot;mytest2.R&quot;, &quot;mytest3.R&quot;), 将文件mytest2.R复制成为mytest3.R 相对路径： 查看文件的相对路径：file.path()，例如file.path(&quot;mytest.R&quot;) 配合dir.create()创建想对路径的多层文件夹 创建路径：dir.crate()，举例dir.create(file.path(&quot;testdir2&quot;, &quot;testdir3&quot;), recursive = TRUE), 在当前工作路径下以递归方式创建文件路径testdir2/testdir3 Lesson 3: Sequences of Numbers : 例如1:10, 输出的是1 2 3 4 5 6 7 8 9 10, 即步长为1的[1,10]升序的闭区间的数 例如pi:10，输出的是3.141593 4.141593 5.141593 6.141593 7.141593 8.141593 9.141593, 从pi开始每次步长为1，直到小于10的那个点的序列 例如10:1, 输出的是10 9 8 7 6 5 4 3 2 1, 即步长为1，[10, 1]倒序的闭区间的数 获取关于符号的帮助文档 ?`:` ，将符号阔在` 对中，前面加上问号 seq()创建序列 例如seq(1, 20)，输出的是1 2 3 4 5 6 7 8 9 10, 和:作用类似，步长为1。 例如seq(0, 10, by=0.5), 输出的是0.0 0.5 1.0 ... 9.5 10.0, 步长0.5的序列 例如seq(5, 10, length=30)，输出的是5.000000 5.172414 ... 9.827586 10.000000共30个数的序列 查看序列长度length() 创建和某个已知序列等长的序列 例如1:length(my_seq)， 将符号:和length（）合用 使用along.with参数，例如seq(along.with=my_seq) 使用内置函数seq_along(), 例如seq_along(my_seq) rep() replicate: 重复 创建全零（n）序列, 例如rep(0, times=30) 创建重复的向量组成的序列，例如rep(c(1, 2, 3), times=10) 创建向量逐元素重复一定次数的序列，例如rep(c(1, 2, 3), each=10) Lesson 4: Vectors 关于向量 是R中最简单也是最常见的数据结构 向量包含两种类型，一种是原子的（atomic）向量，其中只包含单一一种数据类型；另一种是列表（list）形式, 其中可以包含两种及以上种数据类型, 类型包括布尔型的TRUE， FALSE以及NA（not available） 例如num_vect &lt;- c(0.5, 55, -10, 6) 向量中元素和标量比较 例如tf &lt;- num_vect&lt;1, 将比较num_vect中每个元素和1的大小，返回的是一个布尔型向量，TRUE FALSE TRUE FALSE 逻辑运算 与&amp; 或| 非! 字符串向量 字符串使用双引号括起来, 例如my_char &lt;- c(&quot;My&quot;, &quot;name&quot;, &quot;is&quot;) 将字符串数组合成长字符串，paste(), 例如paste(my_char, collapse=&quot; &quot;)， 得到结果&quot;My name is&quot; 字符串连接，例如c(my_char, &quot;Leo&quot;)，得到向量&quot;My&quot; &quot;name&quot; &quot;is&quot; &quot;Leo&quot; paste() 连接两个字符串为一个长字符串，例如paste(&quot;Hello&quot;, &quot;world!&quot;, sep=&quot; &quot;), 得到&quot;Hello world!&quot; 连接两个等长的向量，例如paste(1:3, c(&quot;X&quot;, &quot;Y&quot;, &quot;Z&quot;)， sep=&quot;&quot;)，得到&quot;1X&quot; &quot;2Y&quot; &quot;3Z&quot; 配合内置字母向量使用，例如paste(LETTERS, 1:4, sep=&quot;-&quot;), 得到&quot;A-1&quot; &quot;B-2&quot; &quot;C-3&quot; &quot;D-4&quot; &quot;E-1&quot; ... &quot;Y-1&quot; &quot;Z-2&quot;。 其中LETTERS是预定义数组，表示英文的26个字母。这里的1:4向量数据类型被强制转换成字符串类型。 Lesson 5: Missing Values 关于缺失值 统计学中缺失值有重要的意义 不能🙅‍无视缺失值的存在，而是要研究缺失值背后潜在的模式或者导致值缺失的原因 R中使用NA表示缺失值，代表not available或者称为missing 创建含有缺失值的向量 例如c(44, NA, 5, NA) NA运算依然是NA 从标准正态分布随机抽样n个样本 rnorm(1000) 创建含1000个缺失值的序列 rep(NA, 1000) 数据抽样sample() 例如my_data &lt;- sample(c(rnorm(1000), rep(NA, 1000)), 100), 表示从长度为2000的序列中随机抽样100个值 获取缺失值位置 is.na(), 例如is.na(my_data), 返回一个大小为输入数据的布尔型数组，对应位置的TRUE和FALSE分别代表是否是缺失值 统计缺失项 sum(), 例如sum(is.na(my_data)) NaN 代表not a number 使用0/0, Inf/Inf, Inf-Inf可以生成 Lesson 6: Subsetting Vectors 正整数索引 R中的索引是从1开始的 使用方括号中加数字，可以访问数字索引位置的向量元素，例如x[1:10]表示向量x位置1到10上的元素 索引是逻辑值（布尔值） 例如x[is.na(x)], 得到全NA数组，个数是x种NA的个数。（is.na(x)返回时布尔型数组，大小和x相同，在相应位置是TRUE或者是FALSE） 筛选数组中非NA的数，x[!is.na(x)] 筛选数组中大于0的数， y[y&gt;0]; 注意，若数组中有NA，则该语句返回也会包含NA，在于NA属于占位符， NA&gt;0，得到的同样是NA。 若要从包含NA的数组中筛选出大于零的元素，使用x[x&gt;0&amp;!is.na(x)] 传入向量作为索引 例如x[c(3, 5, 7)] 越界访问 访问x[0], 不报错返回numeric(0) 访问越界的索引，例如x[Inf]，不报错，返回NA 负整数索引 x[c(-2, -10)],表示访问除了索引为2和10位置上的数之外的全部元素 带有命名元素的数字向量 创建含有命名元素的数字向量 创建匿名的数字向量后使用names()赋予名称 判断两个带名称的向量是否相等 例如使用identical(x=vect, y=vect2), 判断vect和vect2是否相等 通过名称索引 例如vect[&quot;bar&quot;], vect[c(&quot;bar&quot;, &quot;foo&quot;)] Lesson 7: Matrices and Data FramesLesson 8: LogicLesson 9: FunctionsLesson 10: lapply and sapplyLesson 11: vapply and tapplyLesson 12: Looking at DataLesson 13: SimulationLesson 14: Dates and TimesLesson 15: Basic GraphicsFAQ Warning in system(“sh ./configure.win”) : ‘sh’ not found ERROR: configuration failed for package ‘stringi’ Windows下安装swirl（一个统计学习，R学习等教程学习的R包，访问），发现一个依赖的包stringi一直装不上去，后来查明是stringi的包版本过低，和最新版的R以及Rsutdio不匹配所致，所以去https://cran.r-project.org/web/packages/stringi/index.html，选择下载合适的新版本的stringi包（我下载的是windows，r-release: stringi_1.1.7，适合R3.5使用Windows版），并解压到R\\R-3.5.1\\library下。 在markdown中如何在短引用着重号（backtick）中输入着重号` 号，例如输入?`:` 总的来说在就是单` 对, 引用其他的。```对，引用单`` ` ``引用的东西，本身靠三着重号对引用。```` ``` ````对引用双着重号引用的东西，本身靠连着的四引用号引用。以此类推1- ``` `` ?`:` `` ```, 这种效果的代码是 ```` ``` `` ?`:` `` ``` ` ``` `` ?`:` `` ``` 这种效果的代码是```` ``` `` ?`:` `` ``` ```` ` 和` 配对 `` 和`` 配对 ``` 和``` 配对 依此类推 英文里常见的赞叹/夸人(๑•̀ㅂ•́)و✧表述有哪些 You are really on a roll!：你真走运 You nailed it! Good job! You are quite good my friend! You are amazing! You are the best! Your dedication is inspiring! 最后更新时间：2018年10月20日","categories":[{"name":"Languages","slug":"Languages","permalink":"https://www.blankspace.cn/categories/Languages/"},{"name":"R","slug":"Languages/R","permalink":"https://www.blankspace.cn/categories/Languages/R/"},{"name":"Data Analysis with R","slug":"Languages/R/Data-Analysis-with-R","permalink":"https://www.blankspace.cn/categories/Languages/R/Data-Analysis-with-R/"},{"name":"R in action","slug":"Languages/R/Data-Analysis-with-R/R-in-action","permalink":"https://www.blankspace.cn/categories/Languages/R/Data-Analysis-with-R/R-in-action/"}],"tags":[{"name":"R","slug":"R","permalink":"https://www.blankspace.cn/tags/R/"}]},{"title":"多元线性回归","slug":"多元线性回归","date":"2018-10-16T08:38:28.000Z","updated":"2018-10-18T22:32:15.842Z","comments":true,"path":"2018/10/16/多元线性回归/","link":"","permalink":"https://www.blankspace.cn/2018/10/16/多元线性回归/","excerpt":"回顾一元线性回归 多元线性回归多元线性回归的假设n&gt;p， 样本个数要大于自变量的个数 多元线性回归参数的最小二乘估计 x^Tx\\hat\\beta=x^Ty分情况讨论： x逆矩阵是否存在：直接带入$\\hat\\beta=(X^TX)^{-1}X^Ty$，$\\hat y=X(X^TX)X^Ty；\\hat y=Hy$，H矩阵具有等幂性。 逆矩阵不存在：偏最小二乘估计 奇异矩阵 $\\beta$服从正态分布 标准化偏回归系数不能直接由偏回归系数大小对于因变量线性影响的大小，需要计算标准化偏回归系数，即标准化偏回归系数。 推导过程 在解释的时候还是保留非标准化的的回归系数 假设检验多元回归模型的检验 t检验 F检验，p值 矛盾，整体通过，单个不通过 多重共线性自变量之间存在多重共线性 产生原因 问题： 参数估计不稳定 回归结果不稳定 识别： 计算各对自变量之间的相关系数 特征值判别 多重共线现象相关性的假设检验 特征根分析 条件数condition index 消除 变量筛选 增大样本容量 回归系数的有偏估计：岭回归，主成分分析，偏最小二乘 虽然均值不是无偏的，但是方差比较小，分布比较集中，则可能比无偏估计效果更好","text":"回顾一元线性回归 多元线性回归多元线性回归的假设n&gt;p， 样本个数要大于自变量的个数 多元线性回归参数的最小二乘估计 x^Tx\\hat\\beta=x^Ty分情况讨论： x逆矩阵是否存在：直接带入$\\hat\\beta=(X^TX)^{-1}X^Ty$，$\\hat y=X(X^TX)X^Ty；\\hat y=Hy$，H矩阵具有等幂性。 逆矩阵不存在：偏最小二乘估计 奇异矩阵 $\\beta$服从正态分布 标准化偏回归系数不能直接由偏回归系数大小对于因变量线性影响的大小，需要计算标准化偏回归系数，即标准化偏回归系数。 推导过程 在解释的时候还是保留非标准化的的回归系数 假设检验多元回归模型的检验 t检验 F检验，p值 矛盾，整体通过，单个不通过 多重共线性自变量之间存在多重共线性 产生原因 问题： 参数估计不稳定 回归结果不稳定 识别： 计算各对自变量之间的相关系数 特征值判别 多重共线现象相关性的假设检验 特征根分析 条件数condition index 消除 变量筛选 增大样本容量 回归系数的有偏估计：岭回归，主成分分析，偏最小二乘 虽然均值不是无偏的，但是方差比较小，分布比较集中，则可能比无偏估计效果更好 变量选择逐步回归选择方法全局择优法 在残差平方和RSS上添加惩罚项 $C_p$准则 AIC准则&amp;BIC准则：评判指标，取值越小越好 缺点 组合爆炸 逐步回归向前引入，向后剔除，逐步回归法 引入和剔除都是单向的。比较早剔除的变量在之后加入可能更好。 逐步回归，搜索空间加大。 岭回归接近奇异，加入K指，使得接近奇异的程度减小。K=0时候，就是最小二乘法。 通过分析岭迹曲线选择K值。 性质： 性质1：有偏估计 … … … 岭迹分析用来解释自变量间的相关关系。 参数k的选择方差扩大因子残差平方和来确定k k值得选择有一些人为的因素在其中。","categories":[],"tags":[]},{"title":"data mining 2018-11-16","slug":"data-mining-2018-11-16","date":"2018-10-16T06:05:13.000Z","updated":"2018-10-16T08:37:25.646Z","comments":true,"path":"2018/10/16/data-mining-2018-11-16/","link":"","permalink":"https://www.blankspace.cn/2018/10/16/data-mining-2018-11-16/","excerpt":"","text":"回顾调查设计(统计学上的小例子) 互斥 True/False 云计算 多：浪费；少，数据洪峰 pay as you go 软件，平台，基础infrastructure设施即服务 并行计算串行$\\to$并行 aim：快 CPU$\\to$GPU 适合图像$\\to$通用计算 要有敏感性。 可以适度了解GPU编程。 release vs debug模式 xx实验室，xx公司人均有多少GPU卡 “智能”芯片 嵌入式计算设备：摄像头，MIC，等 并行也有代价 并非所有任务都要用并行 大数据 MapReduce map: 隐射(放) reduce: 规约（收） 数据+算法+计算=数据挖掘 没有免费的午餐原则 没有哪个算法始终是比别的好 考虑的因素：可解释性，计算复杂度，可用性 从简单到复杂 能做什么不能做什么 例如，预测股票，彩票","categories":[{"name":"Data Science","slug":"Data-Science","permalink":"https://www.blankspace.cn/categories/Data-Science/"},{"name":"Data Mining","slug":"Data-Science/Data-Mining","permalink":"https://www.blankspace.cn/categories/Data-Science/Data-Mining/"}],"tags":[{"name":"Data Mining","slug":"Data-Mining","permalink":"https://www.blankspace.cn/tags/Data-Mining/"}]},{"title":"分布式存储","slug":"distributed-storage","date":"2018-10-15T11:19:38.000Z","updated":"2018-10-15T13:39:19.857Z","comments":true,"path":"2018/10/15/distributed-storage/","link":"","permalink":"https://www.blankspace.cn/2018/10/15/distributed-storage/","excerpt":"","text":"回顾 基于Linux，“table-like”数据操作 命令行操作，正则表达式，awk, sort 单机能力不够，推广到多台服务器 缺陷：需要有管理者。但是我们希望是异步的。 使用常驻进程，agent，每隔一段时间执行若干命令 将以前的controller push变成现在的分布式的pull命令 性能分析 性能瓶颈：IO，计算 分布式IO和计算 大纲 文件系统 布式文件系统 GFS 和 HDFS 其他方案 Building Blocks Type Size Speed resisters thousands of bytes 1 CPU circle Cache MB level 快 Main memory GB level 一般 Disk storage TB level` 慢 功能 write read append delete modify 文件系统准测 能存大量的信息，理论上没有上限 information must survive the processed using it concurrent access to multiple processes 文件系统解决方案 storage information on disks in units called files files are persistent（持久化） files are managed by the OS Naming 命名 创建文件并命名 不同OS有不同的规则 Structure 结构 序列结构（遍历），但是Byte Sequence: unstructured 复杂的结构：例如树形结构 变长记录 OS specific meaning of each file 文件系统的实现如何实现文件系统呢？ 包含以下方面 volumes/partitions（磁盘规划） directories（link filenames to file “structure”) list of blocks 高级需求，例如权限管理等 Structure to data 创建文件 find space in the filesystem, add directory entry writing in a file write pointer reading a file read pointer Data layout file system is stored on disks disk is divided into 1 or more partitions sector 0 of disk called Mater Boot Record(MBR) end of MBR has partition table（start &amp; end address of partitions） 数据存储 连续存储：优点，简单，读写性能比较好；缺点，改动效率不高，碎片太多，用户需要知道文件大小。 Linked List Allocation Each file is stored as linked list of blocks first word of each block points to next block rest of disk block is file data 优点 只需要维护第一个block信息 缺点 随机访问开销大 overheads of pointers 使用 根据情况使用，永久存储适合连续存储结构 经常变更：列表结构 索引结构：一个指针能够指向多个blocks Linux 文件系统Directory Tree / bin pwd, cd, ls sbin: root ifup ifconfig ifdown home home directory var log files spools tmp temp files root root’s home usr user program files opt optional Distributed File SystemDFS Goals location transparency concurrency(并发性) transparency failure transparency heterogeneity(异构性) scalability(可扩展性) DFS structure结构 meta server/name node：维护结构，命名 data node：负责存储 data node …. File VS. Chunk 对外提供文件名访问 文件对应chunk的id 定义replication（冗余） 整个DFS就是构建映射 可能的过程 client请求 通过协议，client收到block/chunk信息 client请求要访问的block/chunk 返回哪些name node的那些地方存在有相应的block/chunk client请求name node上的block/chunk 通过网络（socket）返回文件（流） “Rack” awareness core switch core switch rack switch datanode (最容易访问的位置) datanode … core switch … Read 随机读 并行读 throughput awareness smart client 删除 删除映射 定期垃圾回收 优点和局限 fault tolerance, namenode在线热备份 custom designed(例如，定义chunk，减少访问次数) 缺点：只在特定的条件下有用。安全机制。 FS DFS organized with a structure same as FS index+data namenode+datanode smart FS simple DFS+smart client 相当于把FS中的“聪明的”工作搬到client上了。 阅读任务DHT（分布式哈希表）GFH阅读材料。（pipeline， reduplication）","categories":[{"name":"Data Science","slug":"Data-Science","permalink":"https://www.blankspace.cn/categories/Data-Science/"},{"name":"Big Data","slug":"Data-Science/Big-Data","permalink":"https://www.blankspace.cn/categories/Data-Science/Big-Data/"},{"name":"Big Data System","slug":"Data-Science/Big-Data/Big-Data-System","permalink":"https://www.blankspace.cn/categories/Data-Science/Big-Data/Big-Data-System/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://www.blankspace.cn/tags/Linux/"},{"name":"Distributed Storage","slug":"Distributed-Storage","permalink":"https://www.blankspace.cn/tags/Distributed-Storage/"}]},{"title":"线性分类器","slug":"pattern-recognition-ch4","date":"2018-10-12T10:25:09.000Z","updated":"2018-10-13T11:10:14.247Z","comments":true,"path":"2018/10/12/pattern-recognition-ch4/","link":"","permalink":"https://www.blankspace.cn/2018/10/12/pattern-recognition-ch4/","excerpt":"线性判别函数的基本概念 g(x)=w^Tx+\\omega_0Fisher 判别分析​","text":"线性判别函数的基本概念 g(x)=w^Tx+\\omega_0Fisher 判别分析​","categories":[{"name":"AI","slug":"AI","permalink":"https://www.blankspace.cn/categories/AI/"},{"name":"Pattern Recognition","slug":"AI/Pattern-Recognition","permalink":"https://www.blankspace.cn/categories/AI/Pattern-Recognition/"}],"tags":[{"name":"Pattern Recognition","slug":"Pattern-Recognition","permalink":"https://www.blankspace.cn/tags/Pattern-Recognition/"}]},{"title":"（汇总）关于Python的若干问题","slug":"misc-pyerrors","date":"2018-10-10T03:49:34.000Z","updated":"2018-10-15T11:19:43.623Z","comments":true,"path":"2018/10/10/misc-pyerrors/","link":"","permalink":"https://www.blankspace.cn/2018/10/10/misc-pyerrors/","excerpt":"","text":"保存ipython交互式会话内容 1%save test.py 1-xxx Ubuntu安装Anaconda后使其生效 将下面写入.bashrc文件 123export PATH=\"~/Anaconda/bin:$PATH\". /home/&lt;path_to_anaconda&gt;/Anaconda/etc/profile.d/conda.shconda activate 然后使用： 1source .bashrc 123456789# 基于 python3.6 创建一个名为test_py3 的环境conda create --name py36 python=3.6 # 基于 python2.7 创建一个名为test_py2 的环境conda create --name py27 python=2.7# 激活 test 环境activate py36 # windowssource activate py36 # linux/mac 12echo `export PATH=~/Anaconda/bin:$PATH` &gt;&gt; ~/.bashrcsource ~/.bashrc 生成requirements.txt","categories":[{"name":"Misc","slug":"Misc","permalink":"https://www.blankspace.cn/categories/Misc/"},{"name":"Errors","slug":"Misc/Errors","permalink":"https://www.blankspace.cn/categories/Misc/Errors/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://www.blankspace.cn/tags/Python/"},{"name":"Errors","slug":"Errors","permalink":"https://www.blankspace.cn/tags/Errors/"},{"name":"Bugs","slug":"Bugs","permalink":"https://www.blankspace.cn/tags/Bugs/"}]},{"title":"Chrome Shortcuts","slug":"chrome-shortcuts","date":"2018-10-10T03:17:28.000Z","updated":"2018-10-10T11:34:37.271Z","comments":true,"path":"2018/10/10/chrome-shortcuts/","link":"","permalink":"https://www.blankspace.cn/2018/10/10/chrome-shortcuts/","excerpt":"","text":"通过快捷键来使用Chrome，看起来专业一丢丢。 声明和引用 来源：https://support.google.com/chrome/answer/157179?hl=en 常用 快捷键 用途 F12 或 Ctrl+Shift+J 打开和关闭开发者工具 Alt + F4 关闭当前窗口 Ctrl+W 或 Ctrl+F4 关闭当前标签 Ctrl+Tap 转到下个打开的标签 Ctrl+Shift+Tap 转到上个打开的标签 Ctrl+9 转到最后一个打开的标签 Alt+f 打开菜单 Ctrl+f 搜索关键词 Ctrl+e 新的搜索 Alt+Home 打开主页 Ctrl+Alt+Del 清除缓存 Ctrl+r 或 F5 刷新当前页面 Windows &amp; Linux标签页和窗口快捷键 操作 快捷键 打开新窗口 Ctrl + n 在无痕模式下打开新窗口 Ctrl + Shift + n 打开新的标签页，并跳转到该标签页 Ctrl + t 重新打开最后关闭的标签页，并跳转到该标签页 Ctrl + Shift + t 跳转到下一个打开的标签页 Ctrl + Tab 或 Ctrl + PgDn 跳转到上一个打开的标签页 Ctrl + Shift + Tab 或 Ctrl + PgUp 跳转到特定标签页 Ctrl + 1 到 Ctrl + 8 跳转到最后一个标签页 Ctrl + 9 在当前标签页中打开主页 Alt + Home 打开当前标签页浏览记录中记录的上一个页面 Alt + 向左箭头键 打开当前标签页浏览记录中记录的下一个页面 Alt + 向右箭头键 关闭当前标签页 Ctrl + w 或 Ctrl + F4 关闭当前窗口 Ctrl + Shift + w 最小化当前窗口 Alt + 空格键 + n 最大化当前窗口 Alt + 空格键 + x 关闭当前窗口 Alt + F4 退出 Google Chrome Ctrl + Shift + q Chrome功能快捷键 操作 快捷键 打开 Chrome 菜单 Alt + f 或 Alt + e 或 F10 + Enter 键 显示或隐藏书签栏 Ctrl + Shift + b 打开书签管理器 Ctrl + Shift + o 在新标签页中打开“历史记录”页 Ctrl + h 在新标签页中打开“下载内容”页 Ctrl + j 打开 Chrome 任务管理器 Shift + Esc 将焦点放置在 Chrome 工具栏中的第一项上 Shift + Alt + t 将焦点放置在 Chrome 工具栏中的最后一项上 F10 将焦点移到未聚焦于的对话框（如果显示）中 F6 打开查找栏搜索当前网页 Ctrl + f 或 F3 跳转到与查找栏中搜索字词相匹配的下一条内容 Ctrl + g 跳转到与查找栏中搜索字词相匹配的上一条内容 Ctrl + Shift + g 打开“开发者工具” Ctrl + Shift + j 或 F12 打开“清除浏览数据”选项 Ctrl + Shift + Delete 在新标签页中打开 Chrome 帮助中心 F1 使用其他帐号登录或以访客身份浏览 Ctrl + Shift + m 打开反馈表单 Alt + Shift + i 地址栏快捷键在地址栏中可使用以下快捷键： 操作 快捷键 使用默认搜索引擎进行搜索 输入搜索字词并按 Enter 键 使用其他搜索引擎进行搜索 输入搜索引擎名称，然后按 Tab 键 为网站名称添加 www. 和 .com，并在当前标签页中打开该网站 输入网站名称并按 Ctrl + Enter 键 打开新的标签页并执行 Google 搜索 输入搜索字词并按 Alt + Enter 键 跳转到地址栏 Ctrl + l、Alt + d 或 F6 从页面中的任意位置搜索 Ctrl + k 或 Ctrl + e 从地址栏中移除联想查询内容 按向下箭头键以突出显示相应内容，然后按 Shift + Delete 键 网页快捷键 操作 快捷键 打开选项以打印当前网页 Ctrl + p 打开选项以保存当前网页 Ctrl + s 重新加载当前网页 F5 或 Ctrl + r 重新加载当前网页（忽略缓存的内容） Shift + F5 或 Ctrl + Shift + r 停止加载网页 Esc 浏览下一个可点击项 Tab 浏览上一个可点击项 Shift + Tab 使用 Chrome 打开计算机中的文件 按住 Ctrl + o 键并选择文件 显示当前网页的 HTML 源代码（不可修改） Ctrl + u 将当前网页保存为书签 Ctrl + d 将所有打开的标签页以书签的形式保存在新文件夹中 Ctrl + Shift + d 开启或关闭全屏模式 F11 放大网页上的所有内容 Ctrl 和 + 缩小网页上的所有内容 Ctrl 和 - 将网页上的所有内容恢复到默认大小 Ctrl + 0 向下滚动网页，一次一个屏幕 空格键或 PgDn 向上滚动网页，一次一个屏幕 Shift + 空格键或 PgUp 转到网页顶部 首页 转到网页底部 末尾 在网页上水平滚动 按住 Shift 键并滚动鼠标滚轮 将光标移到文本字段中的上一个字词前面 Ctrl + 向左箭头键 将光标移到文本字段中的上一个字词后面 Ctrl + 向右箭头键 删除文本字段中的上一个字词 Ctrl + Backspace 在当前标签页中打开主页 Alt + Home 鼠标快捷键以下快捷键要求您使用鼠标： 操作 快捷键 在当前标签页中打开链接（仅限鼠标） 将链接拖到标签页中 在新的后台标签页中打开链接 按住 Ctrl 键的同时点击链接 打开链接，并跳转到该链接 按住 Ctrl + Shift 键的同时点击链接 打开链接，并跳转到该链接（仅使用鼠标） 将链接拖到标签栏的空白区域 在新窗口中打开链接 按住 Shift 键的同时点击链接 在新窗口中打开标签页（仅使用鼠标） 将标签页拖出标签栏 将标签页移至当前窗口（仅限鼠标） 将标签页拖到现有窗口中 将标签页移回其原始位置 拖动标签页的同时按 Esc 将当前网页保存为书签 将相应网址拖动到书签栏中 下载链接目标 按住 Alt 键的同时点击链接 显示浏览记录 右键点击“后退”箭头 或“前进”箭头 ，或者点击（按住鼠标按键别松手）“后退”箭头 或“前进”箭头 在最大化模式和窗口模式间切换 双击标签栏的空白区域 放大网页上的所有内容 按住 Ctrl 键的同时向上滚动鼠标滚轮 缩小网页上的所有内容 按住 Ctrl 键的同时向下滚动鼠标滚轮 Mac标签页和窗口快捷键 操作 快捷键 打开新窗口 ⌘ + n 在无痕模式下打开新窗口 ⌘ + Shift + n 打开新的标签页，并跳转到该标签页 ⌘ + t 重新打开最后关闭的标签页，并跳转到该标签页 ⌘ + Shift + t 跳转到下一个打开的标签页 ⌘ + Option + 向右箭头键 跳转到上一个打开的标签页 ⌘ + Option + 向左箭头键 跳转到特定标签页 ⌘ + 1 到 ⌘ + 8 跳转到最后一个标签页 ⌘ + 9 打开当前标签页浏览记录中记录的上一个页面 ⌘ + [ 或 ⌘ + 向左箭头键 打开当前标签页浏览记录中记录的下一个页面 ⌘ + ] 或 ⌘ + 向右箭头键 关闭当前标签页或弹出式窗口 ⌘ + w 关闭当前窗口 ⌘ + Shift + w 最小化窗口 ⌘ + m 隐藏 Google Chrome ⌘ + h 退出 Google Chrome ⌘ + q Chrome功能快捷键 操作 快捷键 显示或隐藏书签栏 ⌘ + Shift + b 打开书签管理器 ⌘ + Option + b 在新标签页中打开“设置”页 ⌘ + , 在新标签页中打开“历史记录”页 ⌘ + y 在新标签页中打开“下载内容”页 ⌘ + Shift + j 打开查找栏搜索当前网页 ⌘ + f 跳转到与查找栏中搜索字词相匹配的下一条内容 ⌘ + g 跳转到与查找栏中搜索字词相匹配的上一条内容 ⌘ + Shift + g 打开查找栏后，搜索选定文本 ⌘ + e 打开“开发者工具” ⌘ + Option + i 打开“清除浏览数据”选项 ⌘ + Shift + Delete 使用其他帐号登录或以访客身份浏览 地址栏快捷键在地址栏中可使用以下快捷键： 操作 快捷键 使用默认搜索引擎进行搜索 输入搜索字词并按 Enter 键 使用其他搜索引擎进行搜索 输入搜索引擎名称，然后按 Tab 键 为网站名称添加 www. 和 .com，并在当前标签页中打开该网站 输入网站名称并按 Control + Enter 键 为网站名称添加 www. 和 .com，并在新标签页中打开该网站 输入网站名称并按 Control + Shift + Enter 键 在新的后台标签页中打开网站 输入网址并按 ⌘ + Enter 键 跳转到地址栏 ⌘ + l 从地址栏中移除联想查询内容 按向下箭头键以突出显示相应内容，然后按 Shift + fn + Delete 键 网页快捷键 操作 快捷键 打开选项以打印当前网页 ⌘ + p 打开选项以保存当前网页 ⌘ + s 打开“页面设置”对话框 ⌘ + Option + p 重新加载当前网页（忽略缓存的内容） ⌘ + Shift + r 停止加载网页 Esc 浏览下一个可点击项 Tab 浏览上一个可点击项 Shift + Tab 使用 Google Chrome 打开计算机中的文件 按住 ⌘ + o 键并选择文件 显示当前网页的 HTML 源代码（不可修改） ⌘ + Option + u 打开 JavaScript 控制台 ⌘ + Option + j 将当前网页保存为书签 ⌘ + d 将所有打开的标签页以书签的形式保存在新文件夹中 ⌘ + Shift + d 开启或关闭全屏模式 ⌘ + Ctrl + f 放大网页上的所有内容 ⌘ 和 + 缩小网页上的所有内容 ⌘ 和 - 将网页上的所有内容恢复到默认大小 ⌘ + 0 向下滚动网页，一次一个屏幕 空格键 向上滚动网页，一次一个屏幕 Shift + 空格键 搜索网络 ⌘ + Option + f 将光标移到文本字段中的上一个字词前面 Option + 向左箭头键 将光标移到文本字段中的上一个字词后面 Option + 向右箭头键 删除文本字段中的上一个字词 Option + Delete 在当前标签页中打开主页 ⌘ + Shift + h 鼠标快捷键以下快捷键要求您使用鼠标： 操作 快捷键 在当前标签页中打开链接（仅限鼠标） 将链接拖到标签页中 在新的后台标签页中打开链接 按住 ⌘ 键的同时点击链接 打开链接，并跳转到该链接 按住 ⌘ + Shift 键的同时点击链接 打开链接，并跳转到该链接（仅使用鼠标） 将链接拖到标签栏的空白区域 在新窗口中打开链接 按住 Shift 键的同时点击链接 在新窗口中打开标签页（仅使用鼠标） 将标签页拖出标签栏 将标签页移至当前窗口（仅限鼠标） 将标签页拖到现有窗口中 将标签页移回其原始位置 拖动标签页的同时按 Esc 将当前网页保存为书签 将相应网址拖动到书签栏中 下载链接目标 按住 Option 键的同时点击链接 显示浏览记录 右键点击“后退”箭头 或“前进”箭头 ，或者点击（按住鼠标按键别松手）“后退”箭头 或“前进”箭头 将窗口高度最大化 双击标签栏的空白区域","categories":[{"name":"Misc","slug":"Misc","permalink":"https://www.blankspace.cn/categories/Misc/"},{"name":"Tools & Tips","slug":"Misc/Tools-Tips","permalink":"https://www.blankspace.cn/categories/Misc/Tools-Tips/"},{"name":"Shortcuts","slug":"Misc/Tools-Tips/Shortcuts","permalink":"https://www.blankspace.cn/categories/Misc/Tools-Tips/Shortcuts/"}],"tags":[{"name":"Chrome","slug":"Chrome","permalink":"https://www.blankspace.cn/tags/Chrome/"},{"name":"Shortcuts","slug":"Shortcuts","permalink":"https://www.blankspace.cn/tags/Shortcuts/"}]},{"title":"（待完善...）Shell命令和cluster建立和使用","slug":"bigdata-system-hw01","date":"2018-10-08T15:16:59.000Z","updated":"2018-10-12T10:25:08.949Z","comments":true,"path":"2018/10/08/bigdata-system-hw01/","link":"","permalink":"https://www.blankspace.cn/2018/10/08/bigdata-system-hw01/","excerpt":"","text":"Outline 使用一个Linux server 使用一个a linux cluster mapreduce and spark 协议和工具ssh工具 putty xshell 获得数据 scp, winscp sshfs ftp wget, curl 处理结构化的数据 awk awk ‘{print $3 “\\t” $4} filename 123456$ awk '&#123;print $2 \"\\t\" $3&#125;' a.txt1 12 23 34 42 3 查看数据ls -lh wc : word count 122018211154@ubuntu:~$ wc -l wc_dataset.txt 536700000 wc_dataset.txt 查看部分数据 more less，以分页形式查看文件 head tail 123456789101112131415161718192021xxx@ubuntu:~$ tail -n 20 wc_dataset.txt wordsoftheoldNegrospiritualFreeatlastfreeatlastThankGodAlmightywearefreeatlast 1tail -n 10000 wc_dataset.txt | head -n 100 cat 连接 对于表格数据的操作 cat: 打印到标准输出 cat a b &gt; c :列方向合并a,b到c paste: 行方向的合并 grep -c：查找,grep -c pattern file, c是count。 正则表达式 ^开头 $结尾 *所有 [] {} ? 122018211154@ubuntu:~$ grep -c \"^$\" wc_dataset.txt 0 /a/{++cnt} END {print &quot;Count = &quot;, cnt} filename/a 查找 `awk ‘!($0 in arr) {arr[$0]; print}’ filename sort 排序sor unique Running commands on a single machine&amp;运行多个进程 1234a.sh &amp;b.sh &amp;c.sh &amp;wait 编写.sh ps, top查看进程 crontab： crontab -e Using a linux clusterssh ssh machine command dsh, pdsh 将私钥注册，就不需要输入密码。 Using a linux cluster pusll-based control create an agent on each server, driven by crontab eg. wget and run creat a central control 实验内容准备工作实验目的实验材料实验平台：Windows 10 专业版 64-bit (10.0, Build 16299)。8192MB RAM。处理器：Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 CPUs), ~2.8GHz。数据集：本实验选取的是Kaggle上的facebook-recruiting-iii-keyword-extraction公开数据集，文件大小为3GB，数据集详情见后文。 数据获取Kaggle是当今世界上最大的数据科学竞赛和学习社 获取Kaggle账号 下载数据集 每个数据集在下载之前都要阅读和同意其声明，确定之后就可以开始通过Kaggle命令来下载数据集。 对于首次下载来说，首先确保自己的电脑 单机Linux实验 多机协同实验","categories":[{"name":"Data Science","slug":"Data-Science","permalink":"https://www.blankspace.cn/categories/Data-Science/"},{"name":"Big Data","slug":"Data-Science/Big-Data","permalink":"https://www.blankspace.cn/categories/Data-Science/Big-Data/"},{"name":"Big Data System","slug":"Data-Science/Big-Data/Big-Data-System","permalink":"https://www.blankspace.cn/categories/Data-Science/Big-Data/Big-Data-System/"}],"tags":[{"name":"Shell","slug":"Shell","permalink":"https://www.blankspace.cn/tags/Shell/"},{"name":"ssh","slug":"ssh","permalink":"https://www.blankspace.cn/tags/ssh/"}]},{"title":"（待完善...）Shell命令快速参考","slug":"linux-shell-rush-01","date":"2018-10-08T01:24:03.000Z","updated":"2018-10-16T13:46:48.904Z","comments":true,"path":"2018/10/08/linux-shell-rush-01/","link":"","permalink":"https://www.blankspace.cn/2018/10/08/linux-shell-rush-01/","excerpt":"ls, cd, pwdls 命令格式ls : list ls 常用参数使用man ls查看是坠吼的，笔记里就懒得写那么多了。常用的有： -a: --all, 显示全部的文件，包括以.开头的隐藏文件。 -l: 长列表的形式呈现文件 -t：以文档修改时间排序 -h：列出人能读懂的文件大小 -d：将目录也像问价那样列出来 使用范例1) 参数可以每个加-列出，也可以组合，只用一个-12xxx@ubuntu:~$ ls -a -l -t -hxxx@ubuntu:~$ ls -alth 2) 列出当前目录哪些文件名(比如以d开头)的文件1ls -l d* 字符串替换 123(py36) 2018211154@ubuntu:~/Datasets/yelp-dataset$ tmp=\"c:/windows/system32/dirviers\"(py36) 2018211154@ubuntu:~/Datasets/yelp-dataset$ echo $&#123;tmp/windows/linux&#125;c:/linux/system32/dirviers ${变量/查找/替换值} 一个“/”表示替换第一个，”//”表示替换所有,当查找中出现了：”/”请加转义符”\\/”表示。 12(py36) 2018211154@ubuntu:~/Datasets/yelp-dataset$ echo $&#123;tmp//\\//*&#125;c:*windows*system32*dirviers 将所有斜杠/转换成\\ 123(py36) 2018211154@ubuntu:~/Datasets/yelp-dataset$ tmp=($&#123;tmp//\\//\\\\&#125;)(py36) 2018211154@ubuntu:~/Datasets/yelp-dataset$ echo $tmpc:\\windows\\system32\\dirviers 移动某种类型的文件 mv *.txt new_dir/ 按照一定条件输出某文件的某些行到另外的文件 awk ‘NR==2{print $0 &gt;&gt; “tmp.txt”}’ py27_stars_count_1_to_100.txt 单引号里面是指令，双引号表示字符串 1awk 'NR1&#123;print $0 &gt;&gt; \"temp_result.txt\"&#125; FNR2&#123;print $0 &gt;&gt; \"temp_result.txt\"&#125;' &#123;1..5&#125;.txt","text":"ls, cd, pwdls 命令格式ls : list ls 常用参数使用man ls查看是坠吼的，笔记里就懒得写那么多了。常用的有： -a: --all, 显示全部的文件，包括以.开头的隐藏文件。 -l: 长列表的形式呈现文件 -t：以文档修改时间排序 -h：列出人能读懂的文件大小 -d：将目录也像问价那样列出来 使用范例1) 参数可以每个加-列出，也可以组合，只用一个-12xxx@ubuntu:~$ ls -a -l -t -hxxx@ubuntu:~$ ls -alth 2) 列出当前目录哪些文件名(比如以d开头)的文件1ls -l d* 字符串替换 123(py36) 2018211154@ubuntu:~/Datasets/yelp-dataset$ tmp=\"c:/windows/system32/dirviers\"(py36) 2018211154@ubuntu:~/Datasets/yelp-dataset$ echo $&#123;tmp/windows/linux&#125;c:/linux/system32/dirviers ${变量/查找/替换值} 一个“/”表示替换第一个，”//”表示替换所有,当查找中出现了：”/”请加转义符”\\/”表示。 12(py36) 2018211154@ubuntu:~/Datasets/yelp-dataset$ echo $&#123;tmp//\\//*&#125;c:*windows*system32*dirviers 将所有斜杠/转换成\\ 123(py36) 2018211154@ubuntu:~/Datasets/yelp-dataset$ tmp=($&#123;tmp//\\//\\\\&#125;)(py36) 2018211154@ubuntu:~/Datasets/yelp-dataset$ echo $tmpc:\\windows\\system32\\dirviers 移动某种类型的文件 mv *.txt new_dir/ 按照一定条件输出某文件的某些行到另外的文件 awk ‘NR==2{print $0 &gt;&gt; “tmp.txt”}’ py27_stars_count_1_to_100.txt 单引号里面是指令，双引号表示字符串 1awk 'NR1&#123;print $0 &gt;&gt; \"temp_result.txt\"&#125; FNR2&#123;print $0 &gt;&gt; \"temp_result.txt\"&#125;' &#123;1..5&#125;.txt","categories":[{"name":"Linux","slug":"Linux","permalink":"https://www.blankspace.cn/categories/Linux/"},{"name":"Shell","slug":"Linux/Shell","permalink":"https://www.blankspace.cn/categories/Linux/Shell/"}],"tags":[{"name":"Shell","slug":"Shell","permalink":"https://www.blankspace.cn/tags/Shell/"}]},{"title":"（待完善...）Kaggle机器学习入门教程笔记","slug":"kaggle-learnm-ml-lv1","date":"2018-10-06T12:34:51.000Z","updated":"2018-10-08T01:24:59.966Z","comments":true,"path":"2018/10/06/kaggle-learnm-ml-lv1/","link":"","permalink":"https://www.blankspace.cn/2018/10/06/kaggle-learnm-ml-lv1/","excerpt":"原教程，看这里。 课次：19。预计花费时长：4小时（实际我花了不止这么多时间）。 Level 1Level 2","text":"原教程，看这里。 课次：19。预计花费时长：4小时（实际我花了不止这么多时间）。 Level 1Level 2","categories":[{"name":"Data Science","slug":"Data-Science","permalink":"https://www.blankspace.cn/categories/Data-Science/"},{"name":"Competition","slug":"Data-Science/Competition","permalink":"https://www.blankspace.cn/categories/Data-Science/Competition/"},{"name":"Kaggle","slug":"Data-Science/Competition/Kaggle","permalink":"https://www.blankspace.cn/categories/Data-Science/Competition/Kaggle/"}],"tags":[{"name":"Kaggle","slug":"Kaggle","permalink":"https://www.blankspace.cn/tags/Kaggle/"},{"name":"Skit-learn","slug":"Skit-learn","permalink":"https://www.blankspace.cn/tags/Skit-learn/"},{"name":"Python","slug":"Python","permalink":"https://www.blankspace.cn/tags/Python/"}]},{"title":"（待完善...）向量/矩阵微分","slug":"vector-matrix-derivatives","date":"2018-10-05T02:44:32.000Z","updated":"2018-10-05T15:21:46.509Z","comments":true,"path":"2018/10/05/vector-matrix-derivatives/","link":"","permalink":"https://www.blankspace.cn/2018/10/05/vector-matrix-derivatives/","excerpt":"","text":"声明：本文部分内容引用自James E. Gentle所著的《Matrix Algebra: Theory, Computations, and Applications in Statistics》。 向量（Vector）和矩阵（Matrix）对于表达多变量数据很有用，特别是处理线性方程或者表达对象间的线性关系，使用向量和矩阵是很自然的表示。 向量，矩阵概念和符号表示向量和矩阵有很多种不同的精确定义，但是我们通常认为向量就是排成直线的数组（或者说标量数组），而矩阵就是排成矩形的数组。 “通常没有特别说明，标量（Scalar）认为是实数（Real Number，注：实数是有理数 rational number 和无理数 irrational number 的总称，也就是能够在一条直线上标注出来的连续的数值。实数是和虚数 Imaginary Number 相对的概念，“虚实结合”共同构成了复数 Complex Number。)。我们将实数组成的集合以及实数域记作$\\mathbb{R}$（域field，包含集合以及操作数operator）。则我们将$\\mathbb{R}$之中的元素称之为标量” 有时候，也可以从几何的角度看待向量和矩阵，在平冈和幸所著的《プログラミングのための線形代数 （用于编程的线性代数）》（卢晓南中译本叫做《程序员的数学：线性代数》）就反复强调了矩阵就是几何变换的概念。 Vector对于正整数n，一个向量就是一个n元组、有序集合或n个称之为标量的元素组成的数组。元素的数量称之为order（阶），有时称之为向量的“长度（length）”。 一个n-vector可以视作是n维空间中的一个点，而在这种情况下，长度代表的就是原点到该向量所表示点的欧氏距离：也就是元素平方和开平方根。 一般约定的表示向量使用小写英文字母表示，相同的字母带下标表示想两种的某个元素。向量中的第一个元素记为第1个元素，最后一个元素记为第n个元素（计算机科学中通常将第一个元素记为第0号，最后一个元素记为第n-1号。张学工老师的《模式识别》中是按照这种方式表示的，数学中偏好从1开始的记法）。 一个n-vector写作： x=\\begin{bmatrix} x_1 \\\\ x_2 \\\\ \\vdots \\\\ x_n \\end{bmatrix} \\tag{1}或者： x=\\begin{bmatrix} x_1, x_2, \\cdots, x_n \\end{bmatrix} \\tag{2}通常向量被视为一列，所以第一种表示法更为自然，但是不太方便书写，所以会写成行向量转置的形式。 使用符号 \\mathbb{R^n}记为所以n-vector组成的集合。 Array数组是一堆元素组成的有结构的整体（collection），对应的有直线，矩形以及立方体等形状。数组的维数称为数组的秩（rank）。因此，向量是秩为1的数组，矩阵是秩为2的数组，对于标量，我们认为其实退化的秩为0的数组。数组的秩值得是数组的维数，这和矩阵的秩的概念不同，矩阵的秩表示矩阵中线性无关向量的最大数量值。 Matrix矩阵是一个矩形的或者二维的数组。一个$n \\times m$的矩阵表示有n行m列，若n==m，那么矩阵就是一个方阵。按照上面对于维数的定义，所有的矩阵都是2维的。但是到了矩阵这里，维的定义又不一样了，其代表了矩阵列的个数。 通常使用大写字母来表示矩阵，而为了表示矩阵中的元素，通常表示为对应的小写字母，加上两个下标，第一个下标表示行号，第二个下标表示列的位号。使用符号$a_{j}$表示矩阵$A$的第$j$列，符号$a_{i}$表示矩阵$A$的第$i$行。 $n\\times m$的矩阵可以写作： A=\\begin{bmatrix} a_{11}&\\cdots&a_{1m} \\\\ \\vdots&\\vdots&\\vdots \\\\ a_{n1}&\\cdots&a_{nm} \\\\ \\end{bmatrix} \\tag{3}使用符号$A_{n\\times m}$表示一个矩阵是$n\\times m$列的。使用符号： \\mathbb{R^{n\\times m}}记为所有$n\\times m$标量矩阵组成的集合。使用符号$(A)_{ij}$指明矩阵第$i$行第$j$列的元素，$(A)_{ij}=a_{ij}$。 对于向量还有矩阵的微分和积分，是对在标量变量上相应操作的扩展。~PS:然鹅很悲催的是我记忆里无论是微积分还是线性代数，好像都没有讲对于向量还有矩阵的微分和积分，也许这就是我是个学渣的原因吧😂~。其中需要注意三个关键点： 操作的变量（variables），即对谁进行微分（之后可能会介绍向量/矩阵的积分，到时候就是操作就是积分） 操作数（operand），即要进行微分的函数 操作的结果，即微分的结果。 微分概念和符号表示概念根据导数的定义，一个函数的导数，是函数在变量发生很小一段变化时在该处函数变化率取极限。 现在变量$\\Xi$是向量、矩阵对象，而函数$\\Phi$也是对于关于向量、矩阵的函数。函数$\\Phi$的变化，表示为： \\delta\\Phi = \\Phi_{new}-\\Phi_{old}变量的变化： \\delta\\Xi= \\Xi_{new}-\\Xi_{old}它们也都可以计算出来，比方说使用范式（就将向量、矩阵转换成标量）来衡量值的变化。 但是为了计算对于向量、矩阵的导数，不能直接来除以$\\delta\\Xi$，因为我们没有定义除以向量、矩阵这样的运算。所以我们将其转换成一个可解的问题，即除以范数来解决，于是就可以这样定义上述函数的变化： \\lim_{\\Vert\\delta\\Xi\\Vert\\to0}{\\frac{\\Phi(\\Xi+\\delta\\Xi) - \\Phi(\\Xi)}{\\Vert\\delta\\Xi\\Vert}} \\tag{4}由于无论是向量还是矩阵都定义了和标量的乘法运算，所以上式可以转换为： \\lim_{t\\to0}{\\frac{\\Phi(\\Xi+t\\Upsilon) - \\Phi(\\Xi)}{t}} \\tag{5}其中$t$是一个标量，$\\Upsilon$是要被加到$\\Xi$上（也就是引起改变的）的向量或者矩阵。因此，有上式要求得向量、矩阵的导数（求出了微分也就求出了），$\\Phi$的类型可能是标量，向量或矩阵，同样的对于$\\Xi$和$\\Upsilon$也有可能是标量，向量或矩阵，要分类分析这些情况。 连续性根据导数的定义，如果一个函数在某点的导数存在，那么必须满足，函数在该点是连续的才行。关于向量、矩阵的导数，其连续性如何判断呢？ 以下几种情况均能保证关于向量或矩阵的函数的连续性： 向量或矩阵每个元素都是连续的 （正如标量的和还有积是连续的）向量、矩阵的和以及积也是连续的 连续函数的连续函数是连续的 矩阵的行列式是连续函数 矩阵的逆是连续函数 符号表示 $\\partial/\\partial x$或$\\partial/\\partial x^T$：对于$x$的偏导 $\\partial/\\partial x_i$：对于标量$x_i$的偏导 微分类型和计算 注：由上面的概念可知，无论向量还是矩阵，其中的元素都是标量，至于导数的计算，总的思路就是将其转化为已经定义和可解的对于标量的导数。 关于标量变量的微分向量关于标量的导数 \\frac{\\partial{y}}{\\partial{x}}=\\left(\\frac{\\partial{y_1}}{\\partial{x}}, \\frac{\\partial{y_2}}{\\partial{x}}, \\dots, \\frac{\\partial{y_n}}{\\partial{x}} \\right)^T \\tag{6}其中$y(x)=(y_1(x), y_2(x), \\dots, y_n(x))^T$。向量关于标量的二阶导还有高阶导是同样是一个向量，其中每个元素是对应元素关于标量的二阶导还有高阶导。 这是怎么得来的呢？ “万事开头难”，虽然有的人能够一眼看出来，但是动手验证一遍还是蛮好的。先从具体计算$\\partial y_5/\\partial x$，由于$y_5(x)$是关于标量$x$的函数，所以直接计算出$\\partial y_5/\\partial x$就好了。而$y$是关于$x$函数组成的向量，因此同理，$\\partial y_i/\\partial x$都能直接求出来，因此就有式(6)的结论。 之后的情况总体也是采用这种“把草稿纸捡起来”的推导过程，从而最后完成对于对向量，矩阵的求导。 矩阵关于标量的导数（待完善…） 函数关于标量的导数关于标量的高阶导关于向量变量的微分关于矩阵变量的微分（待完善…）","categories":[{"name":"Math","slug":"Math","permalink":"https://www.blankspace.cn/categories/Math/"},{"name":"Algebra","slug":"Math/Algebra","permalink":"https://www.blankspace.cn/categories/Math/Algebra/"},{"name":"Matrix Algebra","slug":"Math/Algebra/Matrix-Algebra","permalink":"https://www.blankspace.cn/categories/Math/Algebra/Matrix-Algebra/"}],"tags":[{"name":"Vector","slug":"Vector","permalink":"https://www.blankspace.cn/tags/Vector/"},{"name":"Matrix","slug":"Matrix","permalink":"https://www.blankspace.cn/tags/Matrix/"},{"name":"Derivative","slug":"Derivative","permalink":"https://www.blankspace.cn/tags/Derivative/"}]},{"title":"解决SPX截图时屏幕无故放大的问题","slug":"solve-screen-capture","date":"2018-10-03T05:53:21.000Z","updated":"2018-10-03T08:17:57.835Z","comments":true,"path":"2018/10/03/solve-screen-capture/","link":"","permalink":"https://www.blankspace.cn/2018/10/03/solve-screen-capture/","excerpt":"","text":"SPX是个非常好用的截图工具，特色就是其撕边功能，虽然有时候只是看上去很酷而已，但是很有趣。 此外其也提供了模糊，注释，标号，箭头，保存到文件，发送到打印机等功能。 在使用的过程中我发现其存在的几个BUG，第一个，在Windows 10上当我的屏幕分辨率调成最高，同时文字缩放调成推荐的125%，截图的时候程序就会莫名放大，导致只能截取屏幕一部分区域；第二个，中文注释存在问题，设置字符集为GB2312能够显示中文，但是注释后面总会跟奇怪的字符，有的时候是a有的时候是\\1，而西文字符不存在这个问题。 对于第一个问题，一种解决方案就是文字缩放调成100%，这样就不会莫名放大了，但是电脑的图标还有文字就会显得很小，这样对视力不好。 后来经过摸索，应该是程序兼容性导致的，关于Windows程序兼容性的调整，看使旧版程序与此版本的 Windows 兼容，于是就将程序的属性中的兼容性改成Windows7就一切正常了（找到应用程序图标，鼠标右键属性）。 对于第二个问题，应该就是软件自身的BUG了，只能尽量使用英文注释了。","categories":[{"name":"Misc","slug":"Misc","permalink":"https://www.blankspace.cn/categories/Misc/"},{"name":"Bugs","slug":"Misc/Bugs","permalink":"https://www.blankspace.cn/categories/Misc/Bugs/"},{"name":"OS","slug":"Misc/Bugs/OS","permalink":"https://www.blankspace.cn/categories/Misc/Bugs/OS/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://www.blankspace.cn/tags/Windows/"},{"name":"SPX","slug":"SPX","permalink":"https://www.blankspace.cn/tags/SPX/"}]},{"title":"Git快速参考","slug":"git-quick-reference","date":"2018-10-02T12:00:53.000Z","updated":"2018-10-03T12:02:19.474Z","comments":true,"path":"2018/10/02/git-quick-reference/","link":"","permalink":"https://www.blankspace.cn/2018/10/02/git-quick-reference/","excerpt":"","text":"Git进行版本控制，管理的是修改而非文件。分清楚工作区，版本库，暂存区(stage)就能很好地理解其工作原理。 基本概念工作区（Working Directory）：顾名思义是工作的地方，对文件的创建，修改，添加，删除等都会对其造成影响。比方说我创建的一个项目工程就是一个工作区。版本库(Repository)：工作区中有一个隐藏的目录.git，不算工作区而是Git版本库。Git版本库最终的就是stage（或者叫index）的暂存区，还有Git默认创建的master分支，以及指向master分支的HEAD指针。文件的增删变更直接作用在工作区，第一步，变更后add，就添加到了版本库的暂存区。第二步，git commit提交更改，就是将暂存区的所有内容提交到当前分支。简单的理解就是，需要提交的文件修改都放在暂存区，然后一次性提交暂存区中的内容到到当前分支。 文件修改和“时光穿梭” 场景1：当修改了工作区的文件内容，觉得不合适，想直接丢弃工作区的修改，使用命令：git checkout -- filenname 场景2：当修改了工作区的文件内容，觉得不合适，但是已经通过git add添加修改到了暂存区，想直接丢弃工作区的修改，分两步，第一步，使用命令git reset HEAD filename，就回到了场景1；第二步按照场景1来操作。 场景3：已经通过git commit提交了不合适的修改到版本库中，想要撤销本次提交，就执行版本退回命令，git reset --hard commid_id进行时光穿梭。穿梭前可以使用git log查看历史版本；当还需要重返未来的时候，使用git reflog查看历史命令。 删除文件使用rm filename来在工作区删除文件，现在工作区和版本库就不一致了。 场景1：确认删除该文件，使用git rm filename命令，然后git commit 场景2：属于误删操作，但是还没有提交到版本库，使用命令git checkout -- filename，使用版本库中的版本替换到工作区的版本。 场景3：已经提交到版本库，发现属于误删操作，执行版本回退来时光穿梭。 分支管理 创建和切换分支：git checkout -b branch_name.相当于两句指令：git branch branch_name, 随后git checkout branch_name ps: 关于Vim重命名文件，在退出之前输入:sav new_file_name即可，会保存一个相同内容的副本，而不是在当前修改文件中修改，要想这样需要安装特定的插件。 查看分支：git branch 创建分支：git branch &lt;branch_name&gt; 切换到分支：git checkout &lt;branch_name&gt; 创建加切换：git checkout -b &lt;branch_name&gt; 合并到当前：git merge &lt;branch_name&gt; 删除分支：git branch -d &lt;branch_name&gt; 冲突解决新建分支在上面修改后，add, commit，然后切换到要汇入的分支上，假如此时在当前分支上也做了修改，执行git merge &lt;branch_to_be_merged&gt;时发现无法合并，使用git status查看冲突位置，然后修改冲突（就是文件中标注的位置，通常就是同一行内容不一致导致的）,修改完毕后重新add，commit，以及merge就行了。可以使用git log --graph &lt;--abbrev-comit&gt; 查看分支合并情况图。 分支管理策略通常合并分支使用的都是Fast forward模式，在合并的时候加上--no-ff参数就可以采用普通模式合并，历史记录中会有分支的信息，而Fast forward在合并后删除分支日志历史中就没有关于此分支的记录，也就看不出来曾经做过合并。 保存和恢复现场场景：当手头正在多某项工作，突然接到任务需要马上处理，手头的工作不得不停下，但是还没有完善到能够提交的程度。该怎么办？相当于打断点，保存现场，使用git stach保存当前的工作。然后去处理临时或者紧急的任务（比如说修复某个bug）。当临时或者紧急任务处理完毕后，返回来恢复现场继续原来的工作。恢复现场使用,git stash list查看有哪些存档，然后使用git stash apply &lt;stash@{xxx}&gt;来恢复，参数是可选的用于多次stash之后选择要恢复的那个。这种方式恢复后stash的内容不删除，需要输入git stash drop来删除。另一种方式能够恢复的同时删除stash，即使用git stash pop。 删除未合并过的分支场景：导师给了个新需求要做，做完了却悲催地听说不需要了，现在要删除这个分支。git brach -d &lt;feature&gt;，会提示The branch &#39;&lt;feature&gt;&#39; is note fully merged. If you are sure you want to delete it , run&#39;git branch -D &lt;feature&gt;&#39;。 所以git branch -D &lt;branch_name&gt;就是强制删除未曾合并过的分支的命令。 远程分支操作 场景1：在本地创建了一个分支，但是远程没有，commit之后希望push到远程比方说Github上，但是不是master分支，而是一个目前还没有创建的分支上。使用git push -u origin &lt;local_branch_name&gt;,这样就在远程创建了和local_branch_name同名分支。 场景2：远端已经存在和本地同名或者不同名的分支，希望这时将本地的分支推到远端上，git push &lt;remote_name&gt; &lt;local_branch_name&gt;:&lt;remote_branch_name&gt; 场景3：当有多人同时提交到一个分支，自己的提交和他人的有冲突，这时按照提交的提示来做，一般会提示git pull ...，将远程的提交pul下来。pull下来后再次提交，若发现push有冲突，则需要手动解决冲突，解决方法和上文的冲突解决一致。解决后再进行push即可。 场景4：远程已经存在某个分支，想在本地创建一个分支和远程的分支对应起来。使用git checkout -b local_branch_name origin/remote_branch_name 场景5：远程已经存在某个分支，本地同时存在某个分支，现在要把两个关联起来，使用git branch --set-upstream-to=origin/remote_branch_name local_branch_name,制定本地分支和远程分支的关联。这样就能解决某些时候pull失败的问题，比如no tracking information。 rebase整理push历史 场景：本地版本历史过多，有的commit并没有push到远程，所以再查看历史的时候希望只查看push过的提交，使用git rebase命令实现。 tag为commit打上标签 场景1：某个工作已经进行了多次的编辑和提交。过了一阵子，导师或者其他人说，请把之前的某次提交打包一下。这时选择查找commit_id显得就不是很方便。tag就相当于是对于commit的起的别名，使用git tag &lt;tag_name&gt;默认为最近的一次提交打上标签，在产看log的时候，就会出现相应的标签提示。使用git show tag_name来查看tag_name对应的那次提交。 场景2：之前的提交忘记打标签，现在需要对历史中某个版本打上标签。使用git tag tag_name commit_id。使用git tag查看所有标签。 场景3：创建某个标签的同时，还提供一些说明信息。使用git tag -a tag_name -m &quot;balala enengy... commit_id。使用git show tag_name就能查看到相应说明文字。 标签操作 场景1，打错了，在本地删除：git tag -d tag_name 场景2，推送某次提交的标签到远程：git push origin tag_name 场景3，推送全部尚未推送到远程的标签：git push origin --tags 场景4，删除远程的标签：先要删除本地的要删除的标签。然后执行，git push origin :refs/tags/tag_name，然后去远程查看标签是否被删除。 自定义Git除了配置user.name, user.email之外还可以配置一些东西。 场景，命令行工作颜色单调：配置显示ui, git config --global color.ui true，使文件名也被不同的颜色标注。（我使用git bash本身就是有颜色的）。 设置忽略规则这个功能非常有必要，特别是在一些项目中有比较大或者涉及敏感信息的文件时（比如密码，很大很大的数据集等）。编写.gitignore文件来屏蔽某些类型的文件。文件每行表示一个屏蔽规则，一个规则可以屏蔽某个具体的文件或者某一类或几类文件的提交。可以使用通配符来编写规则，#作为注释。12345# 要忽略提交什么文件file_name*.dat*.py[cod]db.ini 当发现某个在屏蔽规则中文件恰好必须要提交上去，使用git add -f file_name.file_type 使用git check-ignore来检查屏蔽规则 配置命令别名 通常使用缩写来给某个长的命令或者组合当做别名，来提高生产效率。使用git config --global alias.s_name &#39;long_command_name&#39;,比如：git config --global alias.br branch，就可以使用git br代替git branch操作了。 例如： git config —global alias.lg “log —color —graph —pretty=format:’%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset’ —abbrev-commit” 删除某个别名：别名放在隐藏文件.git/congif的[alias]后，删除别名直接把对应的行删除即可。也可以在用户主目录下的隐藏文件.gitconfig中也存放了当前用户的Git配置，可以删除文件重新配置命令。 架设Git服务器参考1参考2 总的来说基于Linux系统，在裸Git仓库上配置协议，就能搭建成功。有相关工具来完善和方便管理,Gitosis管理公钥，使用Gitolite进行权限管理。 当然还有GitLab方便搭建私有Git仓库，进行团队管理。","categories":[{"name":"Version Control","slug":"Version-Control","permalink":"https://www.blankspace.cn/categories/Version-Control/"},{"name":"Git","slug":"Version-Control/Git","permalink":"https://www.blankspace.cn/categories/Version-Control/Git/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://www.blankspace.cn/tags/Git/"}]},{"title":"聚类分析","slug":"data-mining-ch01-s02-01","date":"2018-09-27T00:59:31.000Z","updated":"2018-09-27T09:00:47.524Z","comments":true,"path":"2018/09/27/data-mining-ch01-s02-01/","link":"","permalink":"https://www.blankspace.cn/2018/09/27/data-mining-ch01-s02-01/","excerpt":"学习不应当机械重复和记忆，要善于将现有的知识和理论用自己的方式进行理解和转化，就是用自己的话说出来。 基本概念 人类（但不仅仅是人类）通常很擅长也很喜欢聚类。在对世界的观察和理解中，要将特定的对象指派到特定的组中，“物以类聚，人以群分”，我感觉其实也就是分类啦，只不过为了和原始数据提供标记的分类任务区分开来，没有提供标记的任务就是聚类啦，组也不叫组了，就叫做簇cluster，聚类就叫做clustering。聚类不是终点而是起点，为很多工作做下铺垫，比如说数据分析。 聚类有为了理解的，也有为了建立高层的抽象的，前一种比如生物学中的层次分类，界门纲目科属种（kingdom，phylum，class，order，family，genus，species）；信息检索中搜索结果返回若干簇；心理学和医学研究等。后一种如某些算法为了减小分析复杂度，对于数据集的簇使用而不是整个数据集，能够得到和使用所有数据相媲美的结果；还有如压缩，如向量量化，将数据对象使用所在簇的序索引来表示；发现最近邻等。 簇的定义 可以说是一个个的分组，组内之间相互之间是相似的（相关的），而不同组之间的对象是不同的（不想关的）。组内的相似性（同质性）越大越好，组间差别越大越好。分组依赖于数据的特性以及期望的结果，所以实际上是需求驱动的。 聚类类型 划分 VS 层次：划分聚类（partitional clustering）使不同簇之间不能重叠，每个对象恰在一个簇中。层次聚类（hierarchical clustering），按层次嵌套组成一棵树，除叶子节点之外，所有的簇都是其子簇的并。 互斥，重叠和模糊：重叠（overlapping）/非互斥（non-exclusive）聚类反映一个对象属于多个类。模糊聚类（fuzzy clustering）将属于某个簇给定一个权重系数，介于0和1之间，0代表绝对不属于，1代表确定一定加肯定，每个兑现的权重之和等于1。同理的概率聚类也是计算一个对象属于每个簇的概率，所有概率之和等于1。实践中通常将最大系数，最高概率的对象指派到对应的类上，从而转换成为互斥聚类。 完全 VS 部分：完全聚类将每个对象指派到一个簇。而部分聚类选取感兴趣的点，而忽略一些噪声或者背景，离群点等，“找主要矛盾”。 簇的分类 明显分离的：簇与簇一看就有明显的分界 基于原型：原型通常是质心/中心点或者其他最具代表性的点，而簇中每个对象到原型的距离（相似度）都要到其他簇的距离更近（更相似）。 基于图的：图就有边和点，点通常是对象，边就是对象之间的联系，簇可以定义成联通分量，也就是相互联通单数不和分量外的对象联通。还有基于邻近的簇（contiguity-based cluster），也就是两点点只有距离大于一定的阈值，才算作它们是联通的。此外还有比如基于团（clique）的基于图的其他聚类，团也就是集合之间所有的点完全连接。 基于密度：可以和噪声区分 概念簇：通常是很具体的簇中对象的共同性质 … 学习路径 K均值：其实基于原型的，划分的，聚类技术，将数据聚成你所指定的K个簇 凝聚的层次聚类：基于层次的聚类：开始每个点就是一个簇，然后，重复合并最相靠近的簇，直到产生包含所有点的簇，就形成了整个层次聚类的树。其中某些技术可能是基于图的聚类。 DBSCAN：产生于划分聚类的基于密度的聚类算法，簇的个数由算法自动确定，低密度的区域中的点被视为噪声而忽略，即DBSCAN不产生完全聚类。 K均值基本K均值使用伪代码的形式进行描述： 算法：基本K均值算法 1.选择(一般是随机选)K个点作为初始质心2.repeat3. 对每个点求其到K个质心的距离，离谁最近则指派到哪个质心，从而所有点最终形成K个簇4. 对每个簇重新计算质心5.until 每个簇的质心不在发生变化 K均值：附加问题我的问题： $\\color{\\red}{为啥收敛？}$ 首先预热一下： 给定m个点组成的点集$X=\\{x_1, x_2, \\dots, x_m\\}$，满足$C, x_i \\in \\mathbb{R^n}$： E(X)=\\operatorname*{argmin}_{x_i \\in X} \\Vert x_i - C \\Vert_2 则C为X的几何中心。比方说二维平面上的三个点，连接在一起组成一个三角形，则到三个点欧氏距离最短的点是 它们的重心，即$C=( (x_1+x_2+x_3)/3, (y_1, y_2, y_3)/3 )$。 直观上来讲是这样的，但是如何证明呢？“实际上很困难，其没有确定的表达式。但是可以采用迭代的过程每次求一个近似值来逼近”[1]，而且能够确定一定能够找到其全局最优解，而不会陷入到局部最优解中，原因就在于其实一个凸函数，为什么呢？原因是“每个样本点到到特定点的距离是一个凸函数，凸函数相加也是凸函数”。具体的算法有Weiszfeld法 ： 当其估计点落在给定点上时可能无法收敛，可以通过修改来使其收敛。 为什么k-means是收敛的，本质原因在于其属于EM算法的范畴，而EM算法是收敛的。 什么是EM算法，全称叫做Expectation Maximum，也就是期望最大，属于高斯混合模型（混合高斯模型）中讲到的内容。 之所以使用混合高斯模型，原因就在于聚类划分太“一刀切（hard）”，也就是说是“hard assignment”，然而现实情况存在一些“灰色地带”。由上面几何中心的推导可以得知，使用k均值算法，形成的簇都是基于中心的簇， 所以就要引入概率来衡量采样所归属的簇。 二分K均值","text":"学习不应当机械重复和记忆，要善于将现有的知识和理论用自己的方式进行理解和转化，就是用自己的话说出来。 基本概念 人类（但不仅仅是人类）通常很擅长也很喜欢聚类。在对世界的观察和理解中，要将特定的对象指派到特定的组中，“物以类聚，人以群分”，我感觉其实也就是分类啦，只不过为了和原始数据提供标记的分类任务区分开来，没有提供标记的任务就是聚类啦，组也不叫组了，就叫做簇cluster，聚类就叫做clustering。聚类不是终点而是起点，为很多工作做下铺垫，比如说数据分析。 聚类有为了理解的，也有为了建立高层的抽象的，前一种比如生物学中的层次分类，界门纲目科属种（kingdom，phylum，class，order，family，genus，species）；信息检索中搜索结果返回若干簇；心理学和医学研究等。后一种如某些算法为了减小分析复杂度，对于数据集的簇使用而不是整个数据集，能够得到和使用所有数据相媲美的结果；还有如压缩，如向量量化，将数据对象使用所在簇的序索引来表示；发现最近邻等。 簇的定义 可以说是一个个的分组，组内之间相互之间是相似的（相关的），而不同组之间的对象是不同的（不想关的）。组内的相似性（同质性）越大越好，组间差别越大越好。分组依赖于数据的特性以及期望的结果，所以实际上是需求驱动的。 聚类类型 划分 VS 层次：划分聚类（partitional clustering）使不同簇之间不能重叠，每个对象恰在一个簇中。层次聚类（hierarchical clustering），按层次嵌套组成一棵树，除叶子节点之外，所有的簇都是其子簇的并。 互斥，重叠和模糊：重叠（overlapping）/非互斥（non-exclusive）聚类反映一个对象属于多个类。模糊聚类（fuzzy clustering）将属于某个簇给定一个权重系数，介于0和1之间，0代表绝对不属于，1代表确定一定加肯定，每个兑现的权重之和等于1。同理的概率聚类也是计算一个对象属于每个簇的概率，所有概率之和等于1。实践中通常将最大系数，最高概率的对象指派到对应的类上，从而转换成为互斥聚类。 完全 VS 部分：完全聚类将每个对象指派到一个簇。而部分聚类选取感兴趣的点，而忽略一些噪声或者背景，离群点等，“找主要矛盾”。 簇的分类 明显分离的：簇与簇一看就有明显的分界 基于原型：原型通常是质心/中心点或者其他最具代表性的点，而簇中每个对象到原型的距离（相似度）都要到其他簇的距离更近（更相似）。 基于图的：图就有边和点，点通常是对象，边就是对象之间的联系，簇可以定义成联通分量，也就是相互联通单数不和分量外的对象联通。还有基于邻近的簇（contiguity-based cluster），也就是两点点只有距离大于一定的阈值，才算作它们是联通的。此外还有比如基于团（clique）的基于图的其他聚类，团也就是集合之间所有的点完全连接。 基于密度：可以和噪声区分 概念簇：通常是很具体的簇中对象的共同性质 … 学习路径 K均值：其实基于原型的，划分的，聚类技术，将数据聚成你所指定的K个簇 凝聚的层次聚类：基于层次的聚类：开始每个点就是一个簇，然后，重复合并最相靠近的簇，直到产生包含所有点的簇，就形成了整个层次聚类的树。其中某些技术可能是基于图的聚类。 DBSCAN：产生于划分聚类的基于密度的聚类算法，簇的个数由算法自动确定，低密度的区域中的点被视为噪声而忽略，即DBSCAN不产生完全聚类。 K均值基本K均值使用伪代码的形式进行描述： 算法：基本K均值算法 1.选择(一般是随机选)K个点作为初始质心2.repeat3. 对每个点求其到K个质心的距离，离谁最近则指派到哪个质心，从而所有点最终形成K个簇4. 对每个簇重新计算质心5.until 每个簇的质心不在发生变化 K均值：附加问题我的问题： $\\color{\\red}{为啥收敛？}$ 首先预热一下： 给定m个点组成的点集$X=\\{x_1, x_2, \\dots, x_m\\}$，满足$C, x_i \\in \\mathbb{R^n}$： E(X)=\\operatorname*{argmin}_{x_i \\in X} \\Vert x_i - C \\Vert_2 则C为X的几何中心。比方说二维平面上的三个点，连接在一起组成一个三角形，则到三个点欧氏距离最短的点是 它们的重心，即$C=( (x_1+x_2+x_3)/3, (y_1, y_2, y_3)/3 )$。 直观上来讲是这样的，但是如何证明呢？“实际上很困难，其没有确定的表达式。但是可以采用迭代的过程每次求一个近似值来逼近”[1]，而且能够确定一定能够找到其全局最优解，而不会陷入到局部最优解中，原因就在于其实一个凸函数，为什么呢？原因是“每个样本点到到特定点的距离是一个凸函数，凸函数相加也是凸函数”。具体的算法有Weiszfeld法 ： 当其估计点落在给定点上时可能无法收敛，可以通过修改来使其收敛。 为什么k-means是收敛的，本质原因在于其属于EM算法的范畴，而EM算法是收敛的。 什么是EM算法，全称叫做Expectation Maximum，也就是期望最大，属于高斯混合模型（混合高斯模型）中讲到的内容。 之所以使用混合高斯模型，原因就在于聚类划分太“一刀切（hard）”，也就是说是“hard assignment”，然而现实情况存在一些“灰色地带”。由上面几何中心的推导可以得知，使用k均值算法，形成的簇都是基于中心的簇， 所以就要引入概率来衡量采样所归属的簇。 二分K均值","categories":[{"name":"Data Science","slug":"Data-Science","permalink":"https://www.blankspace.cn/categories/Data-Science/"},{"name":"Data Mining","slug":"Data-Science/Data-Mining","permalink":"https://www.blankspace.cn/categories/Data-Science/Data-Mining/"}],"tags":[{"name":"Unsupervised Learning","slug":"Unsupervised-Learning","permalink":"https://www.blankspace.cn/tags/Unsupervised-Learning/"},{"name":"Clustering","slug":"Clustering","permalink":"https://www.blankspace.cn/tags/Clustering/"}]},{"title":"（待完善...）LaTeX笔记","slug":"latex-notes-01","date":"2018-09-23T02:14:46.000Z","updated":"2018-10-05T04:29:41.882Z","comments":true,"path":"2018/09/23/latex-notes-01/","link":"","permalink":"https://www.blankspace.cn/2018/09/23/latex-notes-01/","excerpt":"&#160; &#160; &#160; &#160;为什么要学习$\\LaTeX$？原因很简单，“虽说气质为王，但往往也要看脸”，所以相当多的高质量的论文，书籍都会使用这种精确控制，外行看起来狂拽酷炫，不明嚼栗的排版工具，所以想发论文，这种排版神器的使用是圈子里必备且默认你会的技能。另外，我个人觉得Word十分好用，十分良心，所见即所得，功能十分强大。有人会褒一个贬一个，我觉得Word和$\\LaTeX$都很好。现在有的期刊，会议也接受Word格式的论文，在有必要的时候学习也是极好的。 &#160; &#160; &#160; &#160;看过一些介绍$\\LaTeX$ 的文章和书籍,很多作者写的很好，总体上也是从易到难，由浅入深。但是我看完之后，或者边看边学的过程中，总感觉缺了点什么，那就是这么多的规则，这么多符号，这么多宏包，什么时候才能用 $\\LaTeX$ 写一篇像样的文章，什么时候才能写书，写论文呀！ &#160; &#160; &#160; &#160;我个人不想对$\\LaTeX$ 做太深的研究，也不想向别人炫耀这种看似困难的工具的使用，只想发挥其该有的功用——更好地书写排版。所以在这里记下学习时的简单实用的笔记，尽快上手，同样也是边学习边练习边回顾，希望最终写出专业的论文以及其他优雅的出版物还有演示文稿，以掌握一个科研人员基本的素质。 学习资源 $\\LaTeX$开源小屋：很不错的中文$\\LaTeX$社区，几乎应有尽有，资料很全 ShareLaTeX：有丰富的模板，可以用来模仿 GitHub，简书，CSDN等，上面都已一些相关的模板，文章等 TeX StackExchange还有Stack Overflow：遇到问题可以去上面查询 基础结构1234567\\documentclass&#123;article&#125;\\usepackage&#123;ctex&#125; %引入中文支持\\begin&#123;document&#125; \\LaTeX&#123;&#125; 你好 \\end&#123;document&#125; 用法 \\命令名称[备选参数]{（必选）参数}：叫做命令。个人感觉类似于HTML中的&lt;!DOCTYPE html&gt;。例如，\\documentclass[a4paper]{ctexart}，花括号中为必选参数，设置文档类型为ctexart。中括号里备选参数a4paper，将文档大小设置为A4纸大小。 \\begin[...]{environment} ...\\end{environment}：叫做环境，用于控制\\begin[...]{environment}和\\end{environment}之间的内容。","text":"&#160; &#160; &#160; &#160;为什么要学习$\\LaTeX$？原因很简单，“虽说气质为王，但往往也要看脸”，所以相当多的高质量的论文，书籍都会使用这种精确控制，外行看起来狂拽酷炫，不明嚼栗的排版工具，所以想发论文，这种排版神器的使用是圈子里必备且默认你会的技能。另外，我个人觉得Word十分好用，十分良心，所见即所得，功能十分强大。有人会褒一个贬一个，我觉得Word和$\\LaTeX$都很好。现在有的期刊，会议也接受Word格式的论文，在有必要的时候学习也是极好的。 &#160; &#160; &#160; &#160;看过一些介绍$\\LaTeX$ 的文章和书籍,很多作者写的很好，总体上也是从易到难，由浅入深。但是我看完之后，或者边看边学的过程中，总感觉缺了点什么，那就是这么多的规则，这么多符号，这么多宏包，什么时候才能用 $\\LaTeX$ 写一篇像样的文章，什么时候才能写书，写论文呀！ &#160; &#160; &#160; &#160;我个人不想对$\\LaTeX$ 做太深的研究，也不想向别人炫耀这种看似困难的工具的使用，只想发挥其该有的功用——更好地书写排版。所以在这里记下学习时的简单实用的笔记，尽快上手，同样也是边学习边练习边回顾，希望最终写出专业的论文以及其他优雅的出版物还有演示文稿，以掌握一个科研人员基本的素质。 学习资源 $\\LaTeX$开源小屋：很不错的中文$\\LaTeX$社区，几乎应有尽有，资料很全 ShareLaTeX：有丰富的模板，可以用来模仿 GitHub，简书，CSDN等，上面都已一些相关的模板，文章等 TeX StackExchange还有Stack Overflow：遇到问题可以去上面查询 基础结构1234567\\documentclass&#123;article&#125;\\usepackage&#123;ctex&#125; %引入中文支持\\begin&#123;document&#125; \\LaTeX&#123;&#125; 你好 \\end&#123;document&#125; 用法 \\命令名称[备选参数]{（必选）参数}：叫做命令。个人感觉类似于HTML中的&lt;!DOCTYPE html&gt;。例如，\\documentclass[a4paper]{ctexart}，花括号中为必选参数，设置文档类型为ctexart。中括号里备选参数a4paper，将文档大小设置为A4纸大小。 \\begin[...]{environment} ...\\end{environment}：叫做环境，用于控制\\begin[...]{environment}和\\end{environment}之间的内容。","categories":[{"name":"Typesetting","slug":"Typesetting","permalink":"https://www.blankspace.cn/categories/Typesetting/"},{"name":"TeX","slug":"Typesetting/TeX","permalink":"https://www.blankspace.cn/categories/Typesetting/TeX/"},{"name":"LaTex","slug":"Typesetting/TeX/LaTex","permalink":"https://www.blankspace.cn/categories/Typesetting/TeX/LaTex/"}],"tags":[{"name":"TeX","slug":"TeX","permalink":"https://www.blankspace.cn/tags/TeX/"},{"name":"LaTex","slug":"LaTex","permalink":"https://www.blankspace.cn/tags/LaTex/"}]},{"title":"GitHub关键概念","slug":"github-keywords","date":"2018-09-22T01:50:06.000Z","updated":"2018-09-22T06:49:43.352Z","comments":true,"path":"2018/09/22/github-keywords/","link":"","permalink":"https://www.blankspace.cn/2018/09/22/github-keywords/","excerpt":"","text":"Git &amp; GitHubGit是一个版本控制软件： 读作[gɪt],拼音读作gē yì te。 Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency. GitHub是一个网站： 读作[gɪt hʌb]，拼音读作gē yì te hà bo GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere. 通常自己一个人开发时使用Git有助于对代码版本进行控制，返回到之前任意时间点，能够合并多个分支流，解决或查看冲突。假如有协作开发作用更大。 而使用GitHub不仅能够用来存储Git库，其还会提供以下操作： 文档需求：使用提出问题（issues），可以提出新的功能需求，记录缺陷，从而让团队进行开发 独立分支流记录：使用分支（branches）和拉请求（pull requests）,可以在不同的分支或功能下进行合作。 评估工作进展：通过查看拉请求（pull requests）列表，可以查看目前工作状态下的所有不同功能，通过单击列出的任何一个拉请求命令，可以看到最新变化以及所有关于该动的讨论。 看到团队的进展：通过使用Insights，可以看到团队的工作进展和脉冲（pulse）。 关键概念/术语由于目前GitHub还是英文的，所以刚开始学习时不是很明白其中的某些概念，可能会觉得有点不明所以，经过一段时间的摸索，特整理如下： repository（仓库）单数，a repository；复数，repositories。概念： a place, building, or receptacle where things are or may be stored. 相当于一个项目（Project）文件夹，仓库名也就是项目文件夹名称，可以在里面存放代码，各种和项目有关的文档等。 watch（关注）长期关注某个项目的进展，设置在某些情况下发送提醒（到邮箱）。 star（收藏）觉得某个项目不错，收藏一下，给个小星星，方便以后查看，同时也是对项目开发者的赞赏。 fork（分叉）有时候我没有直接改变某个项目的许可，或者我想参与一个你不知道的人或者团队的开源项目，就可以克隆，修改，并使用拉请求的方式将其提交到最初的项目中。 issue（提出问题）用来讨论功能/需求，跟踪缺陷，或者两者兼备。比如我发现某个项目在PC上没问题，但移植到手机上就出现了位置的错误，就可以开一个issue来记录错误的过程。 pull request（拉请求）原先拉请求是用来请求别人复查自己已经完成的工作，并将它们合并到主分支上。现在，拉请求常用在一个流程的早期阶段，可以讨论可能的功能。 clone（克隆）将项目库复制到本地。例如我下载一个项目的副本，在本地将其中的某个bug修复，然后再提交回GitHub。 wiki（维基文档记录）当Readme比较长了，可以使用wiki进行文档记录，各个章节页面用简单的链接关系相联系。（通常我看好像没多少中国开发者选择使用wiki，有的readme相当长）。 commit（提交）将一个或者多个文件的修改保存到Git历史记录中，都会创建一个新的提交。 branch（分支） 主分支（master branch） 功能分支（feature branch） merge（合并）将一个分支的全部工作合并到另一个分支，GitHub会在合并前检查是否有冲突并给出修改意见。 release（发布）到了一定阶段，项目已经差不多了，就可以新建release，版本x.xx，来发布正式版供别人打包下载。 GitHub学习资源 初级：https://services.github.com/ 高级：https://developer.github.com/","categories":[{"name":"Version Control","slug":"Version-Control","permalink":"https://www.blankspace.cn/categories/Version-Control/"},{"name":"Git","slug":"Version-Control/Git","permalink":"https://www.blankspace.cn/categories/Version-Control/Git/"},{"name":"GitHub","slug":"Version-Control/Git/GitHub","permalink":"https://www.blankspace.cn/categories/Version-Control/Git/GitHub/"}],"tags":[{"name":"GitHub","slug":"GitHub","permalink":"https://www.blankspace.cn/tags/GitHub/"}]},{"title":"（待完善...）使用Scikit-learn进行机器学习","slug":"scikit-learn-ch01","date":"2018-09-20T12:57:03.000Z","updated":"2018-10-05T04:29:16.481Z","comments":true,"path":"2018/09/20/scikit-learn-ch01/","link":"","permalink":"https://www.blankspace.cn/2018/09/20/scikit-learn-ch01/","excerpt":"","text":"我发现使用scikit-learn上手简单，设计合理，接口统一，内置了很多机器学习算法，所以使用其来进行机器学习数据分析是一种极好的选择。根据一些经典的例子，复现和演示，来加深对于机器学习算法的理解。 线性回归一元线性回归多元线性回归监督学习基于支持向量机（SVM）的图像分类基于朴素贝叶斯（Naïve Bayes）的文本分类决策树房价预测无监督学习主成分分析聚类高级特征Grid Search…","categories":[],"tags":[]},{"title":"Frequency Analysis","slug":"pandas-experiment-01","date":"2018-09-20T08:12:36.000Z","updated":"2018-09-20T09:06:35.824Z","comments":true,"path":"2018/09/20/pandas-experiment-01/","link":"","permalink":"https://www.blankspace.cn/2018/09/20/pandas-experiment-01/","excerpt":"","text":"最关键的就一句代码，直接跳到最后即可。 数据挖掘课程作业貌似要用到MATLAB以及SPSS，而 实验设计和数据分析课程主要使用Excel。除了SPSS之外其余两个都接触过，今天安装了SPSS，安装后的新手指引很贴心，给了一个收入分析的例子，全程不到5分钟，最后出来了很棒的统计以及可视化结果，长成下面这样。感觉Pandas，NumPy，Matplotlib也能做，试着复现一下，同时回顾一下Pandas的操作。 1import pandas as pd 1import numpy as np 123# 导入数据，../DataSets/demoFreq1.csvdemoFreq_path = \"../DataSets/demoFreq1.csv\"df = pd.read_csv(demoFreq_path) 1df .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } id gender bdate age educ jobcat salbegin salary service prevexp 0 1 m 7/26/1981 36 15 4 44010.0 98799.81000 98 144 1 2 m 11/13/1987 30 16 5 30562.5 69679.86600 98 36 2 3 f 1/16/1959 58 12 2 19560.0 37179.92850 98 381 3 4 f 10/6/1994 23 8 1 21516.0 37959.92700 98 190 4 5 m 8/1/1984 33 15 5 34230.0 77999.85000 98 138 5 6 m 2/12/1988 29 15 5 22005.0 55639.89300 98 67 6 7 m 10/17/1985 32 15 5 30562.5 62399.88000 98 114 7 8 f 10/27/1995 22 12 2 15892.5 37959.92700 98 0 8 9 f 7/16/1975 42 15 5 20782.5 48359.90700 98 115 9 10 f 8/6/1975 42 12 2 22005.0 41599.92000 98 244 10 11 f 7/31/1979 38 16 5 26895.0 52519.89900 98 143 11 12 m 7/3/1993 24 8 1 19560.0 49139.90550 98 26 12 13 m 1/7/1990 27 15 5 23227.5 48099.90750 98 34 13 14 f 8/19/1978 39 15 5 27384.0 60839.88300 98 137 14 15 m 2/19/1992 25 12 2 22005.0 47319.90900 97 66 15 16 m 5/10/1994 23 12 2 24450.0 70719.86400 97 24 16 17 m 1/8/1992 25 15 5 23227.5 79733.18000 97 48 17 18 m 9/10/1985 32 16 4 44841.3 179832.98750 97 70 18 19 m 2/9/1992 25 12 2 23227.5 73319.85900 97 103 19 20 f 7/15/1969 48 12 2 18826.5 45499.91250 97 48 20 21 f 8/11/1992 25 16 5 24450.0 67339.87050 97 17 21 22 m 3/17/1970 47 12 2 20782.5 37699.92750 97 315 22 23 f 9/5/1994 23 15 5 18093.0 41599.92000 97 75 23 24 f 9/17/1962 55 12 2 14670.0 29379.94350 97 124 24 25 f 12/22/1971 45 15 5 14670.0 36659.92950 97 171 25 26 m 4/30/1996 21 15 5 20538.0 53819.89650 96 14 26 27 m 9/9/1983 34 19 4 44792.4 104649.79875 96 96 27 28 m 10/1/1992 25 15 5 23227.5 56419.89150 96 43 28 29 m 7/20/1973 44 19 6 130367.4 233999.55000 96 199 29 30 m 3/10/1991 26 15 5 23227.5 54079.89600 96 54 ... ... ... ... ... ... ... ... ... ... ... 444 445 m 1/24/1993 24 15 5 26895.0 48619.90650 66 84 445 446 m 1/24/1988 29 16 4 71883.0 173333.00000 66 128 446 447 m 12/23/1990 26 15 5 33496.5 84933.17000 66 86 447 448 f 11/26/1962 54 12 2 16626.0 28339.94550 66 163 448 449 m 6/25/1995 22 16 4 35452.5 121333.10000 65 19 449 450 m 1/11/1984 33 19 4 57017.4 95333.15000 65 129 450 451 m 1/9/1999 18 15 5 23227.5 49399.90500 65 20 451 452 m 2/3/1983 34 12 2 29340.0 49919.90400 65 210 452 453 m 1/28/1960 57 15 5 25672.5 42379.91850 65 338 453 454 m 1/18/1995 22 19 4 50937.5 157083.03125 65 18 454 455 m 7/9/1993 24 16 4 31785.0 75659.85450 65 19 455 456 m 4/8/1989 28 19 4 69291.3 129999.75000 65 54 456 457 m 11/17/1997 19 15 5 23227.5 54859.89450 65 10 457 458 m 12/27/1994 22 19 4 46846.2 107249.79375 65 26 458 459 f 8/2/2000 17 12 2 18337.5 37699.92750 65 0 459 460 f 2/2/1999 18 12 2 20782.5 38999.92500 65 24 460 461 f 5/1/1995 22 8 1 22005.0 37439.92800 65 173 461 462 f 4/9/1993 24 16 4 31785.0 59643.88530 65 79 462 463 f 4/6/1964 53 15 5 23227.5 35879.93100 65 241 463 464 m 9/10/1991 26 19 4 53790.0 82419.84150 64 27 464 465 m 1/10/1992 25 12 2 26895.0 58759.88700 64 106 465 466 f 12/6/1977 39 12 2 22005.0 40559.92200 64 198 466 467 f 2/7/1997 20 16 5 31785.0 56939.89050 64 20 467 468 f 5/21/1995 22 16 4 32567.4 96633.14750 64 36 468 469 f 11/22/1993 23 15 5 22738.5 43679.91600 64 57 469 470 m 7/14/1993 24 12 2 25672.5 45499.91250 64 69 470 471 m 1/24/1996 21 15 5 25672.5 45759.91200 64 32 471 472 m 8/14/1995 22 15 5 25672.5 67859.86950 63 46 472 473 f 5/18/1967 50 12 2 20782.5 37179.92850 63 139 473 474 f 4/28/1998 19 12 2 23227.5 50959.90200 63 9 474 rows × 10 columns 1print(df['salary']) 0 98799.81000 1 69679.86600 2 37179.92850 3 37959.92700 4 77999.85000 5 55639.89300 6 62399.88000 7 37959.92700 8 48359.90700 9 41599.92000 10 52519.89900 11 49139.90550 12 48099.90750 13 60839.88300 14 47319.90900 15 70719.86400 16 79733.18000 17 179832.98750 18 73319.85900 19 45499.91250 20 67339.87050 21 37699.92750 22 41599.92000 23 29379.94350 24 36659.92950 25 53819.89650 26 104649.79875 27 56419.89150 28 233999.55000 29 54079.89600 ... 444 48619.90650 445 173333.00000 446 84933.17000 447 28339.94550 448 121333.10000 449 95333.15000 450 49399.90500 451 49919.90400 452 42379.91850 453 157083.03125 454 75659.85450 455 129999.75000 456 54859.89450 457 107249.79375 458 37699.92750 459 38999.92500 460 37439.92800 461 59643.88530 462 35879.93100 463 82419.84150 464 58759.88700 465 40559.92200 466 56939.89050 467 96633.14750 468 43679.91600 469 45499.91250 470 45759.91200 471 67859.86950 472 37179.92850 473 50959.90200 Name: salary, Length: 474, dtype: float64 1print(type(df['salary'])) # 每一列就是一个Series，相当于SPSS中的变量值 &lt;class &#39;pandas.core.series.Series&#39;&gt; 1df.head(10) # 查看前n条记录 .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } id gender bdate age educ jobcat salbegin salary service prevexp 0 1 m 7/26/1981 36 15 4 44010.0 98799.8100 98 144 1 2 m 11/13/1987 30 16 5 30562.5 69679.8660 98 36 2 3 f 1/16/1959 58 12 2 19560.0 37179.9285 98 381 3 4 f 10/6/1994 23 8 1 21516.0 37959.9270 98 190 4 5 m 8/1/1984 33 15 5 34230.0 77999.8500 98 138 5 6 m 2/12/1988 29 15 5 22005.0 55639.8930 98 67 6 7 m 10/17/1985 32 15 5 30562.5 62399.8800 98 114 7 8 f 10/27/1995 22 12 2 15892.5 37959.9270 98 0 8 9 f 7/16/1975 42 15 5 20782.5 48359.9070 98 115 9 10 f 8/6/1975 42 12 2 22005.0 41599.9200 98 244 1df[0:10] # 类似于数组的形式来操作 .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } id gender bdate age educ jobcat salbegin salary service prevexp 0 1 m 7/26/1981 36 15 4 44010.0 98799.8100 98 144 1 2 m 11/13/1987 30 16 5 30562.5 69679.8660 98 36 2 3 f 1/16/1959 58 12 2 19560.0 37179.9285 98 381 3 4 f 10/6/1994 23 8 1 21516.0 37959.9270 98 190 4 5 m 8/1/1984 33 15 5 34230.0 77999.8500 98 138 5 6 m 2/12/1988 29 15 5 22005.0 55639.8930 98 67 6 7 m 10/17/1985 32 15 5 30562.5 62399.8800 98 114 7 8 f 10/27/1995 22 12 2 15892.5 37959.9270 98 0 8 9 f 7/16/1975 42 15 5 20782.5 48359.9070 98 115 9 10 f 8/6/1975 42 12 2 22005.0 41599.9200 98 244 1df['age'] # 根据变量名（关键码）来查看 0 36 1 30 2 58 3 23 4 33 5 29 6 32 7 22 8 42 9 42 10 38 11 24 12 27 13 39 14 25 15 23 16 25 17 32 18 25 19 48 20 25 21 47 22 23 23 55 24 45 25 21 26 34 27 25 28 44 29 26 .. 444 24 445 29 446 26 447 54 448 22 449 33 450 18 451 34 452 57 453 22 454 24 455 28 456 19 457 22 458 17 459 18 460 22 461 24 462 53 463 26 464 25 465 39 466 20 467 22 468 23 469 24 470 21 471 22 472 50 473 19 Name: age, Length: 474, dtype: object 1print(df.columns) # 查看所有变量名 Index([&#39;id&#39;, &#39;gender&#39;, &#39;bdate&#39;, &#39;age&#39;, &#39;educ&#39;, &#39;jobcat&#39;, &#39;salbegin&#39;, &#39;salary&#39;, &#39;service&#39;, &#39;prevexp&#39;], dtype=&#39;object&#39;) 12var_names = df.columns.tolist() # 转换为listprint(var_names) [&#39;id&#39;, &#39;gender&#39;, &#39;bdate&#39;, &#39;age&#39;, &#39;educ&#39;, &#39;jobcat&#39;, &#39;salbegin&#39;, &#39;salary&#39;, &#39;service&#39;, &#39;prevexp&#39;] 1df.describe() # 基本统计信息 .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } id educ jobcat salbegin salary service prevexp count 474.000000 474.000000 474.000000 474.000000 474.000000 474.000000 474.000000 mean 237.500000 13.491561 3.278481 27736.220992 59660.468953 81.109705 95.860759 std 136.976275 2.884846 1.462166 12829.140192 29597.756286 10.060945 104.586236 min 1.000000 8.000000 1.000000 14670.000000 27299.947500 63.000000 0.000000 25% 119.250000 12.000000 2.000000 20354.625000 41599.920000 72.000000 19.250000 50% 237.500000 12.000000 3.000000 24450.000000 50049.903750 81.000000 55.000000 75% 355.750000 15.000000 5.000000 28508.700000 64024.876875 90.000000 138.750000 max 474.000000 21.000000 6.000000 130367.400000 233999.550000 98.000000 476.000000 1df.describe(include=[np.number]) # 只统计数值型的内容 .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } id educ jobcat salbegin salary service prevexp count 474.000000 474.000000 474.000000 474.000000 474.000000 474.000000 474.000000 mean 237.500000 13.491561 3.278481 27736.220992 59660.468953 81.109705 95.860759 std 136.976275 2.884846 1.462166 12829.140192 29597.756286 10.060945 104.586236 min 1.000000 8.000000 1.000000 14670.000000 27299.947500 63.000000 0.000000 25% 119.250000 12.000000 2.000000 20354.625000 41599.920000 72.000000 19.250000 50% 237.500000 12.000000 3.000000 24450.000000 50049.903750 81.000000 55.000000 75% 355.750000 15.000000 5.000000 28508.700000 64024.876875 90.000000 138.750000 max 474.000000 21.000000 6.000000 130367.400000 233999.550000 98.000000 476.000000 1df['salary'].describe() # 没有统计missing的数量，当其余信息比spss丰富 count 474.000000 mean 59660.468953 std 29597.756286 min 27299.947500 25% 41599.920000 50% 50049.903750 75% 64024.876875 max 233999.550000 Name: salary, dtype: float64 1df.describe(include=[np.object]) # 只统计字符串类型的内容 .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } gender bdate age count 474 474 474 unique 2 458 44 top m 5/3/1995 24 freq 258 3 44 123'''问题1 收入分布''' &#39;\\n问题1 收入分布\\n&#39; 12# 纵坐标，数量；横坐标，收入salary = df['salary'].unique() 1len(salary) 221 1min(salary), max(salary) # 收入差距上下限 (27299.9475, 233999.55) 1df.salary 0 98799.81000 1 69679.86600 2 37179.92850 3 37959.92700 4 77999.85000 5 55639.89300 6 62399.88000 7 37959.92700 8 48359.90700 9 41599.92000 10 52519.89900 11 49139.90550 12 48099.90750 13 60839.88300 14 47319.90900 15 70719.86400 16 79733.18000 17 179832.98750 18 73319.85900 19 45499.91250 20 67339.87050 21 37699.92750 22 41599.92000 23 29379.94350 24 36659.92950 25 53819.89650 26 104649.79875 27 56419.89150 28 233999.55000 29 54079.89600 ... 444 48619.90650 445 173333.00000 446 84933.17000 447 28339.94550 448 121333.10000 449 95333.15000 450 49399.90500 451 49919.90400 452 42379.91850 453 157083.03125 454 75659.85450 455 129999.75000 456 54859.89450 457 107249.79375 458 37699.92750 459 38999.92500 460 37439.92800 461 59643.88530 462 35879.93100 463 82419.84150 464 58759.88700 465 40559.92200 466 56939.89050 467 96633.14750 468 43679.91600 469 45499.91250 470 45759.91200 471 67859.86950 472 37179.92850 473 50959.90200 Name: salary, Length: 474, dtype: float64 1df.iloc[0, 0] # 控制其中任意位置 1 1df.loc[0, 'id'] # 这种方式也可以为DataFrame添加行 https://blog.csdn.net/tanzuozhev/article/details/76735660 1 12# 收入，计数，占比，累计占比 salary, frequency, percent, cumulative percentdf_new = pd.DataFrame(columns=['Salary', 'Frequency', 'Percent', 'CumulativePercent']) 1counts = df.salary.value_counts() 12print(type(counts))print(counts) &lt;class &#39;pandas.core.series.Series&#39;&gt; 53299.89750 13 41599.92000 8 42379.91850 8 45499.91250 7 46279.91100 7 48099.90750 7 38999.92500 7 38739.92550 6 58759.88700 6 34059.93450 6 49399.90500 6 59799.88500 5 46019.91150 5 50959.90200 5 47579.90850 5 50439.90300 5 43679.91600 5 36139.93050 5 47319.90900 5 51999.90000 5 37959.92700 5 52519.89900 4 55379.89350 4 69679.86600 4 39779.92350 4 42899.91750 4 36919.92900 4 51739.90050 4 62399.88000 4 44979.91350 4 .. 60007.88460 1 91259.82450 1 68119.86900 1 145166.38750 1 31979.93850 1 127833.08750 1 50855.90220 1 83199.84000 1 34319.93400 1 27299.94750 1 71239.86300 1 96199.81500 1 49659.90450 1 64999.87500 1 50179.90350 1 28339.94550 1 102959.80200 1 179399.65500 1 52779.89850 1 94249.81875 1 173333.00000 1 72799.86000 1 92083.15625 1 75243.85530 1 191749.63125 1 149499.71250 1 98019.81150 1 88833.16250 1 77999.85000 1 69419.86650 1 Name: salary, Length: 221, dtype: int64 1234## 绘制柱状图p = counts.plot(kind='bar').get_figure()p.show() D:\\Anaconda3\\Anaconda3_py36\\lib\\site-packages\\matplotlib\\figure.py:459: UserWarning: matplotlib is currently using a non-GUI backend, so cannot show the figure &quot;matplotlib is currently using a non-GUI backend, &quot; 1p.savefig('demo_01.png') 12# 分段累积，绘制柱状图counts.plot.hist() # 注意，使用counts来绘制柱状图显然是错误的 &lt;matplotlib.axes._subplots.AxesSubplot at 0x1742a430588&gt; 1counts.sort_index() 27299.94750 1 27559.94700 1 28079.94600 3 28339.94550 1 28599.94500 1 28859.94450 1 29119.94400 1 29379.94350 3 29639.94300 2 29899.94250 1 30159.94200 2 30679.94100 1 31459.93950 2 31979.93850 1 32499.93750 1 33279.93600 2 34059.93450 6 34319.93400 1 34579.93350 2 34839.93300 2 35359.93200 3 35619.93150 1 35879.93100 2 36139.93050 5 36399.93000 2 36659.92950 2 36919.92900 4 37179.92850 3 37439.92800 3 37699.92750 3 .. 114833.11250 1 115699.77750 1 115916.44375 2 116999.77500 1 118083.10625 2 119166.43750 2 120033.10250 1 121333.10000 2 122849.76375 1 125666.42500 1 127399.75500 1 127833.08750 1 129999.75000 2 135416.40625 1 135633.07250 1 136066.40500 1 138666.40000 1 140833.06250 1 142999.72500 1 145166.38750 1 149499.71250 1 157083.03125 1 158166.36250 1 159466.36000 1 168133.01000 1 173333.00000 1 179399.65500 1 179832.98750 1 191749.63125 1 233999.55000 1 Name: salary, Length: 221, dtype: int64 1counts.plot.hist(color='k', alpha=0.5, bins=30) &lt;matplotlib.axes._subplots.AxesSubplot at 0x17429f56710&gt; 1counts.plot.hist(color='g', alpha=0.6, bins=18, figsize=(16, 9)) &lt;matplotlib.axes._subplots.AxesSubplot at 0x17424e1db38&gt; 1counts.diff().hist(color='k', alpha=0.5, bins=50) &lt;matplotlib.axes._subplots.AxesSubplot at 0x174257b5748&gt; 1plt_hist = df['salary'].plot.hist(alpha=0.8, bins=28, figsize=(16, 9)) 1plt_hist.set_xlabel('Current Salary($)') Text(0.5,3.2,&#39;Current Salary($)&#39;) 1plt_hist &lt;matplotlib.axes._subplots.AxesSubplot at 0x17429117390&gt; 12import matplotlib.pyplot as pltplt_hist = df['salary'].plot.hist(alpha=0.8, bins=28, figsize=(16, 9)).set_title('Histogram')","categories":[{"name":"Languages","slug":"Languages","permalink":"https://www.blankspace.cn/categories/Languages/"},{"name":"Python","slug":"Languages/Python","permalink":"https://www.blankspace.cn/categories/Languages/Python/"},{"name":"Pandas","slug":"Languages/Python/Pandas","permalink":"https://www.blankspace.cn/categories/Languages/Python/Pandas/"}],"tags":[{"name":"Pandas","slug":"Pandas","permalink":"https://www.blankspace.cn/tags/Pandas/"},{"name":"Frequency Analysis","slug":"Frequency-Analysis","permalink":"https://www.blankspace.cn/tags/Frequency-Analysis/"}]},{"title":"数据预处理","slug":"data-mining-ch02-s01","date":"2018-09-19T23:16:05.000Z","updated":"2018-09-20T08:16:52.862Z","comments":true,"path":"2018/09/20/data-mining-ch02-s01/","link":"","permalink":"https://www.blankspace.cn/2018/09/20/data-mining-ch02-s01/","excerpt":"数据清洗数据缺失 原因 Equipment malfunction Data not provide Not Application 类型 完全随机缺失 有条件的随机缺失 非随机缺失 处理 忽略/删除 填充：1.根据领域知识；2.填平均值，中位数等；3.高斯分布； 离群点（outlier）Outlier $\\neq$ Anomaly LOF（Local Outlier Factor，局部异常因子方法） 其中， $d(A, B)$表示A, B间的距离（例如欧氏距离）； $distance_k(B)$表示点B到周围点（不包括B自身）中第k远的距离，即图示右上角虚线圆圈的半径，称为k-distance； $distance_k(A, B)$表示A到B的距离和B的k-distance中的较大者，称为可达距离； $N_k(A)$表示A的k-distance邻域，即A周边k个点组成的集合，N即Neighbor，$\\vert N_k(A) \\vert$是A的k-distance领域点的个数，$\\vert N_k(A) \\vert \\geq k$； $ldr_k(A)$为A的local reachability density（局部可达密度），是指$N_k(A)$到A的平均可达距离的倒数，密度越高，越可能是属于同一个簇；密度越低（平均可达距离越远），越可能是离群点； $LOF_k(A)$为A的local outlier factor（局部离群因子），表示$N_k(A)$的$ldr$与点A的$ldr$之比的平均值，约大于1越可能是离群点。 阅读","text":"数据清洗数据缺失 原因 Equipment malfunction Data not provide Not Application 类型 完全随机缺失 有条件的随机缺失 非随机缺失 处理 忽略/删除 填充：1.根据领域知识；2.填平均值，中位数等；3.高斯分布； 离群点（outlier）Outlier $\\neq$ Anomaly LOF（Local Outlier Factor，局部异常因子方法） 其中， $d(A, B)$表示A, B间的距离（例如欧氏距离）； $distance_k(B)$表示点B到周围点（不包括B自身）中第k远的距离，即图示右上角虚线圆圈的半径，称为k-distance； $distance_k(A, B)$表示A到B的距离和B的k-distance中的较大者，称为可达距离； $N_k(A)$表示A的k-distance邻域，即A周边k个点组成的集合，N即Neighbor，$\\vert N_k(A) \\vert$是A的k-distance领域点的个数，$\\vert N_k(A) \\vert \\geq k$； $ldr_k(A)$为A的local reachability density（局部可达密度），是指$N_k(A)$到A的平均可达距离的倒数，密度越高，越可能是属于同一个簇；密度越低（平均可达距离越远），越可能是离群点； $LOF_k(A)$为A的local outlier factor（局部离群因子），表示$N_k(A)$的$ldr$与点A的$ldr$之比的平均值，约大于1越可能是离群点。 阅读","categories":[{"name":"Data Science","slug":"Data-Science","permalink":"https://www.blankspace.cn/categories/Data-Science/"},{"name":"Data Mining","slug":"Data-Science/Data-Mining","permalink":"https://www.blankspace.cn/categories/Data-Science/Data-Mining/"}],"tags":[{"name":"Data Preprocessing","slug":"Data-Preprocessing","permalink":"https://www.blankspace.cn/tags/Data-Preprocessing/"}]},{"title":"水和生命","slug":"biology-ch02-s02","date":"2018-09-19T15:23:37.000Z","updated":"2018-09-19T15:30:06.021Z","comments":true,"path":"2018/09/19/biology-ch02-s02/","link":"","permalink":"https://www.blankspace.cn/2018/09/19/biology-ch02-s02/","excerpt":"水和生命密切相关。 水的特点 内聚力和粘附力 水的热容量 固态轻于液态水 水是良好的溶剂 内聚力内聚力：氢键使物质凝聚一起的现象 水形成concave效应 粘附力黏附在其他分子上 内聚力和粘附力解释生物学想象： 表面张力：液体表面总是试图获得最小","text":"水和生命密切相关。 水的特点 内聚力和粘附力 水的热容量 固态轻于液态水 水是良好的溶剂 内聚力内聚力：氢键使物质凝聚一起的现象 水形成concave效应 粘附力黏附在其他分子上 内聚力和粘附力解释生物学想象： 表面张力：液体表面总是试图获得最小","categories":[{"name":"Biology","slug":"Biology","permalink":"https://www.blankspace.cn/categories/Biology/"},{"name":"现代生物学导论","slug":"Biology/现代生物学导论","permalink":"https://www.blankspace.cn/categories/Biology/现代生物学导论/"},{"name":"生命的化学基础","slug":"Biology/现代生物学导论/生命的化学基础","permalink":"https://www.blankspace.cn/categories/Biology/现代生物学导论/生命的化学基础/"}],"tags":[{"name":"H2O","slug":"H2O","permalink":"https://www.blankspace.cn/tags/H2O/"}]},{"title":"聚类、回归等数据挖掘问题简介","slug":"data-mining-ch01-s02","date":"2018-09-19T14:12:43.000Z","updated":"2018-09-20T08:16:42.661Z","comments":true,"path":"2018/09/19/data-mining-ch01-s02/","link":"","permalink":"https://www.blankspace.cn/2018/09/19/data-mining-ch01-s02/","excerpt":"","text":"聚类（Clustering）概念将观察到无标记项集合划分成若干子集（subsets成为clusters簇）,同一个簇中的项具有相似性。 Clustering is the assignment of a set of observations into subsets (called clusters) so that observations in the same cluster are similar in some sense. 距离度量（Distance Metrics） 欧氏距离（Euclidean Distance） 曼哈顿距离（Manhattan Distance） 马氏距离（Mahalanobis Distance） … 层次聚类分层分组 关联分析回归线性回归，线性是参数和变量之间是线性的。 过拟合可视化可解释性 数据预处理忌讳“GIGO”，Garbage In Garbage Out。 “脏”数据： 属性缺失（Missing Attribute Values） 不一致（Inconsistent Data） 不可行（Infeasible Values） 异常值（离群点，Outliers） … 所以要进行数据清洗： 完备 准确 可解释 … 处理： 标准化 类型转化 … 隐私保护数据分析举例：敏感问题问卷分析 云 Pay As You Go.（弹性计算） 计算就是资源。 SaaS（Software as a Service） 并行计算 GPU 运算集群 … 数据挖掘==大数据+算法+算力“三驾马车”季向阳教授：三驾马车——数据，算法，算力。 没有免费午餐 针对具体问题采用合适的算法 阿卡姆剃刀 数据挖掘的“陷阱” 幸存者偏差 数据本身的随机性 相关并不代表因果 宏观和微观 …","categories":[{"name":"Data Science","slug":"Data-Science","permalink":"https://www.blankspace.cn/categories/Data-Science/"},{"name":"Data Mining","slug":"Data-Science/Data-Mining","permalink":"https://www.blankspace.cn/categories/Data-Science/Data-Mining/"}],"tags":[{"name":"Unsupervised Learning","slug":"Unsupervised-Learning","permalink":"https://www.blankspace.cn/tags/Unsupervised-Learning/"},{"name":"Clustering","slug":"Clustering","permalink":"https://www.blankspace.cn/tags/Clustering/"}]},{"title":"实验设计的误差分析","slug":"experiment-design-ch01","date":"2018-09-19T01:24:18.000Z","updated":"2018-09-19T11:14:23.280Z","comments":true,"path":"2018/09/19/experiment-design-ch01/","link":"","permalink":"https://www.blankspace.cn/2018/09/19/experiment-design-ch01/","excerpt":"真值和误差真值（True Value）真值，在某一时刻和某一状态下，某量的客观真实值。真值一般是未知的，相对的意义上真值是已知的。 误差（Error）误差，是试验中获得的试验值和它的客观真实值在数值上的不一致。试验结果都有误差，误差自始至终存在于一切科学实验过程中 绝对误差（Absolute Error） \\text{绝对误差=试验值-真值} \\Delta x = x-x_t 真值未知则绝对误差也未知 $\\vert \\Delta x \\vert = \\vert x-x_t \\vert \\leq \\vert \\Delta x|_{max} \\Rightarrow x_t \\approx x\\pm \\vert\\Delta x \\vert_{max}, \\text{其中} \\vert\\Delta x \\vert_{max} \\text{为绝对误差限或误差上界}$ 绝对误差的估算方法： 最小刻度的一半为绝对误差，最小刻度误最大绝对误差 根据仪表精度等级计算：$\\text{绝对误差=量程*精度等级%}$ 相对误差相对误差定义： E_R=\\frac{\\Delta x}{x_t}若真值未知，通常将绝对误差（$\\Delta x$）与试验值（$x$）或平均值之比作为相对误差（的近似替代）： E_R\\approx \\frac{\\Delta x}{x} \\quad\\text{或} \\quad E_R\\approx \\frac{\\Delta x}{\\overline{x}}算数平均差异（Average Discrepancy）算数平均差异可以用来反应一组实验数据的误差大小。 \\Delta = \\frac{\\sum_{i=1}^{n} \\vert x_i - \\overline{x} \\vert}{n}=\\frac{\\sum_{i=1}^{n}\\vert d_i \\vert}{n}其中$d_i$表示试验值$x_i$与试验值的算数平均值$\\overline{x}$的偏差。 标准误差（Standard Error） 当试验次数n无穷大时，总体标准差： \\sigma=\\sqrt{\\frac{\\sum_{i=1}^{n}(x_i-\\overline{x})^2}{n}}=\\sqrt{\\frac{\\sum_{i=1}^{n}x^2-(\\sum_{i=1}^{n}x_i)^2/n}{n}} 当试验次数为有限次时，样本标准差： \\sigma=\\sqrt{\\frac{\\sum_{i=1}^{n}d_i^2}{n-1}}=\\sqrt{\\frac{\\sum_{i=1}^{n-1}(x_i-\\overline{x})^2}{n-1}}=\\sqrt{\\frac{\\sum_{i=1}^{n}x^2-(\\sum_{i=1}^{n}x_i)^2/n}{n-1}}表示试验值的精密度，标准差$\\downarrow$，试验数据精度$\\uparrow$ $\\mathbb{\\color{red}{\\text{疑问：为什么总体标准差和样本标准差，一个是$n$一个是$n-1$? }}}$ 误差分类 系统误差 概念：在一定试验条件下，由某个或者某些因素按照某一确定的规律起作用而形成的误差 产生原因：多方面 特点：系统误差大小及其符号在同一试验中是恒定的 不能通过多次试验被发现，也不能通过取多次试验值的平局值而减小 对系统误差原因有充分认识，才能进行校准或设法消除 随机误差 概念：以不可预知的规律变化着的误差，时正时负，时大时小 产生原因：偶然因素 特点：具有统计规律 当试验次数足够多时，误差的平均值趋向于零，可以通过增加试验次数来减小随机误差 小误差比大误差出现机会多 过失误差 概念：显然和事实不符合的误差 产生原因：细节，试验人员粗心大意 特点： 完全可以避免 试验平均值（Mean）算数平均值（Arithmetic Mean） \\overline{x}=(x_1+x_2+...+x_n)/n=\\frac{\\sum_{i=1}^{n}x_i}n适合： 等精度试验值 试验值服从正态分布 加权平均值（Weighted Mean） \\mathcal{\\overline{x_W}=\\frac{w_1x_1+w_2x_2+...+w_nx_n}{w1+w_2+...+w_n}=\\frac{\\sum_{i=1}^{n}w_ix_i}{\\sum_{i=1}^{n}w_i}}其中$w_i$表示权重。 适合： 不同试验值的精度或可靠性不一致时，如GPA的计算 对数平均值（Logarithmic Mean） \\overline{x_L}=\\frac{x_1-x_2}{\\ln{x_1}-\\ln{x_2}}=\\frac{x_1-x_2}{\\ln{\\frac{x_1}{x_2}}}=\\frac{x_2-x_1}{\\ln{\\frac{x_2}{x_1}}}其中$x_1, x_2\\gt0$。 注意： 若数据的分布具有对数特性，宜使用对数平均值 对数平均值$\\leq$算数平均值 若$1/2\\leq x_1 \\leq 2$时，可用算数平均值替代对数平均值 几何平均值 \\overline{x_G}=\\sqrt[n]{x_1x_2\\cdots x_n}=(x_1x_2\\cdots x_n)^{1/n}注意： 几何平均值$\\leq$算数平均值 当一组试验值取对数后所得数据的分布曲线更加对称时，宜采用几何平均值 调和平均值（Harmonic Mean）假设有$n$个正试验值：$x_1, x_2, \\dots ,x_n$则： \\frac{1}{H}=\\frac{\\frac{1}{x_1}+\\frac{1}{x_2}+\\dots+\\frac{1}{x_n}}{n}=\\frac{\\sum_{i=1}^{n}\\frac{1}{x_i}}n试验值倒数的算数平均值的倒数是调和平均值。 注意： 常用在涉及到一些量的倒数相关的场合 $\\mathrm{H\\leq \\overline{x_G} \\leq \\overline{x}}$ 误差分析（Error Analysis）目的：对原始数据的可靠性进行客观地评定。 卡方检验 （$\\mathbf{\\chi^{2} }$-Test）F检验","text":"真值和误差真值（True Value）真值，在某一时刻和某一状态下，某量的客观真实值。真值一般是未知的，相对的意义上真值是已知的。 误差（Error）误差，是试验中获得的试验值和它的客观真实值在数值上的不一致。试验结果都有误差，误差自始至终存在于一切科学实验过程中 绝对误差（Absolute Error） \\text{绝对误差=试验值-真值} \\Delta x = x-x_t 真值未知则绝对误差也未知 $\\vert \\Delta x \\vert = \\vert x-x_t \\vert \\leq \\vert \\Delta x|_{max} \\Rightarrow x_t \\approx x\\pm \\vert\\Delta x \\vert_{max}, \\text{其中} \\vert\\Delta x \\vert_{max} \\text{为绝对误差限或误差上界}$ 绝对误差的估算方法： 最小刻度的一半为绝对误差，最小刻度误最大绝对误差 根据仪表精度等级计算：$\\text{绝对误差=量程*精度等级%}$ 相对误差相对误差定义： E_R=\\frac{\\Delta x}{x_t}若真值未知，通常将绝对误差（$\\Delta x$）与试验值（$x$）或平均值之比作为相对误差（的近似替代）： E_R\\approx \\frac{\\Delta x}{x} \\quad\\text{或} \\quad E_R\\approx \\frac{\\Delta x}{\\overline{x}}算数平均差异（Average Discrepancy）算数平均差异可以用来反应一组实验数据的误差大小。 \\Delta = \\frac{\\sum_{i=1}^{n} \\vert x_i - \\overline{x} \\vert}{n}=\\frac{\\sum_{i=1}^{n}\\vert d_i \\vert}{n}其中$d_i$表示试验值$x_i$与试验值的算数平均值$\\overline{x}$的偏差。 标准误差（Standard Error） 当试验次数n无穷大时，总体标准差： \\sigma=\\sqrt{\\frac{\\sum_{i=1}^{n}(x_i-\\overline{x})^2}{n}}=\\sqrt{\\frac{\\sum_{i=1}^{n}x^2-(\\sum_{i=1}^{n}x_i)^2/n}{n}} 当试验次数为有限次时，样本标准差： \\sigma=\\sqrt{\\frac{\\sum_{i=1}^{n}d_i^2}{n-1}}=\\sqrt{\\frac{\\sum_{i=1}^{n-1}(x_i-\\overline{x})^2}{n-1}}=\\sqrt{\\frac{\\sum_{i=1}^{n}x^2-(\\sum_{i=1}^{n}x_i)^2/n}{n-1}}表示试验值的精密度，标准差$\\downarrow$，试验数据精度$\\uparrow$ $\\mathbb{\\color{red}{\\text{疑问：为什么总体标准差和样本标准差，一个是$n$一个是$n-1$? }}}$ 误差分类 系统误差 概念：在一定试验条件下，由某个或者某些因素按照某一确定的规律起作用而形成的误差 产生原因：多方面 特点：系统误差大小及其符号在同一试验中是恒定的 不能通过多次试验被发现，也不能通过取多次试验值的平局值而减小 对系统误差原因有充分认识，才能进行校准或设法消除 随机误差 概念：以不可预知的规律变化着的误差，时正时负，时大时小 产生原因：偶然因素 特点：具有统计规律 当试验次数足够多时，误差的平均值趋向于零，可以通过增加试验次数来减小随机误差 小误差比大误差出现机会多 过失误差 概念：显然和事实不符合的误差 产生原因：细节，试验人员粗心大意 特点： 完全可以避免 试验平均值（Mean）算数平均值（Arithmetic Mean） \\overline{x}=(x_1+x_2+...+x_n)/n=\\frac{\\sum_{i=1}^{n}x_i}n适合： 等精度试验值 试验值服从正态分布 加权平均值（Weighted Mean） \\mathcal{\\overline{x_W}=\\frac{w_1x_1+w_2x_2+...+w_nx_n}{w1+w_2+...+w_n}=\\frac{\\sum_{i=1}^{n}w_ix_i}{\\sum_{i=1}^{n}w_i}}其中$w_i$表示权重。 适合： 不同试验值的精度或可靠性不一致时，如GPA的计算 对数平均值（Logarithmic Mean） \\overline{x_L}=\\frac{x_1-x_2}{\\ln{x_1}-\\ln{x_2}}=\\frac{x_1-x_2}{\\ln{\\frac{x_1}{x_2}}}=\\frac{x_2-x_1}{\\ln{\\frac{x_2}{x_1}}}其中$x_1, x_2\\gt0$。 注意： 若数据的分布具有对数特性，宜使用对数平均值 对数平均值$\\leq$算数平均值 若$1/2\\leq x_1 \\leq 2$时，可用算数平均值替代对数平均值 几何平均值 \\overline{x_G}=\\sqrt[n]{x_1x_2\\cdots x_n}=(x_1x_2\\cdots x_n)^{1/n}注意： 几何平均值$\\leq$算数平均值 当一组试验值取对数后所得数据的分布曲线更加对称时，宜采用几何平均值 调和平均值（Harmonic Mean）假设有$n$个正试验值：$x_1, x_2, \\dots ,x_n$则： \\frac{1}{H}=\\frac{\\frac{1}{x_1}+\\frac{1}{x_2}+\\dots+\\frac{1}{x_n}}{n}=\\frac{\\sum_{i=1}^{n}\\frac{1}{x_i}}n试验值倒数的算数平均值的倒数是调和平均值。 注意： 常用在涉及到一些量的倒数相关的场合 $\\mathrm{H\\leq \\overline{x_G} \\leq \\overline{x}}$ 误差分析（Error Analysis）目的：对原始数据的可靠性进行客观地评定。 卡方检验 （$\\mathbf{\\chi^{2} }$-Test）F检验 单尾检验和双尾检验","categories":[{"name":"Math","slug":"Math","permalink":"https://www.blankspace.cn/categories/Math/"},{"name":"Experiment Design & Data Processing","slug":"Math/Experiment-Design-Data-Processing","permalink":"https://www.blankspace.cn/categories/Math/Experiment-Design-Data-Processing/"}],"tags":[{"name":"Error Analysis","slug":"Error-Analysis","permalink":"https://www.blankspace.cn/tags/Error-Analysis/"}]},{"title":"数据挖掘绪论","slug":"data-mining-ch1-s1","date":"2018-09-18T15:15:06.000Z","updated":"2018-09-20T08:16:56.867Z","comments":true,"path":"2018/09/18/data-mining-ch1-s1/","link":"","permalink":"https://www.blankspace.cn/2018/09/18/data-mining-ch1-s1/","excerpt":"","text":"这是选修清华大学深圳研究生院袁博老师《数据挖掘》课程资料整理。 DRIP Data Rich Information Poor 学习资源教材 数据挖掘概念和技术 模式分类 Data Mining Beautiful Data 顶级会议数据挖掘顶级会议 软件工具 信息搜索：Google等 数学模拟：Matlab，Weka 3: Data Mining Software in Java等 数据集：UCI，KDnuggets … 学习方法 课堂：认真思考，讨论 阅读材料 勤于动手 主动思考，刨根问底 大数据特点3V Velocity速度 Varity种类 Volume体量 数据挖掘==知识发现定义从大规模，不完整，有噪声的数据中，自动提取有趣，有用且原来未知的模式的过程。 数据整合和分析（传统方式ETL） E：Extration，提取 T：Transform，转换 L：Load，装载 流程 分类问题定义给定一个训练集${(x_1,y_1),(x_2, y_2), …, (x_n, y_n)}$，产生一个分类器（函数）对于未知的对象$x_i$将其映射到其类别标记$y_i$上。 本质超平面上的分界面。 分界面特点 防止过拟合 应当平滑 交叉验证将数据集分成训练集，验证集和测试集。 验证集用来验证模型的好坏。 混淆矩阵 Accuracy正确率，Precision查准率，Recall查全率和F1度量F1-Measure Accuracy正确率/准确率 \\mathbf{Accuracy=\\frac{TP+TN}{TP+FP+TN+FN}}表示猜对的在总样本中占比 Precision查准率/精确率 \\mathbf{Precision=TP/(TP+FP)}表示真正例在所有猜测为正例中的占比 Recall召回率/查全率 \\mathbf{Recall=TP/(TP+FN)}表示真正例在所有实际为正例中的占比 F1（基于查准率和查全率的调和平均$\\frac{1}{F1}=\\frac{1}{2}\\left(\\frac{1}{P}+\\frac{1}{R}\\right)$得到） \\mathbf{F1=(2*Precision*Recall)/(Precision+Recall)}由这些度量可以做出不同的曲线，如P-R曲线，纵轴为P，横轴为R；ROC曲线，纵轴为TPR, 横轴为FPR。 真正例率（True Positive Rate, TPR）和假正例率（False Positive Rate） \\mathbf{TPR = TP/(TP+FN)}\\\\ \\mathbf{FPR=FP/(FP+TN)}ROC和AUCROC：受试者工作特征（Receiver Operating Characteristic） AUC：Area under ROC curve，ROC曲线下的面积。面积越大一般表明该机器学习算法更好。 代价敏感不同类型的错误后果（权重）不同 Lift分析 \\mathbf{Lift = predicted\\_rate / average\\_ rate ) }一种机器学习性能评价指标","categories":[{"name":"Data Science","slug":"Data-Science","permalink":"https://www.blankspace.cn/categories/Data-Science/"},{"name":"Data Mining","slug":"Data-Science/Data-Mining","permalink":"https://www.blankspace.cn/categories/Data-Science/Data-Mining/"}],"tags":[{"name":"Data Mining","slug":"Data-Mining","permalink":"https://www.blankspace.cn/tags/Data-Mining/"}]},{"title":"用户和文件权限管理","slug":"linux-shiyan3","date":"2018-09-17T08:10:46.000Z","updated":"2018-09-17T14:57:54.288Z","comments":true,"path":"2018/09/17/linux-shiyan3/","link":"","permalink":"https://www.blankspace.cn/2018/09/17/linux-shiyan3/","excerpt":"","text":"查看用户打开终端输入：who am i或who mom likes： 输出： 第一列：打开当前终端用户用户名（只查看用户名使用whoami即可） 第二列：pts/0中pts表示伪终端，伪是相对于dev/tty而言的，上一节中使用Ctrl+Alt+F1~F7切换的是真终端，伪终端是在图形用户界面使用/dev/tty[0-7]时打开的一个终端，pts/0中数字就是打开的伪终端号 第三列：启动时间 who 命令其它常用参数 参数 说明 -a 打印能打印的全部 -d 打印死掉的进程 -m 同am i,mom likes -q 打印当前登录用户数及用户名 -u 打印当前登录用户登录信息 -r 打印运行等级 创建用户一般登录时使用普通账户身份登录的，创建用户需要用到root权限1，此时需要使用sudo命令。 使用sudo前提: 要知道当前登录用户的密码 当前用户必须要在sudo用户组 命令： sudo adduser &lt;username&gt; 删除用户1sudo deluser &lt;username&gt; --remove-home 1. root权限是系统权限的一种，与SYSTEM权限可以理解为一个概念，但高于Administrator权限，root是Unix/Linux中的超级管理员账户，可以操作所有对象。 &#8617;","categories":[{"name":"Linux","slug":"Linux","permalink":"https://www.blankspace.cn/categories/Linux/"},{"name":"Linux Basic","slug":"Linux/Linux-Basic","permalink":"https://www.blankspace.cn/categories/Linux/Linux-Basic/"}],"tags":[{"name":"Shell","slug":"Shell","permalink":"https://www.blankspace.cn/tags/Shell/"},{"name":"Linux","slug":"Linux","permalink":"https://www.blankspace.cn/tags/Linux/"},{"name":"Priority","slug":"Priority","permalink":"https://www.blankspace.cn/tags/Priority/"}]},{"title":"Linux基础概念和操作","slug":"linux-shiyan2","date":"2018-09-17T02:54:24.000Z","updated":"2018-09-19T03:17:21.092Z","comments":true,"path":"2018/09/17/linux-shiyan2/","link":"","permalink":"https://www.blankspace.cn/2018/09/17/linux-shiyan2/","excerpt":"Unix/Linux本身没有图形界面，我们看到的是运行在其上的一套软件，类似于Windows95前运行在DOS之上的图形界面。 Linux桌面环境 Linux终端终端（Terminal）本质对应着Linux上的/dev/tty设备，Linux多用户登录就是通过其完成的。 Linux提供了6个纯命令行界面的“terminal”（准确说是6个virtual console）来让用户登录。可以使用Ctrl+Alt+F1~F6进行切换。按下Ctrl+Alt+F7返回图形界面。 Shell在图形界面中通常使用的不是上面所说的6个终端而是各种终端模拟器，就是Shell（壳）。壳里面包裹的就是核（Kernel），核就是Unix/Linux内核。Shell是指“提供给使用者使用界面”的命令解析器，类似于DOS下的命令行和后来的cmd.exe，其隐藏了操作系统底层的细节。 Unix/Linux中比较流行的Shell有bash、zsh、ksh等。Ubuntu终端默认的是bash，默认桌面环境是GNOME或者Unity（基于GNOME）。 命令行操作过程 输入 输出 例子中涉及： pwd：当前路径 touch：新建文件 重要快捷键 Tap：自动补齐 Ctrl+c：强制终止当前程序 Ctrl+d：键盘输入结束或者退出终端 Ctrl+s：暂停当前程序，暂停后按下任意键恢复运行 Ctrl+z：后台运行当前程序，恢复到前台使用fg Ctrl+a：光标移动到行头 Ctrl+k：删除光标位置到行末的内容 Alt+Backspace：删除前面一个单词 Shift+PgUp：将终端向上滚动 Shift+PgDn：将终端向下滚动 输入历史 ↑：恢复之前输入 使用通配符 字符 含义 * 匹配0个或者多个任意字符 ? 匹配任意一个字符 [list] 匹配list中的任意单一字符 [^list] 匹配除了list中任意单一字符外的字符 [c1-c2] 匹配从c1到c2中的任意单一字符，例如：[0-9]、[a-z] {str1, str2...} 匹配字符串数组中的一个或者更多字符串注：实验失败，暂时无法通配。 {c1..c2} 匹配从c1到c2中全部字符，例如：{1..10}","text":"Unix/Linux本身没有图形界面，我们看到的是运行在其上的一套软件，类似于Windows95前运行在DOS之上的图形界面。 Linux桌面环境 Linux终端终端（Terminal）本质对应着Linux上的/dev/tty设备，Linux多用户登录就是通过其完成的。 Linux提供了6个纯命令行界面的“terminal”（准确说是6个virtual console）来让用户登录。可以使用Ctrl+Alt+F1~F6进行切换。按下Ctrl+Alt+F7返回图形界面。 Shell在图形界面中通常使用的不是上面所说的6个终端而是各种终端模拟器，就是Shell（壳）。壳里面包裹的就是核（Kernel），核就是Unix/Linux内核。Shell是指“提供给使用者使用界面”的命令解析器，类似于DOS下的命令行和后来的cmd.exe，其隐藏了操作系统底层的细节。 Unix/Linux中比较流行的Shell有bash、zsh、ksh等。Ubuntu终端默认的是bash，默认桌面环境是GNOME或者Unity（基于GNOME）。 命令行操作过程 输入 输出 例子中涉及： pwd：当前路径 touch：新建文件 重要快捷键 Tap：自动补齐 Ctrl+c：强制终止当前程序 Ctrl+d：键盘输入结束或者退出终端 Ctrl+s：暂停当前程序，暂停后按下任意键恢复运行 Ctrl+z：后台运行当前程序，恢复到前台使用fg Ctrl+a：光标移动到行头 Ctrl+k：删除光标位置到行末的内容 Alt+Backspace：删除前面一个单词 Shift+PgUp：将终端向上滚动 Shift+PgDn：将终端向下滚动 输入历史 ↑：恢复之前输入 使用通配符 字符 含义 * 匹配0个或者多个任意字符 ? 匹配任意一个字符 [list] 匹配list中的任意单一字符 [^list] 匹配除了list中任意单一字符外的字符 [c1-c2] 匹配从c1到c2中的任意单一字符，例如：[0-9]、[a-z] {str1, str2...} 匹配字符串数组中的一个或者更多字符串注：实验失败，暂时无法通配。 {c1..c2} 匹配从c1到c2中全部字符，例如：{1..10} 获取帮助 man &lt;command_name&gt;：获取帮助，其中man代表manual pages man手册分区，使用如man 1 ls： 1一般命令 2系统调用 3库函数，涵盖了C标准函数库 4特殊文件（通常是/dev中的设备）和驱动程序 5文件格式和约定 6游戏和屏保 7杂项 查找：/&lt;要查找的内容&gt; n：下一个 shift+n：上一个 Space(空格键)：翻页 Enter：向下滚动一行 &lt;command_name&gt; --help：查找具体参数和作用 有趣的Linux命令 Your browser does not support the video tag.","categories":[{"name":"Linux","slug":"Linux","permalink":"https://www.blankspace.cn/categories/Linux/"},{"name":"Linux Basic","slug":"Linux/Linux-Basic","permalink":"https://www.blankspace.cn/categories/Linux/Linux-Basic/"}],"tags":[{"name":"Shell","slug":"Shell","permalink":"https://www.blankspace.cn/tags/Shell/"},{"name":"Linux","slug":"Linux","permalink":"https://www.blankspace.cn/tags/Linux/"}]},{"title":"Linux简单学习路径","slug":"linux-shiyan1","date":"2018-09-17T02:30:15.000Z","updated":"2018-09-17T03:55:49.032Z","comments":true,"path":"2018/09/17/linux-shiyan1/","link":"","permalink":"https://www.blankspace.cn/2018/09/17/linux-shiyan1/","excerpt":"","text":"由实验楼上进行的Linux实验整理而成。","categories":[{"name":"Linux","slug":"Linux","permalink":"https://www.blankspace.cn/categories/Linux/"},{"name":"Linux Basic","slug":"Linux/Linux-Basic","permalink":"https://www.blankspace.cn/categories/Linux/Linux-Basic/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://www.blankspace.cn/tags/Linux/"}]},{"title":"大数据生态系统","slug":"bigdata-system-ch1-s5","date":"2018-09-16T14:02:33.000Z","updated":"2018-09-20T08:17:31.591Z","comments":true,"path":"2018/09/16/bigdata-system-ch1-s5/","link":"","permalink":"https://www.blankspace.cn/2018/09/16/bigdata-system-ch1-s5/","excerpt":"","text":"现今主要有两大生态，Hadoop生态和Spark生态。 Hadoop生态 Spark生态系统 优势","categories":[{"name":"Data Science","slug":"Data-Science","permalink":"https://www.blankspace.cn/categories/Data-Science/"},{"name":"Big Data","slug":"Data-Science/Big-Data","permalink":"https://www.blankspace.cn/categories/Data-Science/Big-Data/"},{"name":"Big Data System","slug":"Data-Science/Big-Data/Big-Data-System","permalink":"https://www.blankspace.cn/categories/Data-Science/Big-Data/Big-Data-System/"}],"tags":[{"name":"Big Data Ecosystem","slug":"Big-Data-Ecosystem","permalink":"https://www.blankspace.cn/tags/Big-Data-Ecosystem/"}]},{"title":"大数据技术体系","slug":"bigdata-system-ch1-s4","date":"2018-09-16T12:25:11.000Z","updated":"2018-09-20T08:17:27.918Z","comments":true,"path":"2018/09/16/bigdata-system-ch1-s4/","link":"","permalink":"https://www.blankspace.cn/2018/09/16/bigdata-system-ch1-s4/","excerpt":"大数据技术体系现状 数据质量 传统数据质量 仅通过ETL（抽取、转换、加载）执行 没有完全覆盖数据及质量的基本性质 挑战 分布式环境中，保障全局数据的一致性，进取型，完整性 流处理环境中，如何保证时效性 例如：时序一致性 在大数据中保证绝对的数据质量并不现实 高纬，异质，模糊，海量，多变 数据存储和管理某些转变 Hash大于扫描 单副本转向多副本 但阶段转为多阶段 压缩不再解压 传统数据分析和大数据 大数据分析的特点 监控动态流数据，跟踪变化趋势而非仅仅考虑静态数据 数据科学家要和领域科学家一起进行分析 将大数据分析集成到核心业务和运营环节 可视化挑战 强调人的作用 强调分析中的迭代","text":"大数据技术体系现状 数据质量 传统数据质量 仅通过ETL（抽取、转换、加载）执行 没有完全覆盖数据及质量的基本性质 挑战 分布式环境中，保障全局数据的一致性，进取型，完整性 流处理环境中，如何保证时效性 例如：时序一致性 在大数据中保证绝对的数据质量并不现实 高纬，异质，模糊，海量，多变 数据存储和管理某些转变 Hash大于扫描 单副本转向多副本 但阶段转为多阶段 压缩不再解压 传统数据分析和大数据 大数据分析的特点 监控动态流数据，跟踪变化趋势而非仅仅考虑静态数据 数据科学家要和领域科学家一起进行分析 将大数据分析集成到核心业务和运营环节 可视化挑战 强调人的作用 强调分析中的迭代 计算范型 安全与隐私要尽量保证数据安全和隐私的前提下发展，不能因噎废食","categories":[{"name":"Data Science","slug":"Data-Science","permalink":"https://www.blankspace.cn/categories/Data-Science/"},{"name":"Big Data","slug":"Data-Science/Big-Data","permalink":"https://www.blankspace.cn/categories/Data-Science/Big-Data/"},{"name":"Big Data System","slug":"Data-Science/Big-Data/Big-Data-System","permalink":"https://www.blankspace.cn/categories/Data-Science/Big-Data/Big-Data-System/"}],"tags":[{"name":"Big Data Technologies","slug":"Big-Data-Technologies","permalink":"https://www.blankspace.cn/tags/Big-Data-Technologies/"}]},{"title":"大数据的特点","slug":"bigdata-system-ch1-s3","date":"2018-09-16T12:02:41.000Z","updated":"2018-09-20T08:17:24.282Z","comments":true,"path":"2018/09/16/bigdata-system-ch1-s3/","link":"","permalink":"https://www.blankspace.cn/2018/09/16/bigdata-system-ch1-s3/","excerpt":"","text":"特点 数据的规模 TB$\\to$PB$\\to$EB$\\to$ZB$\\to$$\\to$… 数据类型 生命周期 加工深度 处理方式 批量（Batch）$\\to$在线（Online）$\\to$实时（In time） 用户 内部用户+外部用户号 数据质量 数据价值 价值稀疏：大部分的数据都是“辣鸡”或者无人问津。例如微博和红楼梦。 长尾效应","categories":[{"name":"Data Science","slug":"Data-Science","permalink":"https://www.blankspace.cn/categories/Data-Science/"},{"name":"Big Data","slug":"Data-Science/Big-Data","permalink":"https://www.blankspace.cn/categories/Data-Science/Big-Data/"},{"name":"Big Data System","slug":"Data-Science/Big-Data/Big-Data-System","permalink":"https://www.blankspace.cn/categories/Data-Science/Big-Data/Big-Data-System/"}],"tags":[{"name":"Big Data Applications","slug":"Big-Data-Applications","permalink":"https://www.blankspace.cn/tags/Big-Data-Applications/"}]},{"title":"大数据的典型应用","slug":"bigdata-system-ch1-s2","date":"2018-09-16T11:57:03.000Z","updated":"2018-09-29T13:37:04.630Z","comments":true,"path":"2018/09/16/bigdata-system-ch1-s2/","link":"","permalink":"https://www.blankspace.cn/2018/09/16/bigdata-system-ch1-s2/","excerpt":"","text":"问题 存储 分析 利用 原则 所有的东西都是不可靠的，包括用户的需求 Greedy：make full use of all the resources adaptable … 驱动 问题驱动 价值驱动 应用驱动 应用 谷歌预测流感 IBM/Google人机对抗 微软预测奥斯卡奖 “增兵减灶” 林彪查找司令部 … What do we do with the data Aggregation and Statistics Data warehouse Indexing, Searching and Querying Keyword based search Pattern matching Knowledge discovery Data Mining, Statistical Modeling Intelligence Data-driven AI 不讲和讲的东西不讲： 数学理论和基础 算法设计和数据结构 要讲的 数据采集，组织（处理丢失） 数据转换 数据存储 数据处理：并行计算 … 收获： 知道 大数据系统如何工作 局限性 性能评估 潜在的性能提升 工程： 实现 应用 实验 阿里云 AWS 实验室集群 作业 x4编程作业 期末大作业和报告 Paper Survey 和助教讨论 调查和论文阅读","categories":[{"name":"Data Science","slug":"Data-Science","permalink":"https://www.blankspace.cn/categories/Data-Science/"},{"name":"Big Data","slug":"Data-Science/Big-Data","permalink":"https://www.blankspace.cn/categories/Data-Science/Big-Data/"},{"name":"Big Data System","slug":"Data-Science/Big-Data/Big-Data-System","permalink":"https://www.blankspace.cn/categories/Data-Science/Big-Data/Big-Data-System/"}],"tags":[{"name":"Big Data Applications","slug":"Big-Data-Applications","permalink":"https://www.blankspace.cn/tags/Big-Data-Applications/"}]},{"title":"大数据系统基础绪论","slug":"bigdata-system-ch1","date":"2018-09-16T10:58:07.000Z","updated":"2018-10-02T14:08:59.315Z","comments":true,"path":"2018/09/16/bigdata-system-ch1/","link":"","permalink":"https://www.blankspace.cn/2018/09/16/bigdata-system-ch1/","excerpt":"","text":"今天开始学习清华大学王建民教授等人开设的《大数据系统基础》课程。 什么是大数据BigData是一个保罗万象的概念，又称海量资料，巨量资料，指资料规模巨大和复杂到当前主流处理方式无法在短时间内进行有效截取、存储、管理并帮助企业经营决策。 来源个人、工业设备、传感器、仪表等 作用从数据资源中获取数据的价值 多大现在一天数据==以前几个世纪产生的数据。 类型 关系型（Tables/Transaction） 文本 半结构（HTML） 多媒体 图 社交网络/知识图谱（RDF） 流 大数据系统大数据系统，用于大数据分析处理的软件系统。 大数据系统基础目的： 大数据系统的构建、开发、运维 技术 使用方法 大是相对的 给定有限资源c,或成本 给定问题输入x 在一定时间t内 计算出结果f(x) 当输入数据大到超过一定的计算能力或者可以容忍的时间t，就成为大数据问题 产业界看大数据数据治理的无政府组 结构化和非结构化 数据的产生和使用过程相分离 学术界看大数据 Michael Stonebraker@MIT大数据是计算机科学中的一个旗帜。 Stanford: Stanford Network Analysis Project CMU: Pegasus and GraphLab MIT: Intel Science &amp; Technology Centre(ISTC) for Big Data 最火的实验室: SNAP 数据科学 从数据到大数据","categories":[{"name":"Data Science","slug":"Data-Science","permalink":"https://www.blankspace.cn/categories/Data-Science/"},{"name":"Big Data","slug":"Data-Science/Big-Data","permalink":"https://www.blankspace.cn/categories/Data-Science/Big-Data/"},{"name":"Big Data System","slug":"Data-Science/Big-Data/Big-Data-System","permalink":"https://www.blankspace.cn/categories/Data-Science/Big-Data/Big-Data-System/"}],"tags":[{"name":"Big Data","slug":"Big-Data","permalink":"https://www.blankspace.cn/tags/Big-Data/"}]},{"title":"元素和化学键","slug":"biology-ch2-s1","date":"2018-09-16T01:19:48.000Z","updated":"2018-09-19T03:18:20.309Z","comments":true,"path":"2018/09/16/biology-ch2-s1/","link":"","permalink":"https://www.blankspace.cn/2018/09/16/biology-ch2-s1/","excerpt":"生命的性质是由其化学性质决定的。 知识点总结 元素 原子 分子 化学键 共价键 极性共价键 非极性共价键 离子键 八电子规则 电负性 氢键 弱化学键 化学反应 基本概念 元素：只有一种原子组成，使用一般的化学方法不能是指分解，并且能够构成一切物质。人体中，O, C, H,N 占了绝大部分；除此之外还有很多痕量元素。 化合物：由两种或者以上元素以一定的摩尔比通过化学键的结合在一起的化学物质 原子：一种元素能够保持其化学性质最小的单位。 分子：由一个或者多个原子组成，原子间通过共价键结合而成的整体。 原子结构次原子粒子：质子，中子，电子 原子参与物质组成和化学反应是由其最外层电子所决定的。","text":"生命的性质是由其化学性质决定的。 知识点总结 元素 原子 分子 化学键 共价键 极性共价键 非极性共价键 离子键 八电子规则 电负性 氢键 弱化学键 化学反应 基本概念 元素：只有一种原子组成，使用一般的化学方法不能是指分解，并且能够构成一切物质。人体中，O, C, H,N 占了绝大部分；除此之外还有很多痕量元素。 化合物：由两种或者以上元素以一定的摩尔比通过化学键的结合在一起的化学物质 原子：一种元素能够保持其化学性质最小的单位。 分子：由一个或者多个原子组成，原子间通过共价键结合而成的整体。 原子结构次原子粒子：质子，中子，电子 原子参与物质组成和化学反应是由其最外层电子所决定的。 化学键化学键是原子或者分子之间的吸引力 共价键两个或者多个非金属原子共同使用它们的外层电子，在理想情况下达到电子饱和的状态，由此形成比较稳定的化学结构。 极性共价键 共享电子不均衡。如：水。 非极性共价键 共享电子均衡。如：甲烷。 离子键在原子间转移电子，通过两个或者多个原子或化学集团市区或获得电子而形成离子后形成的。 八电子规则 原子间组合趋向各价层都拥有8个电子 形成离子分子的组成原子最外层电子层都有8个电子——趋向稳定 当不满足8个电子——原子间会相互共享或交换电子来达到平衡状态 如何区分极性、非极性共价键和离子键 电负性： 元素原子在分子中对成键电子的吸引能力. 举例：甲烷$\\mathbf{CH_4}$：2.55-2.2=0.35","categories":[{"name":"Biology","slug":"Biology","permalink":"https://www.blankspace.cn/categories/Biology/"},{"name":"现代生物学导论","slug":"Biology/现代生物学导论","permalink":"https://www.blankspace.cn/categories/Biology/现代生物学导论/"},{"name":"生命的化学基础","slug":"Biology/现代生物学导论/生命的化学基础","permalink":"https://www.blankspace.cn/categories/Biology/现代生物学导论/生命的化学基础/"}],"tags":[{"name":"Chemical bond","slug":"Chemical-bond","permalink":"https://www.blankspace.cn/tags/Chemical-bond/"},{"name":"Chemical element","slug":"Chemical-element","permalink":"https://www.blankspace.cn/tags/Chemical-element/"}]},{"title":"如何正确地评价科学结果","slug":"biology-ch1-s3","date":"2018-09-16T00:33:54.000Z","updated":"2018-09-19T03:18:10.766Z","comments":true,"path":"2018/09/16/biology-ch1-s3/","link":"","permalink":"https://www.blankspace.cn/2018/09/16/biology-ch1-s3/","excerpt":"","text":"科学家通过反复实验得出结论，通常会选择发表自己的文章。 发表文章前，同行评议。目的：正确地认识科学研究的方法，确保作者的著作水平，筛选稿件录用与否。 正确评价科学研究的方法 没有科学的实验 商业利益驱使科学报道 安慰剂效应 双盲实验 对照组实验组 科学在不断的实验、证实和被证实的过程中发展 负面：前脑叶白质切除术：1949诺贝尔生理学奖，副总用大，现在弃用 正面：孟德尔VS混合式遗传","categories":[{"name":"Biology","slug":"Biology","permalink":"https://www.blankspace.cn/categories/Biology/"},{"name":"现代生物学导论","slug":"Biology/现代生物学导论","permalink":"https://www.blankspace.cn/categories/Biology/现代生物学导论/"},{"name":"绪论","slug":"Biology/现代生物学导论/绪论","permalink":"https://www.blankspace.cn/categories/Biology/现代生物学导论/绪论/"}],"tags":[{"name":"Biology","slug":"Biology","permalink":"https://www.blankspace.cn/tags/Biology/"},{"name":"Scientific Method","slug":"Scientific-Method","permalink":"https://www.blankspace.cn/tags/Scientific-Method/"}]},{"title":"科学方法","slug":"biology-ch1-s2","date":"2018-09-16T00:00:48.000Z","updated":"2018-09-19T03:18:06.597Z","comments":true,"path":"2018/09/16/biology-ch1-s2/","link":"","permalink":"https://www.blankspace.cn/2018/09/16/biology-ch1-s2/","excerpt":"","text":"科学方法是科学家为了积累了解世界所需要的知识，而采取的一些列步骤。 科学方法的步骤 提出问题 建立假说 实验操作 观察 数据分析 提出结论 注意 真正的过程并非严格按照上述过程进行，而经常出现迭代循环。 实验设计时主要的3点 必须能够驳斥假说或者证实假说，一个单独实验无法证实或者驳斥假说 实验结果必须客观且可测量，例如使用标准一起和标准单位来测量。 实验必须能被其他科学家重复，使用同样的操作规程重复出同样的实验结果。 变量变量是实验中可变的因素。变化的因素和因素变化带来的影响在实验中都被成为变量。 分为，自变量和因变量。 实验设计中还有一种是受控变量，就是实验中条件都保持一致的量。 对照实验在实验中设置比较对象的一种科学方法。 目的是，与实验组进行对比和减少实验中不确定变数带来的影响。 模式生物收到广泛研究，对其生物现象有深入了解的物种。 例如：大肠杆菌、噬菌体、果蝇、线虫、海胆、拟南芥、斑马鱼、小鼠等。","categories":[{"name":"Biology","slug":"Biology","permalink":"https://www.blankspace.cn/categories/Biology/"},{"name":"现代生物学导论","slug":"Biology/现代生物学导论","permalink":"https://www.blankspace.cn/categories/Biology/现代生物学导论/"},{"name":"绪论","slug":"Biology/现代生物学导论/绪论","permalink":"https://www.blankspace.cn/categories/Biology/现代生物学导论/绪论/"}],"tags":[{"name":"Biology","slug":"Biology","permalink":"https://www.blankspace.cn/tags/Biology/"},{"name":"Scientific Method","slug":"Scientific-Method","permalink":"https://www.blankspace.cn/tags/Scientific-Method/"}]},{"title":"生物学的基本主题","slug":"biology-ch1-s1","date":"2018-09-15T15:18:51.000Z","updated":"2018-09-19T03:18:53.440Z","comments":true,"path":"2018/09/15/biology-ch1-s1/","link":"","permalink":"https://www.blankspace.cn/2018/09/15/biology-ch1-s1/","excerpt":"","text":"今天开始选修清华大学生命科学学院的杨杨（Yang Yang）老师的《现代生物学导论》课程，学习有关生命相关基础知识和原理。 什么是生命生命的特征 结构组织 获得&amp;转化能量 生长、发育和繁殖 对环境信号进行应答反应 各种调控 演化 … 生物学五大主题 生命的逐级组成 遗传信息的表达和传递 能量和物质的交换 生物系统中的各种相互作用 生物演化 一.生命的逐级组成 原子 分子 细胞器 细胞 组织 器官 器官系统 生物体 族群 种群 生态系统 生物群系 生物圈 1. 涌现性质（Emergent Property） 生物的逐级组成中，每一层体现出来的特征是前一层所没有的。 2.结构与功能（Structure &amp; Function） 结构和功能相关性 二.遗传信息的表达和传递 三.能量和物质交换 四、生态系统中的相互作用1.生物和环境相互作用 生物和生活环境 生物间的相互作用 互惠 捕食 竞争 生物体内部分子间的相互作用 五、生命的演化自然选择核心","categories":[{"name":"Biology","slug":"Biology","permalink":"https://www.blankspace.cn/categories/Biology/"},{"name":"现代生物学导论","slug":"Biology/现代生物学导论","permalink":"https://www.blankspace.cn/categories/Biology/现代生物学导论/"},{"name":"绪论","slug":"Biology/现代生物学导论/绪论","permalink":"https://www.blankspace.cn/categories/Biology/现代生物学导论/绪论/"}],"tags":[{"name":"Biology","slug":"Biology","permalink":"https://www.blankspace.cn/tags/Biology/"}]},{"title":"K-近邻手写体识别","slug":"KNN-MNIST","date":"2018-09-12T10:16:56.000Z","updated":"2018-09-12T13:50:12.442Z","comments":true,"path":"2018/09/12/KNN-MNIST/","link":"","permalink":"https://www.blankspace.cn/2018/09/12/KNN-MNIST/","excerpt":"构建K近邻手写体识别分类器。 流程： 收集数据：文本，下载 准备数据：编写函数img2vector,将图像转换成向量格式 分析数据：检查并确保数据符合要求 训练算法：K近邻算法不适用此步 测试算法：将数据集中一部分作为测试数据，来测试样本。测试数据和非测试数据的区别在于，测试数据是已经完成分类的数据。 使用算法：从图像中提取数字并完成数字识别 准备数据：将图像转换为测试向量123456789import numpy as np# 将文件中的32*32的图像转换成为1*1024的向量def img2vector(filename): returnVec = [] with open(filename, 'r') as f: for i in range(32): line = list(f.readline().strip()) returnVec += line return np.array(returnVec, dtype=np.int32).reshape(1, 1024) 1testVect = img2vector('digits/trainingDigits/0_0.txt') 1testVect[0, 0:31] array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) 123# 查看一下数据for line in testVect.reshape(32, 32): print(line) [0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] 测试算法：使用K-近邻算法识别手写数字首先需要确保from os import listdir,列出制定目录的文件名 1from os import listdir 1from KNN import classify0 # 见上一篇文章 1234567891011121314151617181920212223def handwritingClassTest(k=3): # 从文件中解析手写字母的类型 trainingFileList = listdir('digits/trainingDigits') hwLabels = [] trainingMat = np.zeros((len(trainingFileList), 1024)) for i, filename in enumerate(trainingFileList): hwLabels += filename.split('.')[0].split('_')[0] trainingMat[i, :] = img2vector('digits/trainingDigits/%s'%filename)# trainingMat = np.array(trainingMat).reshape(len(trainingFileList), 1024) # 测试k近邻算法 testFileList = listdir('digits/testDigits') errorCount = 0.0 m = len(testFileList) for i in range(m): fileNameStr = testFileList[i] classNumStr = fileNameStr.split('.')[0].split('_')[0] vectorUnderTest = img2vector('digits/testDigits/%s'%fileNameStr) classifierResult = classify0(vectorUnderTest, trainingMat, hwLabels, k) print('Classify result: ', classifierResult, ' Real class: ', classNumStr) if (classifierResult!=classNumStr): errorCount+=1.0 print('\\nThe total number of errors is: %d'%errorCount) print('\\nTotal error rate is: %f (%d/%d)'%(errorCount/float(m), errorCount, m)) 1help(classify0) Help on function classify0 in module KNN: classify0(inX, dataSet, labels, k) 使用K近邻算法，对输入特征进行分类。 输入参数： - inX: 输入特征向量 - dataSet: 数据集，计算输入向量和数据集中每个点的距离。 ​","text":"构建K近邻手写体识别分类器。 流程： 收集数据：文本，下载 准备数据：编写函数img2vector,将图像转换成向量格式 分析数据：检查并确保数据符合要求 训练算法：K近邻算法不适用此步 测试算法：将数据集中一部分作为测试数据，来测试样本。测试数据和非测试数据的区别在于，测试数据是已经完成分类的数据。 使用算法：从图像中提取数字并完成数字识别 准备数据：将图像转换为测试向量123456789import numpy as np# 将文件中的32*32的图像转换成为1*1024的向量def img2vector(filename): returnVec = [] with open(filename, 'r') as f: for i in range(32): line = list(f.readline().strip()) returnVec += line return np.array(returnVec, dtype=np.int32).reshape(1, 1024) 1testVect = img2vector('digits/trainingDigits/0_0.txt') 1testVect[0, 0:31] array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) 123# 查看一下数据for line in testVect.reshape(32, 32): print(line) [0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0] [0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] 测试算法：使用K-近邻算法识别手写数字首先需要确保from os import listdir,列出制定目录的文件名 1from os import listdir 1from KNN import classify0 # 见上一篇文章 1234567891011121314151617181920212223def handwritingClassTest(k=3): # 从文件中解析手写字母的类型 trainingFileList = listdir('digits/trainingDigits') hwLabels = [] trainingMat = np.zeros((len(trainingFileList), 1024)) for i, filename in enumerate(trainingFileList): hwLabels += filename.split('.')[0].split('_')[0] trainingMat[i, :] = img2vector('digits/trainingDigits/%s'%filename)# trainingMat = np.array(trainingMat).reshape(len(trainingFileList), 1024) # 测试k近邻算法 testFileList = listdir('digits/testDigits') errorCount = 0.0 m = len(testFileList) for i in range(m): fileNameStr = testFileList[i] classNumStr = fileNameStr.split('.')[0].split('_')[0] vectorUnderTest = img2vector('digits/testDigits/%s'%fileNameStr) classifierResult = classify0(vectorUnderTest, trainingMat, hwLabels, k) print('Classify result: ', classifierResult, ' Real class: ', classNumStr) if (classifierResult!=classNumStr): errorCount+=1.0 print('\\nThe total number of errors is: %d'%errorCount) print('\\nTotal error rate is: %f (%d/%d)'%(errorCount/float(m), errorCount, m)) 1help(classify0) Help on function classify0 in module KNN: classify0(inX, dataSet, labels, k) 使用K近邻算法，对输入特征进行分类。 输入参数： - inX: 输入特征向量 - dataSet: 数据集，计算输入向量和数据集中每个点的距离。 ​ 1handwritingClassTest() Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 0 Real class: 0 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 7 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 1 Real class: 1 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 2 Real class: 2 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 9 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 3 Real class: 3 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 4 Real class: 4 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 3 Real class: 5 Classify result: 6 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 5 Real class: 5 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 6 Real class: 6 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 7 Real class: 7 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 6 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 3 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 1 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 1 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 8 Real class: 8 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 1 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 7 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 Classify result: 9 Real class: 9 The total number of errors is: 10 Total error rate is: 0.010571 (10/946) 小节K近邻算法是简单有效的分类算法，但算法的执行效率并不高。对于每个测试点，都需要计算其和所有其他点的距离，每个距离计算包含了特征向量这么多维度的浮点运算，总共执行测试点这么多的次。当数据集很大时需要消耗很大的存储空间。此外，K近邻算法的另一个缺陷就是其无法给出任何数据的基础结构信息，所以我们无法知晓平均实力样本和典型样例有什么特征K决策树是K近邻算法的优化版本，可以减少算法存储空间和计算时间开销。 本例中，使用KNN构建手写体识别系统任务，剩余的工作例如从图像中提取数字，数据的检查和规格化等没有完全完成，因此侧重于算法理解和应用。","categories":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.blankspace.cn/categories/Machine-Learning/"},{"name":"Algorithms","slug":"Machine-Learning/Algorithms","permalink":"https://www.blankspace.cn/categories/Machine-Learning/Algorithms/"},{"name":"KNN","slug":"Machine-Learning/Algorithms/KNN","permalink":"https://www.blankspace.cn/categories/Machine-Learning/Algorithms/KNN/"}],"tags":[{"name":"MNIST","slug":"MNIST","permalink":"https://www.blankspace.cn/tags/MNIST/"},{"name":"KNN","slug":"KNN","permalink":"https://www.blankspace.cn/tags/KNN/"}]},{"title":"KNN-K近邻算法","slug":"python-KNN","date":"2018-09-10T15:33:30.000Z","updated":"2018-09-12T10:19:18.413Z","comments":true,"path":"2018/09/10/python-KNN/","link":"","permalink":"https://www.blankspace.cn/2018/09/10/python-KNN/","excerpt":"","text":"K近邻-KNN(K nearest neighbor)算法采用测量不同特征值之间的距离来进行分类。 1234567import numpy as np# 收集数据：无# 准备数据：用以计算数值所需要的数据def createDataset(): group = np.array([[0.0, 0.0], [0.0, 0.1], [1.0, 1.0], [1.0, 1.1]]) labels = np.array(['A', 'A', 'B', 'B']) return group, labels 123group, labels = createDataset()print(group)print(labels) [[0. 0. ] [0. 0.1] [1. 1. ] [1. 1.1]] [&#39;A&#39; &#39;A&#39; &#39;B&#39; &#39;B&#39;] 实施K近邻算法： 计算已知类别数据集中点和当前点之间的距离； 按照距离递增次序排序； 选取与当前点距离最小的K个点； 确定前K个点在类别中出现的频率； 将出现频率最高的代表的类别作为当前点的预测类别。 12345678910def classify0(inX, dataSet, labels, k): distances = np.sqrt(((inX-dataSet)**2).sum(axis=1)) sortedDistIndicies = distances.argsort() classCount = &#123;&#125; for i in range(k): voteLabel = labels[sortedDistIndicies[i]] classCount[voteLabel] = classCount.get(voteLabel, 0) + 1 sortedClassCount = sorted(classCount.items(), key=lambda s:s[1], reverse=True) return sortedClassCount[0][0] 1classify0([0.0, 0.2], group,labels, 3) &#39;A&#39; 示例：在约会网站上使用K-近邻算法 收集数据：文本，下载 准备数据：使用Python解析文本文件 分析数据：使用Matplotlib画二维扩散图 训练算法：此步骤不适用于K-近邻算法 测试算法：使用提供的数据的部分作为测试数据。测试数据和非测试数据的区别在于：测试数据已经完成分类，如果预测类别和实际类别分类不同，则标记为一个错误。 产生简单的命令行程序，然后用户输入一些特征数据来判断对方是否是自己喜欢的类型。 准备数据：从文本文件中解析数据假设将记录数据存储在文本文件中，每个样本占据一行，样本包括三个特征： 每年乘坐交通工具的里程数 玩电子游戏占日常时间的百分比 每周消耗的饮料公升数 123456789def file2matrix(filename): returnMat = [] labelVec = [] with open(filename, 'r') as f: for line in f.readlines(): listFromLine = line.strip().split('\\t') returnMat.append(listFromLine[:-1]) labelVec.append(int(listFromLine[-1])) return np.array(returnMat, dtype=np.float32), labelVec 1returnMat, labelVec = file2matrix('datingTestSet2.txt') 1print(returnMat[:3]) [[4.092000e+04 8.326976e+00 9.539520e-01] [1.448800e+04 7.153469e+00 1.673904e+00] [2.605200e+04 1.441871e+00 8.051240e-01]] 1print(labelVec[:5]) [3, 2, 1, 1, 1] numpy数组类型不支持Python自带的数组类型，所以要注意不要使用错误的数据类型。 分析数据：使用Matplotlib创建散点图123456789import matplotlib.pyplot as plt%matplotlib notebookfig = plt.figure()ax = fig.add_subplot(111)ax.scatter(returnMat[:, 1], returnMat[:, 2], 15.0*np.array(labelVec), 15.0*np.array(labelVec))ax.set_xlabel('Percentage of Time Spent Playing Video Game')ax.set_ylabel('Liter of Drinks')plt.show() &lt;IPython.core.display.Javascript object&gt; 12345678910111213fig2 = plt.figure()idx1 = np.where(np.array(labelVec)==1)p1 = plt.scatter(returnMat[idx1, 0], returnMat[idx1, 1], marker='x', color='m', label='dislike', s=15)idx2 = np.where(np.array(labelVec)==2)p2 = plt.scatter(returnMat[idx2, 0], returnMat[idx2, 1], marker='+', color='c', label='not bad', s=20)idx3 = np.where(np.array(labelVec)==3)p3 = plt.scatter(returnMat[idx3, 0], returnMat[idx3, 1], marker='o', color='r', label='charming', s=30)plt.xlabel('Mileage')plt.ylabel('Percentage of Time Spent Playing Video Game')plt.legend(loc='upper right')plt.show() &lt;IPython.core.display.Javascript object&gt; 准备数据：归一化数据将数据范围统一到特定的取值区间，如0~1，-1~1之间。 1newValue = (oldValue-min)/(max-min) 123456def autoNorm(dataSet): minValues = dataSet.min(0) maxValues = dataSet.max(0) ranges = maxValues - minValues normDataSet = (dataSet-minValues)/ranges return normDataSet, ranges, minValues 1autoNorm(returnMat) (array([[0.44832537, 0.39805138, 0.5623336 ], [0.1587326 , 0.34195465, 0.9872441 ], [0.28542942, 0.06892523, 0.4744963 ], ..., [0.29115948, 0.5091029 , 0.51079494], [0.527111 , 0.4366545 , 0.42900482], [0.47940794, 0.37680906, 0.7857181 ]], dtype=float32), array([9.127300e+04, 2.091935e+01, 1.694361e+00], dtype=float32), array([0. , 0. , 0.001156], dtype=float32)) 测试算法：作为完整测试程序检验分类器1234567891011121314def datingClassTest(): k = 3 ratio = 0.10 datingDataMat, datingLabels = file2matrix('datingTestSet2.txt') normMat, ranges, minVals = autoNorm(datingDataMat) m = normMat.shape[0] numTestVecs = int(m*ratio) errorCount = 0.0 for i in range(numTestVecs): classifyResult = classify0(normMat[i, :], normMat[numTestVecs:m, :], datingLabels[numTestVecs:m], k) print('Predict: ', classifyResult, ' Real:', datingLabels[i]) if classifyResult !=datingLabels[i]: errorCount += 1.0 print('Total error rate: %f'%(errorCount/float(numTestVecs))) 1datingClassTest() Predict: 3 Real: 3 Predict: 2 Real: 2 Predict: 1 Real: 1 Predict: 1 Real: 1 Predict: 1 Real: 1 Predict: 1 Real: 1 Predict: 3 Real: 3 Predict: 3 Real: 3 Predict: 1 Real: 1 Predict: 3 Real: 3 Predict: 1 Real: 1 Predict: 1 Real: 1 Predict: 2 Real: 2 Predict: 1 Real: 1 Predict: 1 Real: 1 Predict: 1 Real: 1 Predict: 1 Real: 1 Predict: 1 Real: 1 Predict: 2 Real: 2 Predict: 3 Real: 3 Predict: 2 Real: 2 Predict: 1 Real: 1 Predict: 3 Real: 2 Predict: 3 Real: 3 Predict: 2 Real: 2 Predict: 3 Real: 3 Predict: 2 Real: 2 Predict: 3 Real: 3 Predict: 2 Real: 2 Predict: 1 Real: 1 Predict: 3 Real: 3 Predict: 1 Real: 1 Predict: 3 Real: 3 Predict: 1 Real: 1 Predict: 2 Real: 2 Predict: 1 Real: 1 Predict: 1 Real: 1 Predict: 2 Real: 2 Predict: 3 Real: 3 Predict: 3 Real: 3 Predict: 1 Real: 1 Predict: 2 Real: 2 Predict: 3 Real: 3 Predict: 3 Real: 3 Predict: 3 Real: 3 Predict: 1 Real: 1 Predict: 1 Real: 1 Predict: 1 Real: 1 Predict: 1 Real: 1 Predict: 2 Real: 2 Predict: 2 Real: 2 Predict: 1 Real: 1 Predict: 3 Real: 3 Predict: 2 Real: 2 Predict: 2 Real: 2 Predict: 2 Real: 2 Predict: 2 Real: 2 Predict: 3 Real: 3 Predict: 1 Real: 1 Predict: 2 Real: 2 Predict: 1 Real: 1 Predict: 2 Real: 2 Predict: 2 Real: 2 Predict: 2 Real: 2 Predict: 2 Real: 2 Predict: 2 Real: 2 Predict: 3 Real: 3 Predict: 2 Real: 2 Predict: 3 Real: 3 Predict: 1 Real: 1 Predict: 2 Real: 2 Predict: 3 Real: 3 Predict: 2 Real: 2 Predict: 2 Real: 2 Predict: 3 Real: 1 Predict: 3 Real: 3 Predict: 1 Real: 1 Predict: 1 Real: 1 Predict: 3 Real: 3 Predict: 3 Real: 3 Predict: 1 Real: 1 Predict: 2 Real: 2 Predict: 3 Real: 3 Predict: 3 Real: 1 Predict: 3 Real: 3 Predict: 1 Real: 1 Predict: 2 Real: 2 Predict: 2 Real: 2 Predict: 1 Real: 1 Predict: 1 Real: 1 Predict: 3 Real: 3 Predict: 2 Real: 3 Predict: 1 Real: 1 Predict: 2 Real: 2 Predict: 1 Real: 1 Predict: 3 Real: 3 Predict: 3 Real: 3 Predict: 2 Real: 2 Predict: 1 Real: 1 Predict: 3 Real: 1 Total error rate: 0.050000 使用算法：构建完整的可用系统12345678910111213def classifyPerson(): # 类型 result_dict = &#123;1:'not at all', 2:'in small doses', 3:'in large doses'&#125; # 输入新的候选者的关键指标 inM = float(input('Please input Mileage per Year: ')) inP = float(input('Please input Percentage of Time Spent Playing Computer Games: ')) inD = float(input('Please input Liter of Drinks: ')) inX = [inM, inP, inD] # 使用K近邻算法进行预测 datingDataMat, datingLables = file2matrix('datingTestSet2.txt') normMat, ranges, minVals = autoNorm(datingDataMat) classPred = classify0(inX, datingDataMat, datingLables, 3) print('You probably like this person: ', result_dict[classPred]) 1classifyPerson() Please input Mileage per Year: 40920 Please input Percentage of Time Spent Playing Computer Games: 8.326 Please input Liter of Drinks: 0.9553 You probably like this person: in large doses","categories":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.blankspace.cn/categories/Machine-Learning/"},{"name":"Algorithms","slug":"Machine-Learning/Algorithms","permalink":"https://www.blankspace.cn/categories/Machine-Learning/Algorithms/"},{"name":"KNN","slug":"Machine-Learning/Algorithms/KNN","permalink":"https://www.blankspace.cn/categories/Machine-Learning/Algorithms/KNN/"}],"tags":[{"name":"KNN","slug":"KNN","permalink":"https://www.blankspace.cn/tags/KNN/"}]},{"title":"研究生规划","slug":"postgraduate-plan","date":"2018-09-08T12:40:58.000Z","updated":"2018-09-09T00:16:27.626Z","comments":true,"path":"2018/09/08/postgraduate-plan/","link":"","permalink":"https://www.blankspace.cn/2018/09/08/postgraduate-plan/","excerpt":"我的研究生规划","text":"我的研究生规划 时间线2021.9~2025.6 博士，ABC方向 2018.9~2021.7 硕士，自动化控制工程 2014, 9~2018.6 本科，电子信息科学与技术 预计30±1岁博士毕业。 一些思考什么是博士呢？百度百科的定义：“博士是标志一个人具备出原创成果的能力或学力的学位，是目前最高级别的学位。 ”。这种说法指明博士是一种学位。 该不该读博士呢？很多人说读博不划算：时间成本高，一般都要个4~5年，读完差不多30了，“读书都读老了”，到时候自己的同学、周边的同龄人都事业有成，娶妻生子了，有的都创业当老板身价如何如何，而自己还在那拿着微薄的补贴给BOSS打工，养不活自己，心理落差很大；不好毕业，一般都要求有发论文的要求，少则一两篇，多多益善，还有各种硬指标，是否SCI，影响因子多少，第几区，第几作者，等等；就业方向窄，要么去执教，要么只能去一些研究所；精神和生活压力大，很多博士都有精神问题，万一碰到个“变态”的BOSS更是糟糕；…… 上面就是社会对于博士还有读博士的普遍看法，总的来说就是时间长，风险高，难度大。 从国家国际大的环境来讲，目前国内本科生，硕士研究生都扩招特别是专业硕士人数和比例，而博士生对应指数并没有上升甚至有些下降，很明显的就是目前需要更多的人去就业，就业的目的从国家层面上来讲，显然是为了拉动经济的增长。原因不言自明，那就是国家经济增长遇到了阻碍或者是瓶颈，产业结构需要进行调整，需要更多的劳动力产生或者进入相对更高效能的行业或者岗位进行生产活动，同时需要更多的人创新创业，增加经济的新增长点，这在我听到的很多专家讲座口中也有表露。 结构调整的纲领应该就是“中国制造2025”，顺便扯一下，有人说德国的工业4.0是本末倒置，应该是一个行业发展到一定阶段区别于过去后形成体系和标准后成为某某标准几点几，而不是发展迎合某某标准，从技术层面讲的确不无道理，关于“中国制造2025”，我没有仔细研究过，初步感觉肯定是要比德国工业4.0什么的要高瞻远瞩得多，总体就是摆脱目前中国制造处于价值链低端的现状，大力提升信息化，智能化水平，使用“机器换人”、“互联网+”原来产业的方式来提升制造业生产水平，从而带动经济发展。改革开放到如今四十年劳动密集型地发展，中国差不多抢占了全世界低端制造的相当多的市场份额（本质还是牺牲了广大农民的利益），现在想在高端制造上也全面超越，这显然是断人财路不给别人留活路的做法，美国日本欧洲等国家不满和种种反制措施就是为了应对中国的全产业链全方位的替代（人怕被替代，国家同样怕）。只有有空再写我关于贸易战，全球竞争格局的思考。 按照高层构想，假如读博，正常毕业，恰好到2025，正好是中国从制造强国走向制造强国中等水平的关键过渡（台湾可能已经回归了），到时候拥有大学学历和以上的劳动力会超过半数，很显然从平均水平上看一个本科生硕士研究生的学历是不够的。 以人生的跨度来看，能够写进人生履历中的关键节点并不多，而博士毫无疑问是值得写进去的。有的人读博士（硕）是为了增加自己的竞争力，有平台上的，有能力训练方面的，学位文凭是基本的衡量标准，获得文凭客观上讲就达到劳动力商场中部分岗位的准入门槛，从而和有更大基数的劳动力人群区分开来。而有的人读博是为了推迟选择，通常是家庭、生活环境比较稳定，不太愿意这么早进入社会同他人竞争。还有是为了科学发现，追求真理。通常来说读博（硕）的原因不会只有上述的一个或者几个，我个人读博的意愿除了上面的几点，还有就是博士学位客观上讲也成为了一种职业准入门槛，所谓门槛就是最低标准，只有达到这个准入门槛才能进入某些行业从事一些特定的工作，比如科研岗位，大学教师岗位。从这一点来看，读博士是必要条件而不是充分条件。 自我剖析一下，其实我感觉自己并不是那种很擅长和很多人竞争的人，虽然不知不觉已经来到了所谓的象牙塔的塔顶，但大多数时候我是靠遵循自己的内心的感受和逻辑来行事的，虽然说在一些事情上竞争过了别人，但是我总是发现自己很难成为the best，比如学习成绩上不是top 1%，科研实践有但是很少是no.1 或者一等奖，总的来说就是全面发展比一般水平高但是距离顶尖水平相去甚远，总的来说就是没有自己的特色和核心竞争力。其次有比较强的个人观念不喜欢服从权威，连我自己都发现了，我比较有质疑和批判精神，这是一把双刃剑，有时候伤及他人的同时会伤及自身（现在的我正在着力改正，遇事不急于评判和下结论，而是先兼容并包，了解权威之内在逻辑和理论，而后据理力争或者吸收为自己的东西）。于此同时，我对于拥有很多财富成为创业英雄虽说有些羡慕，但隐约觉得这并非是我的人生追求（虽然这是目前的时代背景很鼓励和倡导的，也有由抱负的同学甚至找我创业），而更倾向于追求个人的声望名誉和较高的社会地位，“文章千古事，得失寸心知”。所以，以我目前这种实力状态加上性格，若打算进入产业界，刨开最优秀的那批人，能不能和诸多“逆木桶原理”有个人核心特色的人竞争都是有困难的。另外在职场中发展，难免需要处理各种人事争端，不服从权威或者过多质疑上级的决策难免在某些方面处于“吃亏”甚至“危险”的境地，而摸爬滚打拼命挣钱我不是做不到而是觉得我还有更大的人生抱负和理想。因此进入学界从事研究工作比较符合我的个性。 至于时间成本，人的年龄肯定是不断增长的，不读博到时候也是30岁，读博也是30岁，趁着年轻学习更多的知识毫无疑问是有意义的。但是基本的，到了这个年龄，经济上需要独立，需要能够养活自己甚至是新的家人，所以靠花家里的钱来读博肯定是不行。 所以无论从大的国家的市场的环境，还是小的我个人的价值倾向和追求，我都想进一步深造即读博。 确定了这一目标，还需要将其设置得更加具体才行。比如去哪里读？读什么样的博士？如何才能实现？ 有感于国内的评价体系优惠政策对本土的博士不是很友好（主要是博士期间和之后的待遇），加之国内的科研环境（主要指学术风气）和（相传的但没有真实感受过的）世界先进水平还有一定差距，且目前我硕士研究生的平台已经相对很高了，所以综合来看，去国/境外读博士是很自然的选择。 由于不想离家太远也考虑了家人的看法，虽然说北美毫无疑问还是当今的科研重地，同时北美的博士学位比较“硬核”且被认可，但在科研条件差别不大的前提下，基于地理空间的偏好，香港&gt;新加坡&gt;北美&gt;欧洲。同时对于博士生，导师的选择偏好应该高于对于学校的选择偏好，因此至于目标学校具体哪里先且至此。 读什么方向的博士？最理想的是和研究生方向一致的，要有传承性，这样才能在一个领域深钻，才能聚沙成塔，水到渠成，取得成果。所谓“取法其上得乎其下，取法其中得乎其下”，从事热点研究毫无疑问就是“上策”，其一是证明应用前景比较广泛，需要大量的人来研究；其二，“大力出奇迹”，研究的人多了，同行之间更容易相互讨论借鉴，相对比较容易达到毕业要求和出成果。总体方向应该是“智能”和“数据”。 何为智能？阿兰·图灵提出的图灵测试已经突破了，这种评判智能的标准显然不合时宜，但他还说过实现智能的途径有两种，一种是让机器来从事具有高度智能的活动比如下棋，另外一种则是让机器来模拟人的感官比如拥有视觉听觉等，他认为这两种方式都是可行的。这两种方式都是“行为主义的，反对”行为主义“的智能的例子有著名的”中文房间“思想实验，但目前甚至很远的将来应该都几乎不可能实现除此之外的“智能”，因为那样意味着人类彻底弄懂了思维的本质，大脑的运作机理，那时候大脑的每一步活动不光能被检测，还能被重建，思维不仅知道如何发生，还能被转移和修改，这也就意味着可以制造出真正知道自己在做什么的智能机器，也就是强人工智能（虽然没人会愿意制造强人工智能，强人工智能根本上也不是发展人工智能的目的，你想发明一个主子来奴役甚至消灭自己，没有正常人会这样做），那时同样也会有方法来修改机器之思维使之不具备这种智能。以上论题实际上细究起来已经是哲学的范畴了，而且看似有可能，实际上无论从科学还是技术上都几乎不可能实现，也没有必要去实现。 当一个时代中相当多的精英，最聪明的那部分人投入到某项领域和产业中去，表明这个领域的时代正在开启，比如前三次工业革命，文艺复兴，新中国革命和建设等（不否定社会中最广大人民的作用）。而目前来说，即使不能说是“AI时代”，也可以说是“全民热炒AI的时代”。 那么在AI时代，真正需要的是什么？在我看来，需要解决原来解决不了或者效率不高的问题，特别是抽象的很难定义的问题，总体就是模仿人类的行为处理一些任务，比如区分物体，总结经验，对外界刺激做出反应等。人的感官有视觉，听觉，嗅觉，触觉和意识，其中视觉是获取信息的主要来源。信息的主要形式有图像信息，文本信息，生物信息（声信号，电信号，嗅觉信号等所传递的信息），物理信息等，信息的来源虽然多重多样，但就计算机而言，都是“数”。对应于AI的领域，视觉有计算机视觉，就处理对象不同，有图像处理和流媒体处理；对于声音和文本，有音频处理，自然语言处理；此外还有机器人等非常多的研究应用领域，如机器翻译，机器写作和阅读理解，机器绘画，机器奏乐等不一而足。研究人员的精力是有限的也是宝贵的，不可能同时开展这么多方向的研究，所以我选择了方向为“生物大数据、医疗大数据的智能挖掘与分析”的导师，这应该是前沿和未来的趋势之一。 人工智能，机器学习，数据挖掘，模式识别，大数据，深度学习之间的关系需要理清楚： 总的来说，AI&gt;ML&gt;DL，使用机器学习的方法对（大）数据进行分析获取有价值的知识叫做数据挖掘，而模式识别则是图灵所说的让机器做看似“智能”的事情，原先作为机器学习的代名词，作为术语来说很过时了，深度学习是机器学习方法中的一种，特点就是使用深层次的人工神经网络来学习表示。机器学习是基础，是实现人工智能的方式之一，模式识别和数据挖掘都要使用到机器学习的方法对数据进行分析。 所以最基础的机器学习必须要学好，而人类获取信息的主要来源是视觉，要提升自己的竞争力，具有自己的研究特色，毫无疑问得专注于计算机视觉方向，具体来讲有图像处理，卷积神经网络 体育锻炼争取每天10000步，或者跑步三公里。 锻炼的时间选择能够长期持续的时间，比如晚上。 课程学习 GPA：尽量高 所以就需要有超前学习的意识，每次比站在自己旁边的人先行一步，或者向站在自己前面一点的人学习。 语言外语学习至关重要，是能否实现目标的必由之路。能考过硬性考试尽量早准备，高强度训练，从听说读写四个方面入手，听力材料可以作为口语的训练材料，同时也可用以训练写作和阅读。 英语 指标 托福100 雅思7.0 听力 口语 写作 阅读 专业技能专业技能的养成需要多实践多动手，在学习专业知识的同时可以边学边练习这样比较有利于知识的吸收和理解。 编程语言 Java（Scalar）：精通 Hadoop Spark Python：精通 TensorFlow/Keras/PyTorch：熟练 C/C++：熟练 算法和数据结构 操作系统 Linux：精通 数据库 MySQL：精通 版本管理 Git/Github：熟练 出版物必须大量地阅读论文，每天至少抽出1小时。 论文：2篇即以上 会议文章 论文 项目实践尽量多参加，多实践，熟能生巧。 企业实践 工程实践 Kaggle数据挖掘 天池大数据 社会活动尽量参与，并做到优秀。 义工/志愿者 社团组织","categories":[{"name":"Dairy","slug":"Dairy","permalink":"https://www.blankspace.cn/categories/Dairy/"}],"tags":[{"name":"Plan","slug":"Plan","permalink":"https://www.blankspace.cn/tags/Plan/"},{"name":"Postgraduate","slug":"Postgraduate","permalink":"https://www.blankspace.cn/tags/Postgraduate/"}]},{"title":"英语速记符号","slug":"shorthand","date":"2018-09-02T01:46:43.000Z","updated":"2018-09-02T06:22:48.996Z","comments":true,"path":"2018/09/02/shorthand/","link":"","permalink":"https://www.blankspace.cn/2018/09/02/shorthand/","excerpt":"","text":"大学英语老师是同声传译专业，曾经在课堂上简要介绍过速记符号这一翻译技巧，未加整理。恰逢近期将要进行英语等级考试，有幸在【豆瓣】无意看到速记符号相关知识，特整理如下。 时间空间 符号 意义 $\\underline{Y}$ 今年 .Y 去年 ..Y 前年 Y. 明年 Y.. 后年 n..Y n年前 Y..n n年后（我猜的） Ys 过去的几年里 $Ys\\rightarrow$ 在今后的几年里 $Y^{-}$ 年初 Y- 年中 Y_ 年底 $\\require{cancel} \\cancel{Y}$ 上半年 $\\bcancel{Y}$ 下半年 $^{-}Y$ 去年年初 $-Y$ 去年年中 $_{-}Y$ 去年年底 $\\underline{D}$ 今天 D. 明天 .D 昨天 D$^{-}$ 明天上午 D- 明天中午 D_ 明天下午 Ds 前几天 Ds$\\rightarrow$ 在今后的几天 $\\underline M$ 本月 Ms 过去的几个月里 .M 上个月 ${M_{.}}^{-}$ 下个月月初 一 星期一，一月份 二 星期二，二月份 四 星期四，四月份 $\\underline{W}$ 本周 .W 上周 W. 下周 W_ 周末 . 上/下/左/右 … 等等 逻辑、数量 符号 意义 ∵ 因为，因素 ∴ 所以 $\\neg$ 转折 $\\to$ 导致 $\\leftarrow$ 原因 &amp; 与，和 = 即，等于，相当于 ⊥ … 基于 国计民生 符号 意义 $\\bigodot$ 中央，国内，中心，核心 $\\bigcirc$· 国外 $\\bigodot$. 国内外 $\\triangle$ 城市 $\\triangle$. 城乡 $\\overline\\uparrow$ 正在发展 $\\overline \\gt$ 正在扩大 $\\rightarrow\\bigcirc$ 进口，进入 $\\to\\bigcirc \\to$ 进出口 $\\underline{\\overline{\\updownarrow}}$ 差距 $\\underline{\\overline{\\updownarrow}} $$ 贫富差距 $\\sim$ 关系 $\\overset{p/e/t/et}{\\sim}$ 政治/经济/贸易/经贸关系 U 谈判，会议 $\\overset{1}{U}$ 达成了一个协议 $\\overset{n}{U}$ 达成了多个协议 $\\overset{0}{U}$ 未达成协议 $\\surd$ 解决 $\\overset{?}{\\surd}$ 解决问题 # 影响 $\\square$ 国家 $\\underline{ \\square 情}$ 基本国情 $\\square$$\\square$ 国与国 $\\thicksim$ 但是 $\\alpha$ 保护 $\\alpha\\, en$ 保护环境 ^ 跨越 风 风险 缩写 符号 意义 LG 女士们先生们 LDC 最不发达国家least developed countries $d^d$ 发达国家developed country $d^g$ 发展中国家developing country $\\overline{d^d}$ 欠发达国家 RO 改革开放 P_h 公共卫生 ent 娱乐 F 朋友 ed 教育 e 经济 P 政治 e∵ 经济因素 G 来宾 R+D 研究和开发 com! 祝贺 p! pleased !很高兴 4m 四个现代化 3w 第三世界 2 to $H_{2}O$ 水 由于过多不太方便记忆和使用，所以只列出常见的，更多符号请看这里。","categories":[{"name":"English","slug":"English","permalink":"https://www.blankspace.cn/categories/English/"},{"name":"Tips","slug":"English/Tips","permalink":"https://www.blankspace.cn/categories/English/Tips/"}],"tags":[{"name":"shorthand","slug":"shorthand","permalink":"https://www.blankspace.cn/tags/shorthand/"}]},{"title":"通过SSH让Windows控制Ubuntu","slug":"let-ubuntu-be-controled-by-windows","date":"2018-08-21T05:28:47.000Z","updated":"2018-08-21T08:20:42.256Z","comments":true,"path":"2018/08/21/let-ubuntu-be-controled-by-windows/","link":"","permalink":"https://www.blankspace.cn/2018/08/21/let-ubuntu-be-controled-by-windows/","excerpt":"","text":"刚好手头有一台旧电脑由于硬件老化，所以安装上了Ubuntu系统，现在想通过另外一台Windows电脑来控制。 最简单的方法可以使用Teamviewer，在两台电脑上都装上，然后同时登陆，输入口令，就能远程相互控制了，而且是图像化界面，十分方便。 另外一种方法可以在局域网使用SSH来连接及控制，成功之后的操作就跟远程操作云服务供应商（比如阿里云，腾讯云，GoDaddy等）提供的云服务器或者云虚拟主机一样，相当于一台本地服务器。过程如下： 两台电脑连接到同一局域网下 在Linux电脑安装openssh-server：sudo apt-get install openssh-server 在Linux启动SSH服务：sudo /etc/init.d/ssh start 在Windows安装相关SSH软件，推荐xshell还有PuTTY（感谢xshell提供学生优惠） 查看Linux的IP地址，在终端中输入： 1fconfig -a 连接，在xshell中创建新的连接，输入Linux的IP，端口号选择22 接着输入用户名和密码，就能在xshell中进入Linux终端（黑窗口）来控制了。","categories":[{"name":"Linux","slug":"Linux","permalink":"https://www.blankspace.cn/categories/Linux/"},{"name":"Ubuntu","slug":"Linux/Ubuntu","permalink":"https://www.blankspace.cn/categories/Linux/Ubuntu/"}],"tags":[{"name":"SSH","slug":"SSH","permalink":"https://www.blankspace.cn/tags/SSH/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://www.blankspace.cn/tags/Ubuntu/"}]},{"title":"Ubuntu 18.04.1 初学遇到的部分小问题和解决方法","slug":"ubuntu-beginner","date":"2018-08-20T13:46:53.000Z","updated":"2018-08-21T05:25:49.292Z","comments":true,"path":"2018/08/20/ubuntu-beginner/","link":"","permalink":"https://www.blankspace.cn/2018/08/20/ubuntu-beginner/","excerpt":"","text":"由于学习和工作需要，得使用Linux系统，初学者试水，难免遇到各种各样的Bug，很莫名奇妙也很幸运的是从安装到使用都是“惊喜连连, bug不断, 特总结如下: 查看Ubuntu版本号1cat /etc/issue 1Ubuntu 18.04.1 LTS 本文的Linux版本如上。 安装后出现Bug soft lockup也许是因为安装双系统的原因,导致Ubuntu安装后启动发现如下错误, 卡顿无比: kernel: xxx watchdog: Bug: soft lockup - CPU#X stuck for xxs 解决方法: 重启,开机时不要按enter,而是按e,进入编辑开机指令状态 在命令中的后几行,找到quite splash, 在后面加上nomodeset, 即变成quite splash nomodeset 按下Ctrl+x启动系统 这下耐性等待就可以进入系统了,进入系统后打开终端(可以使用Ctrl+Alt+T) 在终端中输入:cd /etc/default/, 按下回车 接着输入sudo sudo nano grub, 输入管理员密码,回车 在打开的窗口中找到GRUB_CMDLINE_LINUX_DEFAULT=&quot;quite splash&quot;更改为GRUB_CMDLINE_LINUX_DEFAULT=&quot;quite splash nomodeset&quot; 在相同的窗口中,找到GRUB_DEFAULT=0,其表示启动的序号。若要默认Windows启动则将其改为开机启动画面中Windows所代表的序号（序号从0开始），通常为2. 按下Ctrl+x,然后输入y保存编辑后的文件 再次询问，回车 然后在终端中输入sudo update-grub,更新grub 重启，就能正常进入Ubuntu系统了 无法为chrome安装插件习惯使用chrome浏览器，上面有保存的很多网络书签和插件需要同步。下载安装后，下载插件的.crx无法通过拖拽的方式安装进chrome，即使打开了开发者模式也不行。解决方法：打开终端，以命令行方式启动chrome： 1google-chrome --enable-easy-off-store-extension-install 然后就可以安装插件了。 更换为国内源访问国内源理所应当比国外快吧，所以就换了。步骤如下： 备份原来的源 sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak 2.更换源 sudo gedit /etc/apt/sources.list 更换成国内源，复制粘贴即可： 阿里源：https://opsx.alibaba.com/mirror，选择相应的LINUX系统点击查看帮助，其中有最新的源。 deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse TUNA源：https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/ 12345678910111213# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse# 预发布软件源，不建议启用# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse 网易源：http://mirrors.163.com/.help/ubuntu.html 12345678910deb http://mirrors.163.com/ubuntu/ wily main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ wily-security main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ wily-updates main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ wily-proposed main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ wily-backports main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ wily main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ wily-security main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ wily-updates main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ wily-proposed main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ wily-backports main restricted universe multiverse 等等。 3.更新 更新源： sudo apt-get update 更新已经安装的软件： sudo apt-get upgrade 4.使用。之后使用apt-get install命令就是从上面替换的源头，可以输入sudo apt-get install sl查看小火车来测试。 安装/卸载(搜狗)拼音输入法失败以下顺序不要搞错了,否则将会产生很多莫名其妙的错误：无法进入语言支持Language Support更改语言，右上角莫名错误气泡等 打开设置，侧边栏进入区域和语言，点击管理已安装的语言 语言下的键盘输入法系统选择fcitx 去搜狗拼音下载对应版本拼音输入法(貌似没有找到其他更好用的LINUX拼音输入法) 安装 注销账户后生效 这是正常的操作。 假如遇到了上面所说的莫名奇妙的错误，问题就是出在安装顺序上，解决办法，先卸载搜狗拼音输入法，然后按照上面顺序操作。 卸载搜狗拼音输入法 在终端中输入: sudo dpkg -l so* 然后输入: sudo dpkg —remove —force-all sogoupinyin 注意有的教程中没有--force-all, 可能会卸载失败。 等待卸载完成后安装正确顺序重新操作即可正常使用搜狗拼音输入法。 调整屏幕分辨率默认的放大比例只有100%和200%，和我之前用过的Ubuntu麒麟相比好像缺了分辨率的调整。解决办法如下： 打卡终端 下载tweak： sudo apt-get install gnome-tweak-tool 在搜索栏中搜索tweaks中文叫做优化 里面有很多可调整的东西 使用pip3遇到ImportError: cannot import name ‘sysconfig’自带Python3，终端输入python3 --version即可查看 但是没有安装pip。 输入:sudo apt-get install python3-pip 安装后启动pip3 list，报错ImportError: cannot import name &#39;sysconfig&#39; 解决方法：这篇 在原有基础上添加源： 1234deb http://cn.archive.ubuntu.com/ubuntu bionic main multiverse restricted universedeb http://cn.archive.ubuntu.com/ubuntu bionic-updates main multiverse restricted universedeb http://cn.archive.ubuntu.com/ubuntu bionic-security main multiverse restricted universedeb http://cn.archive.ubuntu.com/ubuntu bionic-proposed main multiverse restricted universe 添加源的方法和上文更改源的操作类似。 重新输入上述安装命令即可解决。","categories":[{"name":"Linux","slug":"Linux","permalink":"https://www.blankspace.cn/categories/Linux/"},{"name":"Ubuntu","slug":"Linux/Ubuntu","permalink":"https://www.blankspace.cn/categories/Linux/Ubuntu/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://www.blankspace.cn/tags/Ubuntu/"}]},{"title":"MathJax basic tutorial and quick reference","slug":"MathJax-basic-tutorial","date":"2018-08-13T23:46:53.000Z","updated":"2018-09-19T02:23:00.769Z","comments":true,"path":"2018/08/14/MathJax-basic-tutorial/","link":"","permalink":"https://www.blankspace.cn/2018/08/14/MathJax-basic-tutorial/","excerpt":"更多内容，请看这里.本文是本人对其中部分的翻译，若有疏漏，还请联系作者更正。 (德语版本: Deutsch: MathJax: LaTeX Basic Tutorial und Referenz) 基础部分 对于行内公式，使用$...$括起来。对于整行显示公式，使用$$...$$括起来。 比方说，键入$\\sum_{i=0}^n i^2 = \\frac{(n^2+n)(2n+1)}{6}$可以在一行内嵌入公式$\\sum_{i=0}^n i^2 = \\frac{(n^2+n)(2n+1)}{6}$ （这就是inline模式了），或者我们键入$$\\sum_{i=0}^n i^2 = \\frac{(n^2+n)(2n+1)}{6}$$就可以显示： \\sum_{i=0}^n i^2 = \\frac{(n^2+n)(2n+1)}{6}（这就是display模式了）。 对于希腊字母，使用诸如\\alpha, \\beta, …, \\omega :$\\alpha, \\beta, …, \\omega$.大写希腊字母，使用诸如\\Gamma, \\Delta, …, \\Omega: $\\Gamma, \\Delta, …, \\Omega$. 对于上标还有下标，使用^和_.比如x_i^2:$x_i^2 $,\\log_2 x:$\\log_2 x$. 组（Group）.被一对{…}包裹的部分就是一个组，里面可以是一个单一的字符，也可以是一串公式。比如输入10^10,得到的是$10^10$,而不是我们想要的10^{10}:$10^{10}$.使用花括号来对公式进行划界，否则例如:x^5^6就是一种错误的表示。{x^y}^z得到${x^y}^z$,而x^{y^z}得到$x^{y^z}$.还有比方说x_i^2:$x_i^2$,而x_{i^2}:$x_{i^2}$. 括号。普通()[]分别生成圆括号和方括号。使用\\{和\\}来生成花括号：$\\{ \\}$.但是这样的括号并不能随着内部公式的高度来调整，所以写(\\frac{\\sqrt x}{y^3})时括号就显得有点装不下了$(\\frac{\\sqrt{x}}{y^3})$.使用\\left(和\\right)能使得括号根据括起来的公式自动调整\\left( \\frac{\\sqrt x)}{y^3} \\right):$\\left( \\frac{\\sqrt x}{y^3} \\right)$. \\left和\\right可以应用于下列括号：(和)$\\left(x \\right)$, [和]$\\left[ x \\right]$. \\{和\\}，如\\left\\{x\\right\\}, $\\left\\{x\\right\\}$. |如\\left| x \\right|$\\left| x \\right|$, \\vert$\\left\\vert x \\right\\vert$,\\Vert$\\left\\Vert x \\right\\Vert$, \\langle和\\rangle$\\left\\langle x \\right\\rangle$, \\lcei;和\\rceil$\\left\\lceil x \\right\\rceil$, \\lfloor和\\rfloor$\\left\\lfloor x \\right\\rfloor$, \\middle可以用了增加额外的分界。此外有隐藏括号，用.来标记: \\left.\\frac12\\right\\rbrace显示$\\left.\\frac12\\right\\rbrace$. 手动调整括号大小\\Biggl(\\biggl(\\Bigl(\\bigl(x\\bigr)\\Bigr)\\biggl)\\Biggl)显示为：$\\Biggl(\\biggl(\\Bigl(\\bigl(x\\bigr)\\Bigr)\\biggl)\\Biggl)$. 累加与积分（sum and integral）\\sum与\\int表示; 上标为上界，下标为下界，所以例如\\sum_x^n$\\sum_1^n$.若界超过一个字符表示，不要忘记使用{…}, 例如\\sum_{i=0}^\\infty i^2$\\sum_{i=0}^\\infty i^2$. 类似的还有累乘\\prod$\\prod$, 积分\\int$\\int$, 并集\\bigcup$\\bigcup$, 交集\\bigcap$\\bigcap$, 二重积分\\iint$\\iint$, 三重积分\\iiint$\\iiint$. 分数（fraction），创建分数的三种方法. \\frac ab得到$\\frac ab$;对于更复杂分子和分母使用{…}: \\frac{a+1}{b+1}$\\frac{a+1}{b+1}$. 如果分数分子分母实在是复杂，我们可能会使用\\over，将一个组分开：{a+1 \\over b+1}${a+1 \\over b+1}$. 对于连续的多个分数\\cfrac{a}{b}$\\cfrac{a}{b}$能派上用场。更多细节，见[后文]。 字体 “Blackboard bold”,使用\\mathbb或者Bbb：$\\Bbb{ABCDEFGHIJKLMNOPQRSTUVWXYZ}$$\\mathbb{abcdefghijklmnopqrstuvwxyz} $ “Boldface”,使用\\mathbf：$\\mathbf {ABCDEFGHIJKLMNOPQRSTUVWXYZ}$$\\mathbf {abcdefghijklmnopqrstuvwxyz} $ “Typewriter”(打字机体),使用\\mathtt：$\\mathtt {ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ}$$\\mathtt{abcdefghijklmnopqrstuvwxyz}$ “Roman”(罗马体), 使用\\mathrm: $\\mathrm ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ $$\\mathrm{abcdefghijklmnopqrstuvwxyz}$ “Sans-serif”, 使用\\mathsf:$\\mathsf {ABCDEFGHIJKLMNOPQRSTUVWXYZ}$$\\mathsf abcdefghijklmnopqrstuvwxyz $ “Calligraphic”, 使用\\mathcal:$\\mathcal {ABCDEFGHIJKLMNOPQRSTUVWXYZ }$ “Script”(手写体), 使用\\mathscr: $\\mathscr {ABCDEFGHIJKLMNOPQRSTUVWXYZ} $ “Fraktur”(古德语体), 使用\\mathfrak: $\\mathfrak{ABCDEFGHIJKLMNOPQRSTUVWXYZ }$$\\mathfrak {abcdefghijklmnopqrstuvwxyz} $ 开方，\\sqrt,能根据根号内容调整：\\sqrt{x^3}$\\sqrt{x^3}$;$\\sqrt[3]{\\frac xy}$$\\sqrt[3]{\\frac xy}$.对于更复杂的表达使用如{...}^{1/2}表示，${x}^{1/2}$和$\\sqrt{x}$一样. 特殊的函数，诸如，极限“lim”, 正弦“sin”, 最大值“max”, 自然对数”ln”等通常以罗马字体代替斜体来显示。比如使用\\lim,\\sin等，来显示\\sin$\\sin x​$, 而不是sin x$sin x​$.使用下标来对\\lim进行标注：\\lim_{x\\to0}显示$\\lim_{x\\to0}​$. 此外有很多的特别的标记符号，部分符号列表参考这里，完整的符号列表参考这里.最常用的如下： 比较，\\lt \\gt \\le \\leq \\leqq \\leqslant \\ge \\geq \\geqq\\geqslant \\neq$\\lt \\gt \\le \\leq \\leqq \\leqslant \\ge \\geq \\geqq\\geqslant \\neq$. 可以使用\\not给任何符号加上一道斜线\\not\\lt$\\not\\lt$, 通常这样效果并不佳。 + - \\times \\div \\pm \\mp$+-\\times \\div \\pm \\mp $.\\cdot中心点，$x\\cdot y$ 集合，\\cup \\cap \\setminus \\subset \\subseteq \\subsetneq \\supset \\in \\notin \\emptyset \\varnothing, $\\cup \\cap \\setminus \\subset \\subseteq \\subsetneq \\supset \\in \\notin \\emptyset \\varnothing $ {n+1 \\choose 2k}或\\binom{n+1}{2k}$\\binom{n+1}{2k} $ 箭头，\\to \\rightarrow \\leftarrow \\Rightarrow \\Leftarrow \\mapsto$\\to \\rightarrow \\leftarrow \\Rightarrow \\Leftarrow \\mapsto $ 逻辑，\\land \\lor \\lnot \\forall \\exists \\top \\bot \\vdash \\vDash$\\land \\lor \\lnot \\forall \\exists \\top \\bot \\vdash \\vDash $ 形状，\\star \\ast \\oplus \\circ \\bullet$\\star \\ast \\oplus \\circ \\bullet $ \\approx \\sim \\simeq \\cong \\equiv \\prec \\lhd$\\approx \\sim \\simeq \\cong \\equiv \\prec \\lhd $ \\infty \\aleph_0$\\infty \\aleph_0 $\\nabla \\partial$\\nabla \\partial$\\Im \\Re$\\Im \\Re$ 对于取模相等使用\\pmod例如：a\\equiv b\\pmod n$a\\equiv b\\pmod n$ $a_1, a_2, \\ldots a_n$使用\\ldots; $a_1+a_2+\\cdots+a_n$使用\\cdots 一些希腊字母有多种形式：比如\\epsilon和\\varepsilon$\\epsilon \\varepsilon$, \\phi \\varphi$\\phi \\varphi$,等。手写体小写字母l\\ell$\\ell$ Detexif能将你所绘制的图形识别成与之接近的$\\TeX$符号。此外更多详情欢迎查看MathJax.org以及 list of currently supported $\\LaTeX$ commands 和$\\TeX$Commands Available in MathJax. 空格。在公式之间添加更多的空格数，不会增加显示的空格宽度，a b和a b都会显示$a b$.增加更多空格：\\,增加小空格$a\\,b$;\\;增加更宽一点的空格$a\\;b$;更宽的空格使用\\quad$a\\quad b$和\\qquad$a\\qquad b$. 增加纯文本，使用\\text{...}:$\\left\\{ x\\in s| \\text{ x is exatra large}\\right\\}$.在\\text{...}中亦可使用$...$. 音标和变音符号，\\hat对单个标记加...帽，对公式加帽使用\\widehat$\\widehat{xyz}$,不过如果太宽的话看起来就有点哈巴了。类似的\\bar$\\bar{x}$, \\overline$\\overline{xyz}$, \\vec$\\vec x$以及\\overrightarrow$\\overrightarrow{xyz}$还有\\overleftrightarrow$\\overleftrightarrow{xyz}$. 对于点符号，例如$\\frac{d}{dx}x\\dot x=\\dot x^2+x\\ddot x$分别使用的是\\dot和\\ddot. 特殊符号转义，使用\\转义符：\\$$$$, \\{$\\{$, \\_$_$等。假如我们想要输出\\符号本身，使用\\backslash$\\backslash$，而\\\\被用于创建新的一行。 矩阵 使用\\begin{matrix}...\\end{matrix}表示矩阵。在\\begin和\\end之间放置矩阵元素。矩阵每一行用\\\\分隔，元素之间使用&amp;来分隔。例如： 1234567$$ \\begin&#123;matrix&#125; 1 &amp; x &amp; x^2 \\\\ 4 &amp; y &amp; y^2 \\\\ 7 &amp; z &amp; z^2 \\\\ \\end&#123;matrix&#125;$$ 得到： \\begin{matrix} 1&x&x^2\\\\ 4&y&y^2\\\\ 7&z&z^2\\\\ \\end{matrix}​ MathJax能够自动调整行和列的大小来自适应。 给矩阵增加括号使用上一节中的第5部分，或者将matrix替换成pmatrix$\\begin{pmatrix}1&amp;2\\\\3&amp;4\\\\ \\end{pmatrix}$, bmatrix$\\begin{bmatrix}1&amp;2\\\\3&amp;4\\\\ \\end{bmatrix}$, Bmatrix$\\begin{Bmatrix}1&amp;2\\\\3&amp;4\\\\ \\end{Bmatrix}$, vmatrix$\\begin{vmatrix}1&amp;2\\\\3&amp;4\\\\ \\end{vmatrix}$, Vmatrix$\\begin{Vmatrix}1&amp;2\\\\3&amp;4\\\\ \\end{Vmatrix}$. 使用\\cdots$\\cdots$, \\ddots$\\ddots$, \\vdots$\\vdots$, 来表示矩阵中被忽略的条目: 12345678$$\\begin&#123;pmatrix&#125;1&amp;a_1&amp;a_1^2&amp;\\cdots&amp;a_1^n\\\\1&amp;a_2&amp;a_2^2&amp;\\cdots&amp;a_2^n\\\\\\vdots&amp;\\vdots&amp;\\vodts&amp;ddots&amp;\\vdots\\\\1&amp;a_m&amp;a_m^2&amp;\\cdots&amp;a_m^n\\\\\\end&#123;pmatrix&#125;$$ \\begin{pmatrix} 1&a_1&a_1^2&\\cdots&a_1^n\\\\ 1&a_2&a_2^2&\\cdots&a_2^n\\\\ \\vdots&\\vdots&\\vdots&\\ddots&\\vdots\\\\ 1&a_m&a_m^2&\\cdots&a_m^n\\\\ \\end{pmatrix} 对于水平方向“增广“矩阵，用方括号或者圆括号将与之对应格式的表格括起来；详情见后文的数组一节。举例如下： \\left[ \\begin{array}{cc|c} 1&2&3\\\\ 4&5&6 \\end{array} \\right]表达式为: 12345678$$\\left[\\begin&#123;array&#125;&#123;cc|c&#125;1&amp;2&amp;3\\\\4&amp;5&amp;6\\end&#123;array&#125;\\right]$$ 对于垂直方向的“增广”矩阵，使用\\hline，例如： \\begin{pmatrix} a&b\\\\ c&d\\\\ \\hline 1&0\\\\ 0&1 \\end{pmatrix}表达式为: 123456789$$\\begin&#123;pmatrix&#125;a&amp;b\\\\c&amp;d\\\\\\hline1&amp;0\\\\0&amp;1\\end&#123;pmatrix&#125;$$ 对于小行内矩阵，使用\\bigl(\\begin{smallmatrix}...\\end{smallmatrix}\\bigr), 例如：\\bigl(\\begin{smallmatrix}a&amp;b\\\\c&amp;d\\end{smallmatrix}\\bigr)$\\bigl(\\begin{smallmatrix}a&amp;b\\\\c&amp;d\\end{smallmatrix}\\bigr)$.","text":"更多内容，请看这里.本文是本人对其中部分的翻译，若有疏漏，还请联系作者更正。 (德语版本: Deutsch: MathJax: LaTeX Basic Tutorial und Referenz) 基础部分 对于行内公式，使用$...$括起来。对于整行显示公式，使用$$...$$括起来。 比方说，键入$\\sum_{i=0}^n i^2 = \\frac{(n^2+n)(2n+1)}{6}$可以在一行内嵌入公式$\\sum_{i=0}^n i^2 = \\frac{(n^2+n)(2n+1)}{6}$ （这就是inline模式了），或者我们键入$$\\sum_{i=0}^n i^2 = \\frac{(n^2+n)(2n+1)}{6}$$就可以显示： \\sum_{i=0}^n i^2 = \\frac{(n^2+n)(2n+1)}{6}（这就是display模式了）。 对于希腊字母，使用诸如\\alpha, \\beta, …, \\omega :$\\alpha, \\beta, …, \\omega$.大写希腊字母，使用诸如\\Gamma, \\Delta, …, \\Omega: $\\Gamma, \\Delta, …, \\Omega$. 对于上标还有下标，使用^和_.比如x_i^2:$x_i^2 $,\\log_2 x:$\\log_2 x$. 组（Group）.被一对{…}包裹的部分就是一个组，里面可以是一个单一的字符，也可以是一串公式。比如输入10^10,得到的是$10^10$,而不是我们想要的10^{10}:$10^{10}$.使用花括号来对公式进行划界，否则例如:x^5^6就是一种错误的表示。{x^y}^z得到${x^y}^z$,而x^{y^z}得到$x^{y^z}$.还有比方说x_i^2:$x_i^2$,而x_{i^2}:$x_{i^2}$. 括号。普通()[]分别生成圆括号和方括号。使用\\{和\\}来生成花括号：$\\{ \\}$.但是这样的括号并不能随着内部公式的高度来调整，所以写(\\frac{\\sqrt x}{y^3})时括号就显得有点装不下了$(\\frac{\\sqrt{x}}{y^3})$.使用\\left(和\\right)能使得括号根据括起来的公式自动调整\\left( \\frac{\\sqrt x)}{y^3} \\right):$\\left( \\frac{\\sqrt x}{y^3} \\right)$. \\left和\\right可以应用于下列括号：(和)$\\left(x \\right)$, [和]$\\left[ x \\right]$. \\{和\\}，如\\left\\{x\\right\\}, $\\left\\{x\\right\\}$. |如\\left| x \\right|$\\left| x \\right|$, \\vert$\\left\\vert x \\right\\vert$,\\Vert$\\left\\Vert x \\right\\Vert$, \\langle和\\rangle$\\left\\langle x \\right\\rangle$, \\lcei;和\\rceil$\\left\\lceil x \\right\\rceil$, \\lfloor和\\rfloor$\\left\\lfloor x \\right\\rfloor$, \\middle可以用了增加额外的分界。此外有隐藏括号，用.来标记: \\left.\\frac12\\right\\rbrace显示$\\left.\\frac12\\right\\rbrace$. 手动调整括号大小\\Biggl(\\biggl(\\Bigl(\\bigl(x\\bigr)\\Bigr)\\biggl)\\Biggl)显示为：$\\Biggl(\\biggl(\\Bigl(\\bigl(x\\bigr)\\Bigr)\\biggl)\\Biggl)$. 累加与积分（sum and integral）\\sum与\\int表示; 上标为上界，下标为下界，所以例如\\sum_x^n$\\sum_1^n$.若界超过一个字符表示，不要忘记使用{…}, 例如\\sum_{i=0}^\\infty i^2$\\sum_{i=0}^\\infty i^2$. 类似的还有累乘\\prod$\\prod$, 积分\\int$\\int$, 并集\\bigcup$\\bigcup$, 交集\\bigcap$\\bigcap$, 二重积分\\iint$\\iint$, 三重积分\\iiint$\\iiint$. 分数（fraction），创建分数的三种方法. \\frac ab得到$\\frac ab$;对于更复杂分子和分母使用{…}: \\frac{a+1}{b+1}$\\frac{a+1}{b+1}$. 如果分数分子分母实在是复杂，我们可能会使用\\over，将一个组分开：{a+1 \\over b+1}${a+1 \\over b+1}$. 对于连续的多个分数\\cfrac{a}{b}$\\cfrac{a}{b}$能派上用场。更多细节，见[后文]。 字体 “Blackboard bold”,使用\\mathbb或者Bbb：$\\Bbb{ABCDEFGHIJKLMNOPQRSTUVWXYZ}$$\\mathbb{abcdefghijklmnopqrstuvwxyz} $ “Boldface”,使用\\mathbf：$\\mathbf {ABCDEFGHIJKLMNOPQRSTUVWXYZ}$$\\mathbf {abcdefghijklmnopqrstuvwxyz} $ “Typewriter”(打字机体),使用\\mathtt：$\\mathtt {ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ}$$\\mathtt{abcdefghijklmnopqrstuvwxyz}$ “Roman”(罗马体), 使用\\mathrm: $\\mathrm ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ $$\\mathrm{abcdefghijklmnopqrstuvwxyz}$ “Sans-serif”, 使用\\mathsf:$\\mathsf {ABCDEFGHIJKLMNOPQRSTUVWXYZ}$$\\mathsf abcdefghijklmnopqrstuvwxyz $ “Calligraphic”, 使用\\mathcal:$\\mathcal {ABCDEFGHIJKLMNOPQRSTUVWXYZ }$ “Script”(手写体), 使用\\mathscr: $\\mathscr {ABCDEFGHIJKLMNOPQRSTUVWXYZ} $ “Fraktur”(古德语体), 使用\\mathfrak: $\\mathfrak{ABCDEFGHIJKLMNOPQRSTUVWXYZ }$$\\mathfrak {abcdefghijklmnopqrstuvwxyz} $ 开方，\\sqrt,能根据根号内容调整：\\sqrt{x^3}$\\sqrt{x^3}$;$\\sqrt[3]{\\frac xy}$$\\sqrt[3]{\\frac xy}$.对于更复杂的表达使用如{...}^{1/2}表示，${x}^{1/2}$和$\\sqrt{x}$一样. 特殊的函数，诸如，极限“lim”, 正弦“sin”, 最大值“max”, 自然对数”ln”等通常以罗马字体代替斜体来显示。比如使用\\lim,\\sin等，来显示\\sin$\\sin x​$, 而不是sin x$sin x​$.使用下标来对\\lim进行标注：\\lim_{x\\to0}显示$\\lim_{x\\to0}​$. 此外有很多的特别的标记符号，部分符号列表参考这里，完整的符号列表参考这里.最常用的如下： 比较，\\lt \\gt \\le \\leq \\leqq \\leqslant \\ge \\geq \\geqq\\geqslant \\neq$\\lt \\gt \\le \\leq \\leqq \\leqslant \\ge \\geq \\geqq\\geqslant \\neq$. 可以使用\\not给任何符号加上一道斜线\\not\\lt$\\not\\lt$, 通常这样效果并不佳。 + - \\times \\div \\pm \\mp$+-\\times \\div \\pm \\mp $.\\cdot中心点，$x\\cdot y$ 集合，\\cup \\cap \\setminus \\subset \\subseteq \\subsetneq \\supset \\in \\notin \\emptyset \\varnothing, $\\cup \\cap \\setminus \\subset \\subseteq \\subsetneq \\supset \\in \\notin \\emptyset \\varnothing $ {n+1 \\choose 2k}或\\binom{n+1}{2k}$\\binom{n+1}{2k} $ 箭头，\\to \\rightarrow \\leftarrow \\Rightarrow \\Leftarrow \\mapsto$\\to \\rightarrow \\leftarrow \\Rightarrow \\Leftarrow \\mapsto $ 逻辑，\\land \\lor \\lnot \\forall \\exists \\top \\bot \\vdash \\vDash$\\land \\lor \\lnot \\forall \\exists \\top \\bot \\vdash \\vDash $ 形状，\\star \\ast \\oplus \\circ \\bullet$\\star \\ast \\oplus \\circ \\bullet $ \\approx \\sim \\simeq \\cong \\equiv \\prec \\lhd$\\approx \\sim \\simeq \\cong \\equiv \\prec \\lhd $ \\infty \\aleph_0$\\infty \\aleph_0 $\\nabla \\partial$\\nabla \\partial$\\Im \\Re$\\Im \\Re$ 对于取模相等使用\\pmod例如：a\\equiv b\\pmod n$a\\equiv b\\pmod n$ $a_1, a_2, \\ldots a_n$使用\\ldots; $a_1+a_2+\\cdots+a_n$使用\\cdots 一些希腊字母有多种形式：比如\\epsilon和\\varepsilon$\\epsilon \\varepsilon$, \\phi \\varphi$\\phi \\varphi$,等。手写体小写字母l\\ell$\\ell$ Detexif能将你所绘制的图形识别成与之接近的$\\TeX$符号。此外更多详情欢迎查看MathJax.org以及 list of currently supported $\\LaTeX$ commands 和$\\TeX$Commands Available in MathJax. 空格。在公式之间添加更多的空格数，不会增加显示的空格宽度，a b和a b都会显示$a b$.增加更多空格：\\,增加小空格$a\\,b$;\\;增加更宽一点的空格$a\\;b$;更宽的空格使用\\quad$a\\quad b$和\\qquad$a\\qquad b$. 增加纯文本，使用\\text{...}:$\\left\\{ x\\in s| \\text{ x is exatra large}\\right\\}$.在\\text{...}中亦可使用$...$. 音标和变音符号，\\hat对单个标记加...帽，对公式加帽使用\\widehat$\\widehat{xyz}$,不过如果太宽的话看起来就有点哈巴了。类似的\\bar$\\bar{x}$, \\overline$\\overline{xyz}$, \\vec$\\vec x$以及\\overrightarrow$\\overrightarrow{xyz}$还有\\overleftrightarrow$\\overleftrightarrow{xyz}$. 对于点符号，例如$\\frac{d}{dx}x\\dot x=\\dot x^2+x\\ddot x$分别使用的是\\dot和\\ddot. 特殊符号转义，使用\\转义符：\\$$$$, \\{$\\{$, \\_$_$等。假如我们想要输出\\符号本身，使用\\backslash$\\backslash$，而\\\\被用于创建新的一行。 矩阵 使用\\begin{matrix}...\\end{matrix}表示矩阵。在\\begin和\\end之间放置矩阵元素。矩阵每一行用\\\\分隔，元素之间使用&amp;来分隔。例如： 1234567$$ \\begin&#123;matrix&#125; 1 &amp; x &amp; x^2 \\\\ 4 &amp; y &amp; y^2 \\\\ 7 &amp; z &amp; z^2 \\\\ \\end&#123;matrix&#125;$$ 得到： \\begin{matrix} 1&x&x^2\\\\ 4&y&y^2\\\\ 7&z&z^2\\\\ \\end{matrix}​ MathJax能够自动调整行和列的大小来自适应。 给矩阵增加括号使用上一节中的第5部分，或者将matrix替换成pmatrix$\\begin{pmatrix}1&amp;2\\\\3&amp;4\\\\ \\end{pmatrix}$, bmatrix$\\begin{bmatrix}1&amp;2\\\\3&amp;4\\\\ \\end{bmatrix}$, Bmatrix$\\begin{Bmatrix}1&amp;2\\\\3&amp;4\\\\ \\end{Bmatrix}$, vmatrix$\\begin{vmatrix}1&amp;2\\\\3&amp;4\\\\ \\end{vmatrix}$, Vmatrix$\\begin{Vmatrix}1&amp;2\\\\3&amp;4\\\\ \\end{Vmatrix}$. 使用\\cdots$\\cdots$, \\ddots$\\ddots$, \\vdots$\\vdots$, 来表示矩阵中被忽略的条目: 12345678$$\\begin&#123;pmatrix&#125;1&amp;a_1&amp;a_1^2&amp;\\cdots&amp;a_1^n\\\\1&amp;a_2&amp;a_2^2&amp;\\cdots&amp;a_2^n\\\\\\vdots&amp;\\vdots&amp;\\vodts&amp;ddots&amp;\\vdots\\\\1&amp;a_m&amp;a_m^2&amp;\\cdots&amp;a_m^n\\\\\\end&#123;pmatrix&#125;$$ \\begin{pmatrix} 1&a_1&a_1^2&\\cdots&a_1^n\\\\ 1&a_2&a_2^2&\\cdots&a_2^n\\\\ \\vdots&\\vdots&\\vdots&\\ddots&\\vdots\\\\ 1&a_m&a_m^2&\\cdots&a_m^n\\\\ \\end{pmatrix} 对于水平方向“增广“矩阵，用方括号或者圆括号将与之对应格式的表格括起来；详情见后文的数组一节。举例如下： \\left[ \\begin{array}{cc|c} 1&2&3\\\\ 4&5&6 \\end{array} \\right]表达式为: 12345678$$\\left[\\begin&#123;array&#125;&#123;cc|c&#125;1&amp;2&amp;3\\\\4&amp;5&amp;6\\end&#123;array&#125;\\right]$$ 对于垂直方向的“增广”矩阵，使用\\hline，例如： \\begin{pmatrix} a&b\\\\ c&d\\\\ \\hline 1&0\\\\ 0&1 \\end{pmatrix}表达式为: 123456789$$\\begin&#123;pmatrix&#125;a&amp;b\\\\c&amp;d\\\\\\hline1&amp;0\\\\0&amp;1\\end&#123;pmatrix&#125;$$ 对于小行内矩阵，使用\\bigl(\\begin{smallmatrix}...\\end{smallmatrix}\\bigr), 例如：\\bigl(\\begin{smallmatrix}a&amp;b\\\\c&amp;d\\end{smallmatrix}\\bigr)$\\bigl(\\begin{smallmatrix}a&amp;b\\\\c&amp;d\\end{smallmatrix}\\bigr)$. 公式对齐我们经常需要一些列的公式进行对齐。使用\\begin{align}...\\end{align},每一行需要使用\\\\作为结尾，并且在要对齐的位置要有特殊的符号，通常紧接在等于符号之前。 举例： \\begin{align} \\sqrt{37} & = \\sqrt{\\frac{73^2-1}{12^2}} \\\\ & = \\sqrt{\\frac{73^2}{12^2}\\cdot\\frac{73^2-1}{73^2}} \\\\ & = \\sqrt{\\frac{73^2}{12^2}}\\sqrt{\\frac{73^2-1}{73^2}} \\\\ & = \\frac{73}{12}\\sqrt{1 - \\frac{1}{73^2}} \\\\ & \\approx \\frac{73}{12}\\left(1 - \\frac{1}{2\\cdot73^2}\\right) \\end{align}表达式为： 1234567\\begin&#123;align&#125;\\sqrt&#123;37&#125; &amp; = \\sqrt&#123;\\frac&#123;73^2-1&#125;&#123;12^2&#125;&#125; \\\\ &amp; = \\sqrt&#123;\\frac&#123;73^2&#125;&#123;12^2&#125;\\cdot\\frac&#123;73^2-1&#125;&#123;73^2&#125;&#125; \\\\ &amp; = \\sqrt&#123;\\frac&#123;73^2&#125;&#123;12^2&#125;&#125;\\sqrt&#123;\\frac&#123;73^2-1&#125;&#123;73^2&#125;&#125; \\\\ &amp; = \\frac&#123;73&#125;&#123;12&#125;\\sqrt&#123;1 - \\frac&#123;1&#125;&#123;73^2&#125;&#125; \\\\ &amp; \\approx \\frac&#123;73&#125;&#123;12&#125;\\left(1 - \\frac&#123;1&#125;&#123;2\\cdot73^2&#125;\\right)\\end&#123;align&#125; 通常用来限界显示的$$符号这里可能被忽略。 符号通常，为了查找某个特定的符号我们不得不在一张巨长的表中搜索（有时可以用Ctrl+F），比方说\\Psi$\\Psi$, \\delta$\\delta$, \\zeta$\\zeta$, \\geq$\\geq$, \\subseteq$\\subseteq$$\\dots$证明找符号这件事很让人恼火并且耗时。复杂的$\\LaTeX$写起来费劲，看着也费劲。这就是为什么强烈推荐$\\LaTeX$手写符号识别了： 这里访问$\\mathrm{Detexify}^2$. 分条件定义（分段函数）使用\\begin{cases}...\\end{cases}. 每个条件使用一个\\\\，使用&amp;置于要对齐部分之前。 例如，我通过书写： 12345f(x)=\\begin&#123;cases&#125;n/2,&amp;\\text&#123;if $n$ is even&#125;\\\\3n+1,&amp;\\text&#123;if $n$ is odd&#125;\\end&#123;cases&#125; 可以得到： f(x)= \\begin{cases} n/2,&\\text{if $n$ is even}\\\\ 3n+1,&\\text{if $n$ is odd} \\end{cases}而想要括号置于右侧如： \\left. \\begin{array}{l} \\text{if $n$ is even:}&n/2\\\\ \\text{if $n$ is odd:}&3n+1 \\end{array} \\right\\} =f(n)是通过书写: 1234567\\left.\\begin&#123;array&#125;&#123;l&#125;\\text&#123;if $n$ is even:&#125;&amp;n/2\\\\\\text&#123;if $n$ is odd:&#125;&amp;3n+1\\end&#123;array&#125;\\right\\&#125;=f(n) 得到的。 让不同条件间空白增大，使用\\\\[2ex]代替\\\\.例如想要得到： f(n) = \\begin{cases} \\frac{n}{2}, & \\text{if $n$ is even} \\\\[2ex] 3n+1, & \\text{if $n$ is odd} \\end{cases}通过书写如下表达得到： 12345f(n) =\\begin&#123;cases&#125;\\frac&#123;n&#125;&#123;2&#125;, &amp; \\text&#123;if $n$ is even&#125; \\\\[2ex]3n+1, &amp; \\text&#123;if $n$ is odd&#125;\\end&#123;cases&#125; 数组相较于纯文本，有时我们阅读图表更容易。数组和表格可以通过array建立。在\\begin{array}之后列出每一列的格式，c代表列column，r代表右对齐，l代表左对齐，|代表垂直分隔线。和矩阵类似，各个单元格也是通过&amp;来分隔的，每一行末尾加上\\\\.使用\\hline可以在当前行之前加上一道水平线。 举例： \\begin{array}{c|lcr} n & \\text{Left} & \\text{Center} & \\text{Right} \\\\ \\hline 1 & 0.24 & 1 & 125 \\\\ 2 & -1 & 189 & -8 \\\\ 3 & -20 & 2000 & 1+10i \\end{array}123456789$$\\begin&#123;array&#125;&#123;c|lcr&#125;n &amp; \\text&#123;Left&#125; &amp; \\text&#123;Center&#125; &amp; \\text&#123;Right&#125; \\\\\\hline1 &amp; 0.24 &amp; 1 &amp; 125 \\\\2 &amp; -1 &amp; 189 &amp; -8 \\\\3 &amp; -20 &amp; 2000 &amp; 1+10i\\end&#123;array&#125;$$ 数组进行嵌套可以组成表格数组。 举例： % outer vertical array of arrays \\begin{array}{c} % inner horizontal array of arrays \\begin{array}{cc} % inner array of minimum values \\begin{array}{c|cccc} \\text{min} & 0 & 1 & 2 & 3\\\\ \\hline 0 & 0 & 0 & 0 & 0\\\\ 1 & 0 & 1 & 1 & 1\\\\ 2 & 0 & 1 & 2 & 2\\\\ 3 & 0 & 1 & 2 & 3 \\end{array} & % inner array of maximum values \\begin{array}{c|cccc} \\text{max}&0&1&2&3\\\\ \\hline 0 & 0 & 1 & 2 & 3\\\\ 1 & 1 & 1 & 2 & 3\\\\ 2 & 2 & 2 & 2 & 3\\\\ 3 & 3 & 3 & 3 & 3 \\end{array} \\end{array} \\\\ % inner array of delta values \\begin{array}{c|cccc} \\Delta&0&1&2&3\\\\ \\hline 0 & 0 & 1 & 2 & 3\\\\ 1 & 1 & 0 & 1 & 2\\\\ 2 & 2 & 1 & 0 & 1\\\\ 3 & 3 & 2 & 1 & 0 \\end{array} \\end{array}1234567891011121314151617181920212223242526272829303132333435% outer vertical array of arrays\\begin&#123;array&#125;&#123;c&#125;% inner horizontal array of arrays\\begin&#123;array&#125;&#123;cc&#125;% inner array of minimum values\\begin&#123;array&#125;&#123;c|cccc&#125;\\text&#123;min&#125; &amp; 0 &amp; 1 &amp; 2 &amp; 3\\\\\\hline0 &amp; 0 &amp; 0 &amp; 0 &amp; 0\\\\1 &amp; 0 &amp; 1 &amp; 1 &amp; 1\\\\2 &amp; 0 &amp; 1 &amp; 2 &amp; 2\\\\3 &amp; 0 &amp; 1 &amp; 2 &amp; 3\\end&#123;array&#125;&amp;% inner array of maximum values\\begin&#123;array&#125;&#123;c|cccc&#125;\\text&#123;max&#125;&amp;0&amp;1&amp;2&amp;3\\\\\\hline0 &amp; 0 &amp; 1 &amp; 2 &amp; 3\\\\1 &amp; 1 &amp; 1 &amp; 2 &amp; 3\\\\2 &amp; 2 &amp; 2 &amp; 2 &amp; 3\\\\3 &amp; 3 &amp; 3 &amp; 3 &amp; 3\\end&#123;array&#125;\\end&#123;array&#125;\\\\% inner array of delta values\\begin&#123;array&#125;&#123;c|cccc&#125;\\Delta&amp;0&amp;1&amp;2&amp;3\\\\\\hline0 &amp; 0 &amp; 1 &amp; 2 &amp; 3\\\\1 &amp; 1 &amp; 0 &amp; 1 &amp; 2\\\\2 &amp; 2 &amp; 1 &amp; 0 &amp; 1\\\\3 &amp; 3 &amp; 2 &amp; 1 &amp; 0\\end&#123;array&#125;\\end&#123;array&#125; “挑剔”的间距问题通常这些问题不会影响公式的正确性，但是可能会对公式的美观与否产生影响。初学者可以忽略这些建议；其余则“有则改之无则加勉”，也有可能没人在意这个问题🙄。 不要在自然对数或者积分中使用\\frac；这看起来丑不说还很迷，所以在专业的数学排版中都会尽量避免这样做。正确的做法是水平一行用斜杠表示分数： \\begin{array}{c|c} \\mathrm{Bad}&\\mathrm{Better}\\\\ \\hline\\\\ e^{i\\frac{\\pi}2} \\quad e^{\\frac{i\\pi}2}& e^{i\\pi/2} \\\\ \\int_{-\\frac\\pi2}^\\frac\\pi2 \\sin x\\,dx & \\int_{-\\pi/2}^{\\pi/2}\\sin x\\,dx \\\\ \\end{array}123456\\begin&#123;array&#125;&#123;c|c&#125;\\mathrm&#123;Bad&#125;&amp;\\mathrm&#123;Better&#125;\\\\\\hline\\\\e^&#123;i\\frac&#123;\\pi&#125;2&#125; \\quad e^&#123;\\frac&#123;i\\pi&#125;2&#125;&amp; e^&#123;i\\pi/2&#125; \\\\\\int_&#123;-\\frac\\pi2&#125;^\\frac\\pi2 \\sin x\\,dx &amp; \\int_&#123;-\\pi/2&#125;^&#123;\\pi/2&#125;\\sin x\\,dx \\\\\\end&#123;array&#125; |符号作为分隔符是间距很古怪，例如在集合式中。使用\\mid来分隔： \\begin{array}{cc} \\mathrm{Bad} & \\mathrm{Better} \\\\ \\hline \\\\ \\{x|x^2\\in\\Bbb Z\\} & \\{x\\mid x^2\\in\\Bbb Z\\} \\\\ \\end{array}12345\\begin&#123;array&#125;&#123;cc&#125;\\mathrm&#123;Bad&#125; &amp; \\mathrm&#123;Better&#125; \\\\\\hline \\\\\\&#123;x|x^2\\in\\Bbb Z\\&#125; &amp; \\&#123;x\\mid x^2\\in\\Bbb Z\\&#125; \\\\\\end&#123;array&#125; 对于双重积分，三重积分不要使用\\int\\int或者\\int\\int\\int，而应使用特别的形式\\iint以及\\iiint: \\begin{array}{cc} \\mathrm{Bad} & \\mathrm{Better} \\\\ \\hline \\\\ \\int\\int_S f(x)\\,dy\\,dx & \\iint_S f(x)\\,dy\\,dx \\\\ \\int\\int\\int_V f(x)\\,dz\\,dy\\,dx & \\iiint_V f(x)\\,dz\\,dy\\,dx \\end{array}123456\\begin&#123;array&#125;&#123;cc&#125;\\mathrm&#123;Bad&#125; &amp; \\mathrm&#123;Better&#125; \\\\\\hline \\\\\\int\\int_S f(x)\\,dy\\,dx &amp; \\iint_S f(x)\\,dy\\,dx \\\\\\int\\int\\int_V f(x)\\,dz\\,dy\\,dx &amp; \\iiint_V f(x)\\,dz\\,dy\\,dx\\end&#123;array&#125; 使用\\,在微分符号前插入小空格；没有的话$\\TeX$会把它们挤作一团: \\begin{array}{cc} \\mathrm{Bad} & \\mathrm{Better} \\\\ \\hline \\\\ \\iiint_V f(x)dz dy dx & \\iiint_V f(x)\\,dz\\,dy\\,dx \\end{array}12345\\begin&#123;array&#125;&#123;cc&#125;\\mathrm&#123;Bad&#125; &amp; \\mathrm&#123;Better&#125; \\\\\\hline \\\\\\iiint_V f(x)dz dy dx &amp; \\iiint_V f(x)\\,dz\\,dy\\,dx\\end&#123;array&#125; “划掉”在我们要取消的首个表达式使用\\require{cancel};一页只需要这样做一次即可。然后就可以使用如下： \\require{cancel} \\begin{array}{rl} \\mathrm{Writing}&\\mathrm{Result}\\\\ \\hline \\verb|y+\\cancel{x}| & y+\\cancel{x}\\\\ \\verb|\\cancel{y+x}| & \\cancel{y+x}\\\\ \\verb|y+\\bcancel{x}| & y+\\bcancel{x}\\\\ \\verb|y+\\xcancel{x}| & y+\\xcancel{x}\\\\ \\verb|y+\\cancelto{0}{x}| & y+\\cancelto{0}{x}\\\\ \\verb+\\frac{1\\cancel9}{\\cancel95} = \\frac15+& \\frac{1\\cancel9}{\\cancel95} = \\frac15 \\\\ \\end{array}1234567891011\\require&#123;cancel&#125;\\begin&#123;array&#125;&#123;rl&#125;\\mathrm&#123;Writing&#125;&amp;\\mathrm&#123;Result&#125;\\\\\\hline\\verb|y+\\cancel&#123;x&#125;| &amp; y+\\cancel&#123;x&#125;\\\\\\verb|\\cancel&#123;y+x&#125;| &amp; \\cancel&#123;y+x&#125;\\\\\\verb|y+\\bcancel&#123;x&#125;| &amp; y+\\bcancel&#123;x&#125;\\\\\\verb|y+\\xcancel&#123;x&#125;| &amp; y+\\xcancel&#123;x&#125;\\\\\\verb|y+\\cancelto&#123;0&#125;&#123;x&#125;| &amp; y+\\cancelto&#123;0&#125;&#123;x&#125;\\\\\\verb+\\frac&#123;1\\cancel9&#125;&#123;\\cancel95&#125; = \\frac15+&amp; \\frac&#123;1\\cancel9&#125;&#123;\\cancel95&#125; = \\frac15 \\\\\\end&#123;array&#125; 使用\\require{enclose}产生以下表达： \\require{enclose}\\begin{array}{rl} \\verb|\\enclose{horizontalstrike}{x+y}| & \\enclose{horizontalstrike}{x+y}\\\\ \\verb|\\enclose{verticalstrike}{\\frac xy}| & \\enclose{verticalstrike}{\\frac xy}\\\\ \\verb|\\enclose{updiagonalstrike}{x+y}| & \\enclose{updiagonalstrike}{x+y}\\\\ \\verb|\\enclose{downdiagonalstrike}{x+y}| & \\enclose{downdiagonalstrike}{x+y}\\\\ \\verb|\\enclose{horizontalstrike,updiagonalstrike}{x+y}| & \\enclose{horizontalstrike,updiagonalstrike}{x+y}\\\\ \\end{array}1234567\\require&#123;enclose&#125;\\begin&#123;array&#125;&#123;rl&#125;\\verb|\\enclose&#123;horizontalstrike&#125;&#123;x+y&#125;| &amp; \\enclose&#123;horizontalstrike&#125;&#123;x+y&#125;\\\\\\verb|\\enclose&#123;verticalstrike&#125;&#123;\\frac xy&#125;| &amp; \\enclose&#123;verticalstrike&#125;&#123;\\frac xy&#125;\\\\\\verb|\\enclose&#123;updiagonalstrike&#125;&#123;x+y&#125;| &amp; \\enclose&#123;updiagonalstrike&#125;&#123;x+y&#125;\\\\\\verb|\\enclose&#123;downdiagonalstrike&#125;&#123;x+y&#125;| &amp; \\enclose&#123;downdiagonalstrike&#125;&#123;x+y&#125;\\\\\\verb|\\enclose&#123;horizontalstrike,updiagonalstrike&#125;&#123;x+y&#125;| &amp; \\enclose&#123;horizontalstrike,updiagonalstrike&#125;&#123;x+y&#125;\\\\\\end&#123;array&#125; \\enclose也可以生成封闭的框，圆以及其他标记；完整列表请查看MathML menclose documentation. 方程组 使用\\begin{array}...\\end{array}和\\left\\{...\\right..举例： \\left\\{ \\begin{array}{c} a_1x+b_1y+c_1z=d_1\\\\ a_2x+b_2y+c_2z=d_2\\\\ a_3x+b_3y+c_3z=d_3\\\\ \\end{array} \\right.1234567\\left\\&#123;\\begin&#123;array&#125;&#123;c&#125;a_1x+b_1y+c_1z=d_1\\\\a_2x+b_2y+c_2z=d_2\\\\a_3x+b_3y+c_3z=d_3\\\\\\end&#123;array&#125;\\right. 替代方法，也可以使用\\begin{cases}...\\end{cases}.相同的方程组： \\begin{cases} a_1x+b_1y+c_1z=d_1\\\\ a_2x+b_2y+c_2z=d_2\\\\ a_3x+b_3y+c_3z=d_3\\\\ \\end{cases}12345\\begin&#123;cases&#125;a_1x+b_1y+c_1z=d_1\\\\a_2x+b_2y+c_2z=d_2\\\\a_3x+b_3y+c_3z=d_3\\\\\\end&#123;cases&#125; 对齐=号，使用\\begin{aligned}...\\end{aligned}和\\left\\{...\\right.： \\left\\{ \\begin{aligned} a_1x+b_1y+c_1z &=d_1+e_1 \\\\ a_2x+b_2y&=d_2 \\\\ a_3x+b_3y+c_3z &=d_3 \\end{aligned} \\right.123456789$$\\left\\&#123;\\begin&#123;aligned&#125; a_1x+b_1y+c_1z &amp;=d_1+e_1 \\\\ a_2x+b_2y&amp;=d_2 \\\\ a_3x+b_3y+c_3z &amp;=d_3 \\end&#123;aligned&#125; \\right. $$ 对齐=符号和元素： \\left\\{\\begin{array}{ll} a_1x+b_1y+c_1z &=d_1+e_1 \\\\ a_2x+b_2y &=d_2 \\\\ a_3x+b_3y+c_3z &=d_3 \\end{array} \\right.12345678$$\\left\\&#123;\\begin&#123;array&#125;&#123;ll&#125;a_1x+b_1y+c_1z &amp;=d_1+e_1 \\\\ a_2x+b_2y &amp;=d_2 \\\\ a_3x+b_3y+c_3z &amp;=d_3 \\end&#123;array&#125; \\right.$$ 使用array,设置l左对齐。 方程垂直间距使用\\\\[2ex]代替\\\\ \\begin{cases} a_1x+b_1y+c_1z=\\frac{p_1}{q_1} \\\\[2ex] a_2x+b_2y+c_2z=\\frac{p_2}{q_2} \\\\[2ex] a_3x+b_3y+c_3z=\\frac{p_3}{q_3} \\end{cases}123456$$\\begin&#123;cases&#125;a_1x+b_1y+c_1z=d_1 \\\\[2ex] a_2x+b_2y+c_2z=d_2 \\\\[2ex] a_3x+b_3y+c_3z=d_3\\end&#123;cases&#125;$$ 颜色命名的颜色取决于浏览器；如果浏览器无法识别特定的颜色，会返回默认的黑色。1234567891011121314151617181920212223$$\\begin&#123;array&#125;&#123;|rc|&#125;\\hline\\verb+\\color&#123;black&#125;&#123;text&#125;+ &amp; \\color&#123;black&#125;&#123;text&#125; \\\\\\verb+\\color&#123;gray&#125;&#123;text&#125;+ &amp; \\color&#123;gray&#125;&#123;text&#125; \\\\\\verb+\\color&#123;silver&#125;&#123;text&#125;+ &amp; \\color&#123;silver&#125;&#123;text&#125; \\\\\\verb+\\color&#123;white&#125;&#123;text&#125;+ &amp; \\color&#123;white&#125;&#123;text&#125; \\\\\\hline\\verb+\\color&#123;maroon&#125;&#123;text&#125;+ &amp; \\color&#123;maroon&#125;&#123;text&#125; \\\\\\verb+\\color&#123;red&#125;&#123;text&#125;+ &amp; \\color&#123;red&#125;&#123;text&#125; \\\\\\verb+\\color&#123;yellow&#125;&#123;text&#125;+ &amp; \\color&#123;yellow&#125;&#123;text&#125; \\\\\\verb+\\color&#123;lime&#125;&#123;text&#125;+ &amp; \\color&#123;lime&#125;&#123;text&#125; \\\\\\verb+\\color&#123;olive&#125;&#123;text&#125;+ &amp; \\color&#123;olive&#125;&#123;text&#125; \\\\\\verb+\\color&#123;green&#125;&#123;text&#125;+ &amp; \\color&#123;green&#125;&#123;text&#125; \\\\\\verb+\\color&#123;teal&#125;&#123;text&#125;+ &amp; \\color&#123;teal&#125;&#123;text&#125; \\\\\\verb+\\color&#123;aqua&#125;&#123;text&#125;+ &amp; \\color&#123;aqua&#125;&#123;text&#125; \\\\\\verb+\\color&#123;blue&#125;&#123;text&#125;+ &amp; \\color&#123;blue&#125;&#123;text&#125; \\\\\\verb+\\color&#123;navy&#125;&#123;text&#125;+ &amp; \\color&#123;navy&#125;&#123;text&#125; \\\\\\verb+\\color&#123;purple&#125;&#123;text&#125;+ &amp; \\color&#123;purple&#125;&#123;text&#125; \\\\ \\verb+\\color&#123;fuchsia&#125;&#123;text&#125;+ &amp; \\color&#123;magenta&#125;&#123;text&#125; \\\\\\hline\\end&#123;array&#125;$$ 颜色也可以设置成rgb形式，其中$r$,$g$,$b$范围为0-9,a-f表示红色，绿色和蓝色的强度表示为十进制范围是0-15, a=10, …, f=15.举例： 12345678910111213141516171819202122232425262728293031323334$$\\begin&#123;array&#125;&#123;|rrrrrrrr|&#125;\\hline\\verb+#000+ &amp; \\color&#123;#000&#125;&#123;text&#125; &amp; &amp; &amp;\\verb+#00F+ &amp; \\color&#123;#00F&#125;&#123;text&#125; &amp; &amp; \\\\&amp; &amp; \\verb+#0F0+ &amp; \\color&#123;#0F0&#125;&#123;text&#125; &amp;&amp; &amp; \\verb+#0FF+ &amp; \\color&#123;#0FF&#125;&#123;text&#125;\\\\\\verb+#F00+ &amp; \\color&#123;#F00&#125;&#123;text&#125; &amp; &amp; &amp;\\verb+#F0F+ &amp; \\color&#123;#F0F&#125;&#123;text&#125; &amp; &amp; \\\\&amp; &amp; \\verb+#FF0+ &amp; \\color&#123;#FF0&#125;&#123;text&#125; &amp;&amp; &amp; \\verb+#FFF+ &amp; \\color&#123;#FFF&#125;&#123;text&#125;\\\\\\hline\\end&#123;array&#125;$$$$\\begin&#123;array&#125;&#123;|rrrrrrrr|&#125;\\hline\\verb+#000+ &amp; \\color&#123;#000&#125;&#123;text&#125; &amp; \\verb+#005+ &amp; \\color&#123;#005&#125;&#123;text&#125; &amp; \\verb+#00A+ &amp; \\color&#123;#00A&#125;&#123;text&#125; &amp; \\verb+#00F+ &amp; \\color&#123;#00F&#125;&#123;text&#125; \\\\\\verb+#500+ &amp; \\color&#123;#500&#125;&#123;text&#125; &amp; \\verb+#505+ &amp; \\color&#123;#505&#125;&#123;text&#125; &amp; \\verb+#50A+ &amp; \\color&#123;#50A&#125;&#123;text&#125; &amp; \\verb+#50F+ &amp; \\color&#123;#50F&#125;&#123;text&#125; \\\\\\verb+#A00+ &amp; \\color&#123;#A00&#125;&#123;text&#125; &amp; \\verb+#A05+ &amp; \\color&#123;#A05&#125;&#123;text&#125; &amp; \\verb+#A0A+ &amp; \\color&#123;#A0A&#125;&#123;text&#125; &amp; \\verb+#A0F+ &amp; \\color&#123;#A0F&#125;&#123;text&#125; \\\\\\verb+#F00+ &amp; \\color&#123;#F00&#125;&#123;text&#125; &amp; \\verb+#F05+ &amp; \\color&#123;#F05&#125;&#123;text&#125; &amp; \\verb+#F0A+ &amp; \\color&#123;#F0A&#125;&#123;text&#125; &amp; \\verb+#F0F+ &amp; \\color&#123;#F0F&#125;&#123;text&#125; \\\\\\hline\\verb+#080+ &amp; \\color&#123;#080&#125;&#123;text&#125; &amp; \\verb+#085+ &amp; \\color&#123;#085&#125;&#123;text&#125; &amp; \\verb+#08A+ &amp; \\color&#123;#08A&#125;&#123;text&#125; &amp; \\verb+#08F+ &amp; \\color&#123;#08F&#125;&#123;text&#125; \\\\\\verb+#580+ &amp; \\color&#123;#580&#125;&#123;text&#125; &amp; \\verb+#585+ &amp; \\color&#123;#585&#125;&#123;text&#125; &amp; \\verb+#58A+ &amp; \\color&#123;#58A&#125;&#123;text&#125; &amp; \\verb+#58F+ &amp; \\color&#123;#58F&#125;&#123;text&#125; \\\\\\verb+#A80+ &amp; \\color&#123;#A80&#125;&#123;text&#125; &amp; \\verb+#A85+ &amp; \\color&#123;#A85&#125;&#123;text&#125; &amp; \\verb+#A8A+ &amp; \\color&#123;#A8A&#125;&#123;text&#125; &amp; \\verb+#A8F+ &amp; \\color&#123;#A8F&#125;&#123;text&#125; \\\\\\verb+#F80+ &amp; \\color&#123;#F80&#125;&#123;text&#125; &amp; \\verb+#F85+ &amp; \\color&#123;#F85&#125;&#123;text&#125; &amp; \\verb+#F8A+ &amp; \\color&#123;#F8A&#125;&#123;text&#125; &amp; \\verb+#F8F+ &amp; \\color&#123;#F8F&#125;&#123;text&#125; \\\\\\hline\\verb+#0F0+ &amp; \\color&#123;#0F0&#125;&#123;text&#125; &amp; \\verb+#0F5+ &amp; \\color&#123;#0F5&#125;&#123;text&#125; &amp; \\verb+#0FA+ &amp; \\color&#123;#0FA&#125;&#123;text&#125; &amp; \\verb+#0FF+ &amp; \\color&#123;#0FF&#125;&#123;text&#125; \\\\\\verb+#5F0+ &amp; \\color&#123;#5F0&#125;&#123;text&#125; &amp; \\verb+#5F5+ &amp; \\color&#123;#5F5&#125;&#123;text&#125; &amp; \\verb+#5FA+ &amp; \\color&#123;#5FA&#125;&#123;text&#125; &amp; \\verb+#5FF+ &amp; \\color&#123;#5FF&#125;&#123;text&#125; \\\\\\verb+#AF0+ &amp; \\color&#123;#AF0&#125;&#123;text&#125; &amp; \\verb+#AF5+ &amp; \\color&#123;#AF5&#125;&#123;text&#125; &amp; \\verb+#AFA+ &amp; \\color&#123;#AFA&#125;&#123;text&#125; &amp; \\verb+#AFF+ &amp; \\color&#123;#AFF&#125;&#123;text&#125; \\\\\\verb+#FF0+ &amp; \\color&#123;#FF0&#125;&#123;text&#125; &amp; \\verb+#FF5+ &amp; \\color&#123;#FF5&#125;&#123;text&#125; &amp; \\verb+#FFA+ &amp; \\color&#123;#FFA&#125;&#123;text&#125; &amp; \\verb+#FFF+ &amp; \\color&#123;#FFF&#125;&#123;text&#125; \\\\\\hline\\end&#123;array&#125;$$ 修饰符（Additional decorations） 关键词 效果 表示法 \\overline $ \\overline A \\overline{AA} \\overline{AAA}$ \\overline A \\overline{AA} \\overline{AAA} \\underline $\\underline B \\underline{BB} \\underline{BBB}$ \\underline B \\underline{BB} \\underline{BBB} \\widetilde $\\widetilde C\\widetilde{CC} \\widetilde{CCC}$ \\widetilde C\\widetilde{CC} \\widetilde{CCC} \\widehat $\\widehat D\\widehat{DD}\\widehat{DDD}$ \\widehat D\\widehat{DD}\\widehat{DDD} \\fbox $\\fbox E\\fbox{EE}\\fbox{EEE}$ \\fbox E\\fbox{EE}\\fbox{EEE} \\underleftarrow变种，xleftarrow{} $\\underleftarrow F \\underleftarrow{FF} \\underleftarrow{FFF}$$\\xleftarrow{FFF}$ \\underleftarrow F \\underleftarrow{FF} \\underleftarrow{FFF} \\underrightarrow $\\underrightarrow G \\underrightarrow{GG} \\underrightarrow{GGG}$$\\xrightarrow{GGG}$ \\underrightarrow G \\underrightarrow{GG} \\underrightarrow{GGG} \\underleftrightarrow $\\underleftrightarrow H\\underleftrightarrow{HH}\\underleftrightarrow{HHH}$ \\underleftrightarrow H\\underleftrightarrow{HH}\\underleftrightarrow{HHH} \\overbrace $\\overbrace{(n - 2) + \\overbrace{(n - 1) + n} + (n + 2)}$ \\overbrace{(n - 2) + \\overbrace{(n - 1) + n } + (n + 2)} \\underbrace $\\underbrace{(n - 2) + \\underbrace{(n - 1) + n } + (n + 2)}$ \\underbrace{(n - 2) + \\underbrace{(n - 1) + n } + (n + 2)} overbrace和underbrace可以接受上标和下标来注解括号。例如：\\underbrace{a\\cdot a\\cdots a}_{b\\text{ times}}: $\\underbrace{a\\cdot a\\cdots a}_{b\\text{ times}} $ 注意：\\varliminf:$\\varliminf$和\\varlimsup:$\\varlimsup$有其特殊的标志。 注音符号\\check: $\\check I$ \\acute: $\\acute J$ \\grave: $\\grave K$ \\vec: $\\vec u \\vec{AB}$ \\bar: $\\bar z$ \\hat: $\\hat x$ \\tilde: $\\tilde x$ \\dot \\ddot \\dddot: $\\dot x\\ddot x\\dddot x$ \\mathring: $\\mathring A$ 堆叠假如找不到我们要的符号，我们可以使用\\overset{above}{below}堆叠多种符号。 \\overset{@}{ABC}\\ \\overset{x^2}{\\longmapsto}\\ \\overset{\\bullet\\circ\\circ\\bullet}{T}:$\\overset{@}{ABC}\\ \\overset{x^2}{\\longmapsto}\\ \\overset{\\bullet\\circ\\circ\\bullet}{T} $ 连续分数描述连续分数使用\\cfrac，效果和\\frac一样，但是显示效果不一样： x = a_0 + \\cfrac{1^2}{a_1 + \\cfrac{2^2}{a_2 + \\cfrac{3^2}{a_3 + \\cfrac{4^4}{a_4 + \\cdots}}}}123x = a_0 + \\cfrac&#123;1^2&#125;&#123;a_1 + \\cfrac&#123;2^2&#125;&#123;a_2 + \\cfrac&#123;3^2&#125;&#123;a_3 + \\cfrac&#123;4^4&#125;&#123;a_4 + \\cdots&#125;&#125;&#125;&#125; 不要使用普通的\\frac或者是\\over，因为看起来很糟糕： x = a_0 + \\frac{1^2}{a_1 + \\frac{2^2}{a_2 + \\frac{3^2}{a_3 + \\frac{4^4}{a_4 + \\cdots}}}}123x = a_0 + \\frac&#123;1^2&#125;&#123;a_1 + \\frac&#123;2^2&#125;&#123;a_2 + \\frac&#123;3^2&#125;&#123;a_3 + \\frac&#123;4^4&#125;&#123;a_4 + \\cdots&#125;&#125;&#125;&#125; 对于连乘我们同样可以使用\\frac： x = a_0 + \\frac{1^2}{a_1+} \\frac{2^2}{a_2+} \\frac{3^2}{a_3 +} \\frac{4^4}{a_4 +} \\cdots123x = a_0 + \\frac&#123;1^2&#125;&#123;a_1+&#125; \\frac&#123;2^2&#125;&#123;a_2+&#125; \\frac&#123;3^2&#125;&#123;a_3 +&#125; \\frac&#123;4^4&#125;&#123;a_4 +&#125; \\cdots 又是连乘式太长一行放不下，使用$$...$$或者如[$a_0;a_1, a_2, a_3, \\dots$]. Commutative diagramsAMScd diagrams必须以一个“require”起头。 123456\\require&#123;AMScd&#125;\\begin&#123;CD&#125; A @&gt;a&gt;&gt; B\\\\ @V b V V= @VV c V\\\\ C @&gt;&gt;d&gt; D\\end&#123;CD&#125; 得到一张diagram: \\require{AMScd} \\begin{CD} A @>a>> B\\\\ @V b V V= @VV c V\\\\ C @>>d> D \\end{CD}@&gt;&gt;&gt;向右箭头； @&lt;&lt;&lt;向左箭头； @VVV向下箭头； @AAA向上箭头； @=水平双杠线； @|垂直双杠线； @.箭头消失 举例： 12345\\begin&#123;CD&#125; A @&gt;&gt;&gt; B @&gt;&#123;\\text&#123;very long label&#125;&#125;&gt;&gt; C \\\\ @. @AAA @| \\\\ D @= E @&lt;&lt;&lt; F \\end&#123;CD&#125; \\require{AMScd} \\begin{CD} A @>>> B @>{\\text{very long label}}>> C \\\\ @. @AAA @| \\\\ D @= E @","categories":[{"name":"Math","slug":"Math","permalink":"https://www.blankspace.cn/categories/Math/"},{"name":"MathJax","slug":"Math/MathJax","permalink":"https://www.blankspace.cn/categories/Math/MathJax/"}],"tags":[{"name":"MathJax","slug":"MathJax","permalink":"https://www.blankspace.cn/tags/MathJax/"},{"name":"TeX","slug":"TeX","permalink":"https://www.blankspace.cn/tags/TeX/"}]},{"title":"Activation function","slug":"activation-function","date":"2018-08-13T13:24:57.000Z","updated":"2018-08-13T13:46:27.782Z","comments":true,"path":"2018/08/13/activation-function/","link":"","permalink":"https://www.blankspace.cn/2018/08/13/activation-function/","excerpt":"Activation function（激活函数），是一类非线性函数，与之对应的就是线性函数。线性函数就是一条直线，形式化表示就是： y=mx+b$m$是直线的斜率，$y$通常是预测的值，$x$是输入的特征值，$b$是$y$轴的截距。 由于现实世界的复杂性，输入特征和预测之间的关系通常不是简单的线性关系，换言之就是非线性关系。然后就发现一些非线性函数，满足一定的性质（这个得看人家的论文），通过非线性函数多层的组合，可以来拟合非常复杂的非线性函数。 更过关于激活函数的介绍，请看这里. TensorFlow中更多激活函数，请看TensorFlow Activation Function. Binary step f(x) = \\begin{cases} 0, & \\text{for x $\\lt$ 0} \\\\ 1, & \\text{for x $\\geq$ 0} \\end{cases}阶跃函数是理想的激活函数，但是不可导。 下面对几种常见的激活函数进行可视化。 ReLu(rectified linear unit, ReLu) f(x) = \\begin{cases} 0, & \\text{for x $\\lt$ 0} \\\\ x, & \\text{for x $\\geq$ 0} \\end{cases}Logistic(Sigmoid or Soft step) f(x)=\\sigma{(x)} = \\frac{1}{1+e^{-x}}TanH f(x)= \\tanh{(x)}= \\frac{e^{x}-e^{-x}}{e^{x}+e^{-x}}Softplus f(x)= \\ln{(1+e^x)}Softmax f_{i}(x)= \\frac{e^{x_{i}}}{\\sum_{j=1}^{J}e^{x_j}}1234567891011121314151617181920212223242526272829303132333435363738import tensorflow as tf # machine learning framworkimport numpy as np # scientific computationimport matplotlib.pyplot as plt # data visualizationwith tf.Graph().as_default(), tf.Session() as sess: x_data = np.linspace(-6, 6, 256) y_relu = tf.nn.relu(x_data) y_sigmoid = tf.nn.sigmoid(x_data) y_tanh = tf.nn.tanh(x_data) y_softplus = tf.nn.softplus(x_data) y_softmax = tf.nn.softmax(x_data) # softmax is a special kind of activation function, it is about probablity y_relu, y_sigmoid, y_tanh, y_softplus, y_softmax = sess.run([y_relu, y_sigmoid, y_tanh, y_softplus, y_softmax]) # plot fig = plt.figure(1, figsize=(8, 6)) plt.subplot(221) plt.plot(x_data, y_relu, c='red', label='relu') plt.ylim(-1, 6) plt.legend(loc='best') plt.subplot(222) plt.plot(x_data, y_sigmoid, c='green', label='sigmoid') plt.ylim(-0.3, 1.5) plt.legend(loc='best') plt.subplot(223) plt.plot(x_data, y_tanh, c='blue', label='tanh') plt.ylim(-1.2, 1.2) plt.legend(loc='best') plt.subplot(224) plt.plot(x_data, y_softplus, c='yellow', label='softplus') plt.ylim(-0.3, 6) plt.legend(loc='best') plt.show()","text":"Activation function（激活函数），是一类非线性函数，与之对应的就是线性函数。线性函数就是一条直线，形式化表示就是： y=mx+b$m$是直线的斜率，$y$通常是预测的值，$x$是输入的特征值，$b$是$y$轴的截距。 由于现实世界的复杂性，输入特征和预测之间的关系通常不是简单的线性关系，换言之就是非线性关系。然后就发现一些非线性函数，满足一定的性质（这个得看人家的论文），通过非线性函数多层的组合，可以来拟合非常复杂的非线性函数。 更过关于激活函数的介绍，请看这里. TensorFlow中更多激活函数，请看TensorFlow Activation Function. Binary step f(x) = \\begin{cases} 0, & \\text{for x $\\lt$ 0} \\\\ 1, & \\text{for x $\\geq$ 0} \\end{cases}阶跃函数是理想的激活函数，但是不可导。 下面对几种常见的激活函数进行可视化。 ReLu(rectified linear unit, ReLu) f(x) = \\begin{cases} 0, & \\text{for x $\\lt$ 0} \\\\ x, & \\text{for x $\\geq$ 0} \\end{cases}Logistic(Sigmoid or Soft step) f(x)=\\sigma{(x)} = \\frac{1}{1+e^{-x}}TanH f(x)= \\tanh{(x)}= \\frac{e^{x}-e^{-x}}{e^{x}+e^{-x}}Softplus f(x)= \\ln{(1+e^x)}Softmax f_{i}(x)= \\frac{e^{x_{i}}}{\\sum_{j=1}^{J}e^{x_j}}1234567891011121314151617181920212223242526272829303132333435363738import tensorflow as tf # machine learning framworkimport numpy as np # scientific computationimport matplotlib.pyplot as plt # data visualizationwith tf.Graph().as_default(), tf.Session() as sess: x_data = np.linspace(-6, 6, 256) y_relu = tf.nn.relu(x_data) y_sigmoid = tf.nn.sigmoid(x_data) y_tanh = tf.nn.tanh(x_data) y_softplus = tf.nn.softplus(x_data) y_softmax = tf.nn.softmax(x_data) # softmax is a special kind of activation function, it is about probablity y_relu, y_sigmoid, y_tanh, y_softplus, y_softmax = sess.run([y_relu, y_sigmoid, y_tanh, y_softplus, y_softmax]) # plot fig = plt.figure(1, figsize=(8, 6)) plt.subplot(221) plt.plot(x_data, y_relu, c='red', label='relu') plt.ylim(-1, 6) plt.legend(loc='best') plt.subplot(222) plt.plot(x_data, y_sigmoid, c='green', label='sigmoid') plt.ylim(-0.3, 1.5) plt.legend(loc='best') plt.subplot(223) plt.plot(x_data, y_tanh, c='blue', label='tanh') plt.ylim(-1.2, 1.2) plt.legend(loc='best') plt.subplot(224) plt.plot(x_data, y_softplus, c='yellow', label='softplus') plt.ylim(-0.3, 6) plt.legend(loc='best') plt.show() 1234567891011121314151617181920212223242526272829303132with tf.Graph().as_default(), tf.Session() as sess: x_data = np.linspace(-6, 6, 256) y_relu = tf.nn.relu(x_data) y_sigmoid = tf.nn.sigmoid(x_data) y_tanh = tf.nn.tanh(x_data) y_softplus = tf.nn.softplus(x_data) y_softmax = tf.nn.softmax(x_data) # softmax is a special kind of activation function, it is about probablity y_relu, y_sigmoid, y_tanh, y_softplus, y_softmax = sess.run([y_relu, y_sigmoid, y_tanh, y_softplus, y_softmax]) # plot fig = plt.figure(1, figsize=(8, 6)) plt.plot(x_data, y_relu, c='red', label='relu') plt.plot(x_data, y_sigmoid, c='green', label='sigmoid') plt.plot(x_data, y_tanh, c='blue', label='tanh') plt.plot(x_data, y_softplus, c='yellow', label='softplus') plt.xlim(-4, 4) plt.ylim(-1.2, 4) plt.legend(loc='best') # gca get current axes ax = plt.gca() ax.spines['right'].set_color('none') ax.spines['top'].set_color('none') ax.xaxis.set_ticks_position('bottom') ax.yaxis.set_ticks_position('left') ax.spines['bottom'].set_position(('data', 0)) # outward, axes ax.spines['left'].set_position(('data', 0)) plt.show()","categories":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.blankspace.cn/categories/Machine-Learning/"},{"name":"TensorFlow","slug":"Machine-Learning/TensorFlow","permalink":"https://www.blankspace.cn/categories/Machine-Learning/TensorFlow/"}],"tags":[{"name":"TensorFlow","slug":"TensorFlow","permalink":"https://www.blankspace.cn/tags/TensorFlow/"},{"name":"Activation","slug":"Activation","permalink":"https://www.blankspace.cn/tags/Activation/"}]},{"title":"Placeholder","slug":"placeholder","date":"2018-08-13T07:05:47.000Z","updated":"2018-08-13T07:09:46.215Z","comments":true,"path":"2018/08/13/placeholder/","link":"","permalink":"https://www.blankspace.cn/2018/08/13/placeholder/","excerpt":"","text":"解释A placeholder is simply a variable that we will assign data to at a later date. It allows us to create our operations and build our computation graph, without needing the data. 顾名思义，占位符，没有数据先占位。是一种变量。之后按照sess.run(***, feed_dict={input: **})形式传输数据。 1234567import tensorflow as tfwith tf.Graph().as_default(), tf.Session() as sess: x = tf.placeholder(tf.float32) y = x**3 feed_dict = &#123;x:[1, 2, 3, 4]&#125; print(sess.run(y, feed_dict=feed_dict)) [ 1. 8. 27. 64.] 总结placeholder 与 feed_dict={} 总是一起出现的。placeholder允许没有数据先占位创建计算图，运行时通过feed_dict传入数据。","categories":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.blankspace.cn/categories/Machine-Learning/"},{"name":"TensorFlow","slug":"Machine-Learning/TensorFlow","permalink":"https://www.blankspace.cn/categories/Machine-Learning/TensorFlow/"}],"tags":[{"name":"TensorFlow","slug":"TensorFlow","permalink":"https://www.blankspace.cn/tags/TensorFlow/"},{"name":"placeholder","slug":"placeholder","permalink":"https://www.blankspace.cn/tags/placeholder/"}]},{"title":"Tensor Control","slug":"Tensor-Control","date":"2018-08-13T02:06:14.000Z","updated":"2018-08-13T09:46:18.331Z","comments":true,"path":"2018/08/13/Tensor-Control/","link":"","permalink":"https://www.blankspace.cn/2018/08/13/Tensor-Control/","excerpt":"","text":"张量形状形状shape，用来描述张量的大小和数量。张量的形状表示为列表的形式，其中第i个元素表示维度i的大小，列表的长度标书张量的阶（维数）。 阶 形状 维数 示例 0 [] 0-D 0 维张量。标量。 1 [D0] 1-D 形状为 [6] 的 1 维张量。 2 [D0, D1] 2-D 形状为 [4, 3] 的 2 维张量。 3 [D0, D1, D2] 3-D 形状为 [1, 2, 3] 的 3 维张量。 n [D0, D1, … Dn-1] n 维 形状为 [D0, D1, … Dn-1] 的张量。 文档中介绍得更详细。 123456789101112131415# show the shape of tensorimport tensorflow as tfg = tf.Graph()with g.as_default(): scalar = tf.ones([]) # a scalar / 0-D tensor :1 vector = tf.ones([6]) # a vector with 6 elements: [1,1,1 ,1,1,1] matrix = tf.ones([2, 3]) # a matrix with 2 rows and 3 columns with tf.Session() as sess: # use tf.get_shape() print(\"Scalar shape: \",scalar.get_shape(), \" value: \", sess.run(scalar)) print(\"Vector shape: \",vector.get_shape(), \" value: \", sess.run(vector)) print(\"Matrix shape: \",matrix.get_shape(), \" value: \", sess.run(matrix)) D:\\Anaconda3\\Anaconda3_py36\\lib\\site-packages\\h5py\\__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`. from ._conv import register_converters as _register_converters Scalar shape: () value: 1.0 Vector shape: (6,) value: [1. 1. 1. 1. 1. 1.] Matrix shape: (2, 3) value: [[1. 1. 1.] [1. 1. 1.]] 获取张量形状可以通过查看张量对象的shape属性来获取。 1vector.shape TensorShape([Dimension(6)]) 1matrix.shape[1] Dimension(3) 获取张量的数据类型查看张量对象的dtype属性。 1matrix.dtype tf.float32 改变张量数据类型tf.cast 1234c = tf.constant([1,9,8,3])print(c.dtype)f = tf.cast(c, dtype=tf.float32)print(f.dtype) &lt;dtype: &#39;int32&#39;&gt; &lt;dtype: &#39;float32&#39;&gt; 获取张量的阶tf.rank() 1tf.rank(scalar) &lt;tf.Tensor &#39;Rank:0&#39; shape=() dtype=int32&gt; 张量切片对于n阶张量，要访问其中某一元素，需要制定n个索引。 :是Python切片语法，也意味着不要变更该维度。可以帮助访问张量的子向量，子矩阵和子张量。 Broadcasting | 广播tensorflow支持广播，借鉴了Numpy中的做法，Numpy Broadcasting. 数学中，相同形状的张量才能进行元素级的运算，例如相加和等于。由于广播，使得不同形状的张量运算可以像对标量进行运算一样。 当张量被广播时，相当于对张量进行复制，实际上并不复制，广播专门为实现性能优化而设计。 举例，假设你和四个小伙伴，年龄分别为[18, 17, 20, 22, 21],每年年龄+1,模拟这个过程 12345678910111213141516# 向量加法with tf.Graph().as_default(): # method 1 ages = tf.constant([18, 17, 20, 22, 21]) one = tf.constant([1, 1, 1, 1, 1]) new_ages = tf.add(ages, one) with tf.Session() as sess: print(new_ages.eval()) # method 2 one_ = tf.constant(1) new_ages_ = tf.add(ages, one_) with tf.Session() as sess: print(new_ages_.eval()) [19 18 21 23 22] [19 18 21 23 22] 张量变形可以使用tf.reshape()来改变张量的形状。 1234567891011121314151617181920212223import numpy as np arr = np.arange(1, 13).reshape(3, 4)np.random.shuffle(arr)with tf.Graph().as_default(): x = tf.constant(arr, dtype=tf.int32) # create a 3x4 matrix/ 2-D tensor reshaped_4x3_x = tf.reshape(x, [4, 3]) reshaped_2x6_x = tf.reshape(x, [2, 6]) reshaped_3x2x2_x = tf.reshape(x, [3, 2, 2]) # reshape the rank with tf.Session() as sess: print(\"Original matrix (3x4):\") print(x.eval()) print(\"Reshaped matrix (4x3)\") print(reshaped_4x3_x.eval()) print(\"Reshaped matrix (2x6)\") print(reshaped_2x6_x.eval()) print(\"Reshaped matrix (3x2x2)\") print(reshaped_3x2x2_x.eval()) Original matrix (3x4): [[ 9 10 11 12] [ 1 2 3 4] [ 5 6 7 8]] Reshaped matrix (4x3) [[ 9 10 11] [12 1 2] [ 3 4 5] [ 6 7 8]] Reshaped matrix (2x6) [[ 9 10 11 12 1 2] [ 3 4 5 6 7 8]] Reshaped matrix (3x2x2) [[[ 9 10] [11 12]] [[ 1 2] [ 3 4]] [[ 5 6] [ 7 8]]] 变量、初始化和赋值TensorFlow变量初始化不是自动进行的，调用tf.global_variables_initializer()。不初始化就会报错。 1234567with tf.Graph().as_default(): v = tf.Variable([3]) with tf.Session() as sess: try: sess.run(v) except tf.errors.FailedPreconditionError as e: print(\"Caught excepted error: \", e) Caught excepted error: Attempting to use uninitialized value Variable [[Node: _retval_Variable_0_0 = _Retval[T=DT_INT32, index=0, _device=&quot;/job:localhost/replica:0/task:0/device:CPU:0&quot;](Variable)]] 123456789with tf.Graph().as_default(): v = tf.Variable([3]) with tf.Session() as sess: init = tf.global_variables_initializer() sess.run(init) try: print(sess.run(v)) except tf.errors.FailedPreconditionError as e: print(\"Caught excepted error: \", e) [3] assign要变更变量的值，使用tf.assign()指令，仅仅创建assign指令也不能起作用。和初始化一样，也需要运行赋值指令才能变更变量值。 123456789with tf.Graph().as_default(): v = tf.Variable([3]) with tf.Session() as sess: init = tf.global_variables_initializer() sess.run(init) assignment = tf.assign(v, [9]) print(v.eval()) # the variable has not been changed yet. sess.run(assignment) print(v.eval()) # now the variable is updated [3] [9] 评估张量eval()。方法仅在默认 tf.Session 处于活动状态时才起作用。Tensor.eval()会返回一个和张量内容相同的Numpy数组。 仅仅只有占位符的情况下无法进行评估。 123456with tf.Graph().as_default(): p = tf.placeholder(tf.float32) t = p+1.0 with tf.Session() as sess: # t.eval() # this will fail, since the placeholder did not give a value print(t.eval(feed_dict=&#123;p:23.3&#125;) )# this will success, because a value is fed to the placeholder 24.3 举例：模拟投掷两个骰子10次素材来自这里. 模拟《活着》中富贵儿赌钱投骰子（6个面，点数从1到6）的过程，在模拟中生成一个 10x4 二维张量，其中： 列 1 和 2 均存储一个骰子的一次投掷值。 列 3 存储同一行中列 1 和 2 的值的总和。 列 4 表示开大开小，若列 3 点数大于7，开大（如用1表示）；小于等于7开小（如用0表示）。 例如，第一行中可能会包含以下值： 列 1 存储 4 列 2 存储 3 列 3 存储 7 列 4 存储 0 要完成此任务，可能需要浏览 TensorFlow 文档。 问题：如何随机并分配值给变量？（TensorFlow不支持动态计算图）如何赋值十次，循环？最后张量结果如何表示？ 123456789101112131415161718192021222324252627282930# import numpy as npimport tensorflow as tfg = tf.Graph()with g.as_default(): # 使用随机均匀分布 tf.random_uniform 来模拟投掷 n 次, 不需要循环。 dice1 = tf.Variable(tf.random_uniform([10, 1], minval=1, maxval=7, dtype=tf.int32)) dice2 = tf.Variable(tf.random_uniform([10, 1], minval=1, maxval=7, dtype=tf.int32)) dice_sum = tf.add(dice1, dice2) seven = tf.constant(7) # 关于TensorFlow条件控制 # https://www.tensorflow.org/versions/r1.8/api_guides/python/control_flow_ops#Control_Flow_Operations comp = tf.cast(tf.greater(dice_sum, seven), tf.int32) # 使用 tf.concat 连接向量，axis=1 水平方向连接 result = tf.concat(values=[dice1, dice2, dice_sum, comp], axis=1) with tf.Session() as sess: sess.run(tf.global_variables_initializer()) print(result.eval()) [[ 4 4 8 1] [ 6 1 7 0] [ 5 6 11 1] [ 4 2 6 0] [ 4 1 5 0] [ 5 3 8 1] [ 6 2 8 1] [ 4 2 6 0] [ 4 6 10 1] [ 1 3 4 0]]","categories":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.blankspace.cn/categories/Machine-Learning/"},{"name":"TensorFlow","slug":"Machine-Learning/TensorFlow","permalink":"https://www.blankspace.cn/categories/Machine-Learning/TensorFlow/"}],"tags":[{"name":"Tensor","slug":"Tensor","permalink":"https://www.blankspace.cn/tags/Tensor/"},{"name":"TensorFlow","slug":"TensorFlow","permalink":"https://www.blankspace.cn/tags/TensorFlow/"}]},{"title":"Tensor","slug":"Tensor","date":"2018-08-13T02:05:48.000Z","updated":"2018-08-13T07:07:08.853Z","comments":true,"path":"2018/08/13/Tensor/","link":"","permalink":"https://www.blankspace.cn/2018/08/13/Tensor/","excerpt":"TensorTensorFlow中的Tensor就是张量，张量是任意维的数组。常用的张量有： constant（标量/常量）：零维数组，零阶张量。例如，0或一个字符串常量。 vector（向量/矢量）：一维数组，一阶张量。例如，[0]或[0, 1, 1, 2, 3, 5]. matrix（矩阵）:二维数组，二阶张量。例如，[[4, 9, 2], [3, 5, 7], [8, 1, 6]] 在TensorFlow中，张量的创建、销毁和控制由指令完成。典型的TensorFlow代码大多数都是指令。 GraphTensorFlow中的图，也叫作计算图或数据流图（数据库原理和软件工程中的数据流图看似百无一用），是一种数据结构。 TensorFlow程序可以选择创建一张或者多张图。 图的节点是指令；图的边是张量。（张量就像是在图中的流动，所以称为Tensor Flow）. 张量流经图，在每个节点由一个指令控制。一个指令的输出张量通常会变成后续指令的输入张量。 TensorFlow实现延迟执行模型，系统仅会根据相关节点的需求在需要时计算节点。 常量和张量都是图中的一种指令，常量是始终会返回同一张量值的指令，变量是会返回分配给它的任何张量的指令。 图必须要在TensorFlow会话Session中运行，会话存储了被会话运行的图的状态. 会话可以将图发布到多台设备上（假如程序在某个分布式计算框架上运行）。官方提供的分布式TensorFlow文档. TensorFlow 提供了一个默认图。不过，我们建议您明确创建自己的 Graph，以便跟踪状态（例如，您可能希望在每个单元格中使用一个不同的 Graph）。 举例，“海伦-秦九韶公式”三斜求积 S = \\sqrt{p\\left( p-a\\right)\\left( p-b\\right)\\left( p-c\\right)} p=\\frac{a+b+c}{2}相关API.","text":"TensorTensorFlow中的Tensor就是张量，张量是任意维的数组。常用的张量有： constant（标量/常量）：零维数组，零阶张量。例如，0或一个字符串常量。 vector（向量/矢量）：一维数组，一阶张量。例如，[0]或[0, 1, 1, 2, 3, 5]. matrix（矩阵）:二维数组，二阶张量。例如，[[4, 9, 2], [3, 5, 7], [8, 1, 6]] 在TensorFlow中，张量的创建、销毁和控制由指令完成。典型的TensorFlow代码大多数都是指令。 GraphTensorFlow中的图，也叫作计算图或数据流图（数据库原理和软件工程中的数据流图看似百无一用），是一种数据结构。 TensorFlow程序可以选择创建一张或者多张图。 图的节点是指令；图的边是张量。（张量就像是在图中的流动，所以称为Tensor Flow）. 张量流经图，在每个节点由一个指令控制。一个指令的输出张量通常会变成后续指令的输入张量。 TensorFlow实现延迟执行模型，系统仅会根据相关节点的需求在需要时计算节点。 常量和张量都是图中的一种指令，常量是始终会返回同一张量值的指令，变量是会返回分配给它的任何张量的指令。 图必须要在TensorFlow会话Session中运行，会话存储了被会话运行的图的状态. 会话可以将图发布到多台设备上（假如程序在某个分布式计算框架上运行）。官方提供的分布式TensorFlow文档. TensorFlow 提供了一个默认图。不过，我们建议您明确创建自己的 Graph，以便跟踪状态（例如，您可能希望在每个单元格中使用一个不同的 Graph）。 举例，“海伦-秦九韶公式”三斜求积 S = \\sqrt{p\\left( p-a\\right)\\left( p-b\\right)\\left( p-c\\right)} p=\\frac{a+b+c}{2}相关API. 12345678910111213141516171819202122import tensorflow as tf# create a graphg = tf.Graph()# establish g as the \"default\" graphwith g.as_default(): a = tf.constant(3.0, name=\"a\") b = tf.constant(4.0, name=\"b\") c = tf.constant(5.0, name=\"c\") two = tf.constant(2.0) p = tf.divide(tf.add(a, tf.add(b, c)), two) pa = tf.subtract(p, a) pb = tf.subtract(p, b) pc = tf.subtract(p, c) s = tf.sqrt(tf.multiply(tf.multiply(p, pa), tf.multiply(pb, pc))) with tf.Session() as sess: print(s.eval()) 6.0 总结TensorFlow编程本质是两个步骤： 将常量、变量和指令整合到一个图中； 在一个会话中评估这些常量、变量和指令。","categories":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.blankspace.cn/categories/Machine-Learning/"},{"name":"TensorFlow","slug":"Machine-Learning/TensorFlow","permalink":"https://www.blankspace.cn/categories/Machine-Learning/TensorFlow/"}],"tags":[{"name":"Tensor","slug":"Tensor","permalink":"https://www.blankspace.cn/tags/Tensor/"},{"name":"TensorFlow","slug":"TensorFlow","permalink":"https://www.blankspace.cn/tags/TensorFlow/"}]},{"title":"Variable","slug":"Variable","date":"2018-08-12T14:35:05.000Z","updated":"2018-08-12T14:38:47.844Z","comments":true,"path":"2018/08/12/Variable/","link":"","permalink":"https://www.blankspace.cn/2018/08/12/Variable/","excerpt":"","text":"《庄子·天下》中说“一尺之棰，日取其半，万世不竭。”使用TensorFlow来模拟这个过程。 Variable1234567891011import tensorflow as tf# 定义变量bar = tf.Variable(1.0, name=\"bar\")two = tf.constant(2.0) divided = tf.divide(bar, 2.0) # 定义取半操作，这一步并没有直接计算# 将bar更新为新的长度update = tf.assign(bar, divided) 初始化变量global_variables_initializer() 1init = tf.global_variables_initializer() # z定义了变量就必须要初始化 创建会话并运行12345with tf.Session() as sess: sess.run(init) for i in range(10): sess.run(update) print('day %d len: '%i, sess.run(bar)) day 0 len: 0.5 day 1 len: 0.25 day 2 len: 0.125 day 3 len: 0.0625 day 4 len: 0.03125 day 5 len: 0.015625 day 6 len: 0.0078125 day 7 len: 0.00390625 day 8 len: 0.001953125 day 9 len: 0.0009765625 总结Variable就是变量，和变量相对的就是常量，常量就是不变的量，那么变量就是会变化的量。在TensorFlow中使用tf.Variable()来定义变量。定义了变量就必须要进行变量初始化，初始化使用tf.global_variables_initializer()tf.initialize_all_variables().变量在运行时也需依靠定义会话Session来run才行。 1234567891011121314151617# 高斯的故事之高斯求和TensorFlow实现s = tf.Variable(0, name=\"sum\")number = tf.Variable(0, name=\"number\")one = tf.constant(1)new_number = tf.assign(number, tf.add(number, one))update = tf.assign(s, tf.add(s, new_number))init = tf.global_variables_initializer()sess = tf.Session()sess.run(init)for i in range(1, 101): sess.run(update)print(sess.run(s))sess.close() 5050","categories":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.blankspace.cn/categories/Machine-Learning/"},{"name":"TensorFlow","slug":"Machine-Learning/TensorFlow","permalink":"https://www.blankspace.cn/categories/Machine-Learning/TensorFlow/"}],"tags":[{"name":"TensorFlow","slug":"TensorFlow","permalink":"https://www.blankspace.cn/tags/TensorFlow/"}]},{"title":"Session","slug":"Session","date":"2018-08-12T14:28:06.000Z","updated":"2018-08-12T14:44:25.331Z","comments":true,"path":"2018/08/12/Session/","link":"","permalink":"https://www.blankspace.cn/2018/08/12/Session/","excerpt":"","text":"举两个例子。 Hello World123456789101112import tensorflow as tfnode = tf.constant(\"Hello, world!\")# method 1sess = tf.Session()print(sess.run(node))sess.close# method 2with tf.Session() as tf: print(sess.run(node)) D:\\Anaconda3\\Anaconda3_py36\\lib\\site-packages\\h5py\\__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`. from ._conv import register_converters as _register_converters b&#39;Hello, world!&#39; b&#39;Hello, world!&#39; 矩阵乘法理解Session会话，并使用TensorFlow来解决买菜问题（矩阵乘法）。素材来自《如何让11岁表妹知道矩阵乘法的本质是什么？》. 假设买肉和菜，农贸市场一斤肉25元，一斤菜3元。第一天我去农贸买了1斤肉，3斤菜，问计算用了多少钱：答：$25\\times1+3\\times3=34$。表示成向量乘法： \\begin{bmatrix} 25&3 \\\\ \\end{bmatrix} \\times \\begin{bmatrix} 1 \\\\ 3 \\\\ \\end{bmatrix} = 34第二天，又去农贸市场买了2斤肉，1斤菜,则两天的花销可以表示为： \\begin{bmatrix} 25&3 \\\\ \\end{bmatrix} \\times \\begin{bmatrix} 1&2 \\\\ 3&1 \\\\ \\end{bmatrix} = \\begin{bmatrix} 34 & 53 \\end{bmatrix}左边矩阵形状为1x2，行就表示农贸市场，两列分别表示肉的单价和菜的单价.右边矩阵，第一列表示第一天，第二列表示第二天，依次类推。第一行表示买的肉的数量，第二行表示买的菜的数量。两者进行矩阵相乘，得到的就是农贸市场，第n天，买肉和菜的总和。 听说王大妈哪里肉一斤20，菜一斤2元，假如这两天在王大妈哪里买菜，表示成矩阵： \\begin{bmatrix} 25&3\\\\ 20&2\\\\ \\end{bmatrix} \\begin{bmatrix} 1&2\\\\ 3&1\\\\ \\end{bmatrix} = \\begin{bmatrix} 34&53\\\\ 26&42\\\\ \\end{bmatrix} 12345678910111213141516171819import tensorflow as tfimport numpy as np# 创建计算图mat1 = tf.constant(np.array([[25, 3], [20, 2]]))mat2 = tf.constant(np.array([[1, 2], [3, 1]]))product = tf.matmul(mat1, mat2)# 创建会话和运行# method 1sess = tf.Session()money = sess.run(product)print(money)sess.close()# method 2with tf.Session() as sess: money = sess.run(product) print(money) [[34 53] [26 42]] [[34 53] [26 42]]","categories":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.blankspace.cn/categories/Machine-Learning/"},{"name":"TensorFlow","slug":"Machine-Learning/TensorFlow","permalink":"https://www.blankspace.cn/categories/Machine-Learning/TensorFlow/"}],"tags":[{"name":"TensorFlow","slug":"TensorFlow","permalink":"https://www.blankspace.cn/tags/TensorFlow/"}]},{"title":"MNIST pros","slug":"MNIST-pros","date":"2018-08-12T02:11:47.000Z","updated":"2018-08-12T02:16:34.195Z","comments":true,"path":"2018/08/12/MNIST-pros/","link":"","permalink":"https://www.blankspace.cn/2018/08/12/MNIST-pros/","excerpt":"运行TensorFlow的InteractiveSession/交互式会话sess = tf.InteractiveSession()用来创建交互式的会话，其余使用同Session 12import numpy as npimport tensorflow as tf D:\\Anaconda3\\Anaconda3_py36\\lib\\site-packages\\h5py\\__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`. from ._conv import register_converters as _register_converters 准备工作和上一节类似 1234567# http://yann.lecun.com/exdb/mnist/ to download mnist dataset# https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/tutorials/mnist/input_data.py# to read datasetfrom load_mnist import *import tensorflow.examples.tutorials.mnist.input_data as input_dataminst_dir = \"MNIST_data/\"mnist = input_data.read_data_sets(minst_dir, one_hot=True) 12x = tf.placeholder(\"float\", shape=[None, 784]) y_ = tf.placeholder(\"float\", shape=[None, 10]) # true label 构建一个多层卷积网络权重初始化12345678def weight_variable(shape): initial = tf.truncated_normal(shape, stddev=0.1) # The generated values follow a normal distribution with specified mean and # standard deviation.从截断的正态分布中输出随机值，中如果x的取值在区间（μ-2σ，μ+2σ）之外则重新进行选择 return tf.Variable(initial)def bias_variable(shape): initial = tf.constant(0.1, shape=shape) # Constant 2-D tensor populated with scalar value 0.1. 初始值为0.1，广播到shape形状的二维数组 return tf.Variable(initial) 卷积和汇聚（池化）由于Pooling翻译成池化让人不明所以，个人习惯依据其作用，而称之为汇聚。 简单起见，卷积使用1步长（stride size），0边距（padding size）的模板，保证输出和输入是同一个大小。我们的池化用简单传统的2x2大小的模板做max pooling. 12345def conv2d(x, W): return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')def max_pool_2x2(x): return tf.nn.max_pool(x, ksize=[1,2,2,1], strides=[1,2,2,1], padding='SAME')","text":"运行TensorFlow的InteractiveSession/交互式会话sess = tf.InteractiveSession()用来创建交互式的会话，其余使用同Session 12import numpy as npimport tensorflow as tf D:\\Anaconda3\\Anaconda3_py36\\lib\\site-packages\\h5py\\__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`. from ._conv import register_converters as _register_converters 准备工作和上一节类似 1234567# http://yann.lecun.com/exdb/mnist/ to download mnist dataset# https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/tutorials/mnist/input_data.py# to read datasetfrom load_mnist import *import tensorflow.examples.tutorials.mnist.input_data as input_dataminst_dir = \"MNIST_data/\"mnist = input_data.read_data_sets(minst_dir, one_hot=True) 12x = tf.placeholder(\"float\", shape=[None, 784]) y_ = tf.placeholder(\"float\", shape=[None, 10]) # true label 构建一个多层卷积网络权重初始化12345678def weight_variable(shape): initial = tf.truncated_normal(shape, stddev=0.1) # The generated values follow a normal distribution with specified mean and # standard deviation.从截断的正态分布中输出随机值，中如果x的取值在区间（μ-2σ，μ+2σ）之外则重新进行选择 return tf.Variable(initial)def bias_variable(shape): initial = tf.constant(0.1, shape=shape) # Constant 2-D tensor populated with scalar value 0.1. 初始值为0.1，广播到shape形状的二维数组 return tf.Variable(initial) 卷积和汇聚（池化）由于Pooling翻译成池化让人不明所以，个人习惯依据其作用，而称之为汇聚。 简单起见，卷积使用1步长（stride size），0边距（padding size）的模板，保证输出和输入是同一个大小。我们的池化用简单传统的2x2大小的模板做max pooling. 12345def conv2d(x, W): return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')def max_pool_2x2(x): return tf.nn.max_pool(x, ksize=[1,2,2,1], strides=[1,2,2,1], padding='SAME') 第一层卷积它由一个卷积接一个max pooling完成。卷积在每个5x5的patch中算出32个特征。卷积的权重张量形状是[5, 5, 1, 32]，前两个维度是patch的大小，接着是输入的通道数目，最后是输出的通道数目。 而对于每一个输出通道都有一个对应的偏置量。 12345678910W_conv1 = weight_variable([5, 5, 1, 32])b_conv1 = bias_variable([32])# convert x to 4d vectorx_image = tf.reshape(x, [-1, 28,28, 1])# num x height x width x channel# We then convolve x_image with the weight tensor, add the bias, apply the ReLU function, and finally max pool. # 我们把x_image和权值向量进行卷积，加上偏置项，然后应用ReLU激活函数，最后进行max pooling。h_conv1 = tf.nn.relu(conv2d(x_image, W_conv1)+b_conv1)h_pool1 = max_pool_2x2(h_conv1) 第二层卷积为了构建一个更深的网络，我们会把几个类似的层堆叠起来。第二层中，每个5x5的patch会得到64个特征。 12345W_conv2 = weight_variable([5, 5, 32, 64])b_conv2 = bias_variable([64])h_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2)+b_conv2)h_pool2 = max_pool_2x2(h_conv2) 密集连接（全连接）层经过两层卷积（激活）汇聚组合拳，原本的28x28的图像，特征图的尺寸减小到7x7（主要得益于汇聚）。并且一张图片有64个特征图（得益于卷积）。引入一个有1024个神经元的全连接层，来处理整个图片。 12345W_fc1 = weight_variable([7*7*64, 1024])b_fc1 = bias_variable([1024])h_pool2_flat = tf.reshape(h_pool2, [-1, 7*7*64])h_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1)+b_fc1) Dropout好像还没有官方中文翻译，那就叫它断电吧。使用TensorFlow构建计算图和使用vhdl构建电路有很多相似之处 减少过拟合。用一个placeholder来代表一个神经元的输出在dropout中保持不变的概率。这样我们可以在训练过程中启用dropout，在测试过程中关闭dropout。 TensorFlow的tf.nn.dropout操作除了可以屏蔽神经元的输出外，还会自动处理神经元输出值的scale。所以用dropout的时候可以不用考虑scale。 12keep_prob = tf.placeholder(\"float\")h_fc1_drop = tf.nn.dropout(h_fc1, keep_prob) 输出层最后添加一个softmax层，如同前一节的softmax回归一样。 1234W_fc2 = weight_variable([1024, 10])b_fc2 = bias_variable([10])y_conv = tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2)+b_fc2) # 输出层不需要激活函数 训练和评估我们会用更加复杂的ADAM优化器来做梯度最速下降，在feed_dict中加入额外的参数keep_prob来控制dropout比例。然后每100次迭代输出一次日志。 1import time 12345678910111213141516171819202122232425cross_entropy = -tf.reduce_sum(y_*tf.log(y_conv))train_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy) # 优化器只是按照规则（参数更新算法）来更新参数的correct_prediction = tf.equal(tf.argmax(y_conv, 1), tf.argmax(y_, 1))accuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\")) # acc ratesess = tf.InteractiveSession()sess.run(tf.global_variables_initializer())print('Training...')start_t = time.clock()for step in range(20001): batch = mnist.train.next_batch(50) if step%100==0: train_accuracy = accuracy.eval(feed_dict=&#123;x:batch[0], y_:batch[1], keep_prob:1.0&#125;) print(\"Step %d, training accuracy %f\"%(step, train_accuracy)) train_step.run(feed_dict=&#123;x:batch[0], y_:batch[1], keep_prob:0.5&#125;)end_t = time.clock()print(\"Train Time Cost: \", end_t-start_t)print('Testing...')print(\"Test accuracy %f\"%accuracy.eval(feed_dict=&#123;x:mnist.test.images, y_:mnist.test.labels, keep_prob:1.0&#125;))sess.close() Training... Step 0, training accuracy 0.120000 Step 100, training accuracy 0.780000 Step 200, training accuracy 0.860000 Step 300, training accuracy 0.860000 Step 400, training accuracy 0.980000 Step 500, training accuracy 0.860000 Step 600, training accuracy 0.940000 Step 700, training accuracy 0.940000 Step 800, training accuracy 0.960000 Step 900, training accuracy 0.940000 Step 1000, training accuracy 0.960000 Step 1100, training accuracy 1.000000 Step 1200, training accuracy 0.960000 Step 1300, training accuracy 0.980000 Step 1400, training accuracy 1.000000 Step 1500, training accuracy 0.960000 Step 1600, training accuracy 0.940000 Step 1700, training accuracy 0.940000 Step 1800, training accuracy 0.940000 Step 1900, training accuracy 0.980000 Step 2000, training accuracy 0.980000 Step 2100, training accuracy 0.960000 Step 2200, training accuracy 0.940000 Step 2300, training accuracy 0.980000 Step 2400, training accuracy 0.980000 Step 2500, training accuracy 0.960000 Step 2600, training accuracy 1.000000 Step 2700, training accuracy 1.000000 Step 2800, training accuracy 0.980000 Step 2900, training accuracy 1.000000 Step 3000, training accuracy 0.980000 Step 3100, training accuracy 1.000000 Step 3200, training accuracy 0.980000 Step 3300, training accuracy 1.000000 Step 3400, training accuracy 1.000000 Step 3500, training accuracy 0.960000 Step 3600, training accuracy 1.000000 Step 3700, training accuracy 0.980000 Step 3800, training accuracy 1.000000 Step 3900, training accuracy 0.980000 Step 4000, training accuracy 0.980000 Step 4100, training accuracy 1.000000 Step 4200, training accuracy 0.980000 Step 4300, training accuracy 0.960000 Step 4400, training accuracy 1.000000 Step 4500, training accuracy 1.000000 Step 4600, training accuracy 1.000000 Step 4700, training accuracy 1.000000 Step 4800, training accuracy 1.000000 Step 4900, training accuracy 0.980000 Step 5000, training accuracy 0.980000 Step 5100, training accuracy 0.980000 Step 5200, training accuracy 1.000000 Step 5300, training accuracy 1.000000 Step 5400, training accuracy 1.000000 Step 5500, training accuracy 1.000000 Step 5600, training accuracy 1.000000 Step 5700, training accuracy 0.980000 Step 5800, training accuracy 1.000000 Step 5900, training accuracy 0.980000 Step 6000, training accuracy 0.980000 Step 6100, training accuracy 0.980000 Step 6200, training accuracy 1.000000 Step 6300, training accuracy 0.980000 Step 6400, training accuracy 0.980000 Step 6500, training accuracy 1.000000 Step 6600, training accuracy 0.980000 Step 6700, training accuracy 1.000000 Step 6800, training accuracy 1.000000 Step 6900, training accuracy 1.000000 Step 7000, training accuracy 1.000000 Step 7100, training accuracy 0.980000 Step 7200, training accuracy 1.000000 Step 7300, training accuracy 1.000000 Step 7400, training accuracy 0.980000 Step 7500, training accuracy 1.000000 Step 7600, training accuracy 0.980000 Step 7700, training accuracy 0.980000 Step 7800, training accuracy 1.000000 Step 7900, training accuracy 0.980000 Step 8000, training accuracy 1.000000 Step 8100, training accuracy 1.000000 Step 8200, training accuracy 0.980000 Step 8300, training accuracy 0.980000 Step 8400, training accuracy 1.000000 Step 8500, training accuracy 0.980000 Step 8600, training accuracy 1.000000 Step 8700, training accuracy 0.980000 Step 8800, training accuracy 0.980000 Step 8900, training accuracy 1.000000 Step 9000, training accuracy 1.000000 Step 9100, training accuracy 1.000000 Step 9200, training accuracy 1.000000 Step 9300, training accuracy 0.980000 Step 9400, training accuracy 1.000000 Step 9500, training accuracy 0.960000 Step 9600, training accuracy 0.980000 Step 9700, training accuracy 1.000000 Step 9800, training accuracy 1.000000 Step 9900, training accuracy 1.000000 Step 10000, training accuracy 1.000000 Step 10100, training accuracy 1.000000 Step 10200, training accuracy 1.000000 Step 10300, training accuracy 1.000000 Step 10400, training accuracy 1.000000 Step 10500, training accuracy 1.000000 Step 10600, training accuracy 1.000000 Step 10700, training accuracy 1.000000 Step 10800, training accuracy 0.980000 Step 10900, training accuracy 1.000000 Step 11000, training accuracy 1.000000 Step 11100, training accuracy 1.000000 Step 11200, training accuracy 0.980000 Step 11300, training accuracy 1.000000 Step 11400, training accuracy 1.000000 Step 11500, training accuracy 0.980000 Step 11600, training accuracy 0.980000 Step 11700, training accuracy 0.960000 Step 11800, training accuracy 1.000000 Step 11900, training accuracy 1.000000 Step 12000, training accuracy 0.980000 Step 12100, training accuracy 1.000000 Step 12200, training accuracy 0.980000 Step 12300, training accuracy 1.000000 Step 12400, training accuracy 1.000000 Step 12500, training accuracy 1.000000 Step 12600, training accuracy 1.000000 Step 12700, training accuracy 1.000000 Step 12800, training accuracy 1.000000 Step 12900, training accuracy 1.000000 Step 13000, training accuracy 1.000000 Step 13100, training accuracy 1.000000 Step 13200, training accuracy 1.000000 Step 13300, training accuracy 1.000000 Step 13400, training accuracy 1.000000 Step 13500, training accuracy 1.000000 Step 13600, training accuracy 1.000000 Step 13700, training accuracy 1.000000 Step 13800, training accuracy 1.000000 Step 13900, training accuracy 1.000000 Step 14000, training accuracy 1.000000 Step 14100, training accuracy 1.000000 Step 14200, training accuracy 1.000000 Step 14300, training accuracy 1.000000 Step 14400, training accuracy 1.000000 Step 14500, training accuracy 1.000000 Step 14600, training accuracy 0.980000 Step 14700, training accuracy 1.000000 Step 14800, training accuracy 1.000000 Step 14900, training accuracy 1.000000 Step 15000, training accuracy 0.980000 Step 15100, training accuracy 1.000000 Step 15200, training accuracy 1.000000 Step 15300, training accuracy 1.000000 Step 15400, training accuracy 1.000000 Step 15500, training accuracy 1.000000 Step 15600, training accuracy 1.000000 Step 15700, training accuracy 1.000000 Step 15800, training accuracy 1.000000 Step 15900, training accuracy 1.000000 Step 16000, training accuracy 1.000000 Step 16100, training accuracy 1.000000 Step 16200, training accuracy 1.000000 Step 16300, training accuracy 1.000000 Step 16400, training accuracy 1.000000 Step 16500, training accuracy 1.000000 Step 16600, training accuracy 1.000000 Step 16700, training accuracy 0.960000 Step 16800, training accuracy 1.000000 Step 16900, training accuracy 1.000000 Step 17000, training accuracy 1.000000 Step 17100, training accuracy 1.000000 Step 17200, training accuracy 0.980000 Step 17300, training accuracy 1.000000 Step 17400, training accuracy 1.000000 Step 17500, training accuracy 1.000000 Step 17600, training accuracy 1.000000 Step 17700, training accuracy 1.000000 Step 17800, training accuracy 1.000000 Step 17900, training accuracy 1.000000 Step 18000, training accuracy 1.000000 Step 18100, training accuracy 1.000000 Step 18200, training accuracy 1.000000 Step 18300, training accuracy 1.000000 Step 18400, training accuracy 1.000000 Step 18500, training accuracy 1.000000 Step 18600, training accuracy 1.000000 Step 18700, training accuracy 1.000000 Step 18800, training accuracy 1.000000 Step 18900, training accuracy 1.000000 Step 19000, training accuracy 1.000000 Step 19100, training accuracy 1.000000 Step 19200, training accuracy 1.000000 Step 19300, training accuracy 1.000000 Step 19400, training accuracy 1.000000 Step 19500, training accuracy 1.000000 Step 19600, training accuracy 1.000000 Step 19700, training accuracy 1.000000 Step 19800, training accuracy 1.000000 Step 19900, training accuracy 0.980000 Step 20000, training accuracy 1.000000 Train Time Cost: 205.04848637568546 Testing... Test accuracy 0.992300 总结本节对mnist数据集，使用TensorFlow构建了卷积池化API，并构建了两层卷积池化层，一层全连接层的神经网络，使用dropout来减少过拟合，最后输出到softmax回归层，从而构建了完整的卷积神经网络模型。优化器使用Adam，经过2万次迭代的训练，在测试集上精确度达到了(99%).","categories":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.blankspace.cn/categories/Machine-Learning/"},{"name":"TensorFlow","slug":"Machine-Learning/TensorFlow","permalink":"https://www.blankspace.cn/categories/Machine-Learning/TensorFlow/"}],"tags":[{"name":"TensorFlow","slug":"TensorFlow","permalink":"https://www.blankspace.cn/tags/TensorFlow/"},{"name":"mnist","slug":"mnist","permalink":"https://www.blankspace.cn/tags/mnist/"}]},{"title":"TensorFlow tutorial mnist beginners","slug":"TensorFlow-tutorial-mnist-beginners","date":"2018-08-11T09:25:06.000Z","updated":"2018-08-12T02:12:56.707Z","comments":true,"path":"2018/08/11/TensorFlow-tutorial-mnist-beginners/","link":"","permalink":"https://www.blankspace.cn/2018/08/11/TensorFlow-tutorial-mnist-beginners/","excerpt":"","text":"从示例开始导入12import tensorflow as tfimport numpy as np # 和tf配合使用 D:\\Anaconda3\\Anaconda3_py36\\lib\\site-packages\\h5py\\__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`. from ._conv import register_converters as _register_converters 构造线性模型12345678910111213141516# generate phony data | 生成假数据# 实际应用应该是面对真实的数据# 100个点，（2x100）x_data = np.float32(np.random.rand(2, 100))y_data = np.dot([0.100, 0.200], x_data)+0.300# 构造线性模型b = tf.Variable(tf.zeros([1])) # tensor of shape 1W = tf.Variable(tf.random_uniform([1, 2], minval=-0.1, maxval=1.0)) # tensor of shape 1x2 whose values are from a uniform distribution # in the range of [minval, maxval)y = tf.matmul(W, x_data)+b# 最小化方差loss = tf.reduce_mean(tf.square(y-y_data))optimizer = tf.train.GradientDescentOptimizer(0.5)train = optimizer.minimize(loss) 123# 初始化变量# init = tf.initialize_all_variables()init = tf.global_variables_initializer() 123# 启动计算图(graph)sess = tf.Session() # 创建会话sess.run(init) 12345# 拟合平面for step in range(0, 201): sess.run(train) if step%20==0: print(\"Step: \", step, \" W= \",sess.run(W), \" b= \", sess.run(b)) Step: 0 W= [[0.4871506 0.41139394]] b= [-0.09778017] Step: 20 W= [[0.22539519 0.34252512]] b= [0.15573283] Step: 40 W= [[0.14763923 0.26675704]] b= [0.23892412] Step: 60 W= [[0.11975352 0.22945689]] b= [0.2737922] Step: 80 W= [[0.10842387 0.21279107]] b= [0.2887098] Step: 100 W= [[0.10362242 0.20552918]] b= [0.2951307] Step: 120 W= [[0.10156146 0.20238699]] b= [0.29789925] Step: 140 W= [[0.10067356 0.2010301 ]] b= [0.2990936] Step: 160 W= [[0.10029061 0.20044449]] b= [0.29960892] Step: 180 W= [[0.10012538 0.20019177]] b= [0.29983127] Step: 200 W= [[0.10005409 0.20008272]] b= [0.2999272] 12# 关闭会话sess.close() MNIST机器学习入门1234# http://yann.lecun.com/exdb/mnist/ to download mnist dataset# https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/tutorials/mnist/input_data.py# to read datasetfrom load_mnist import * 123import tensorflow.examples.tutorials.mnist.input_data as input_dataminst_dir = \"MNIST_data/\"mnist = input_data.read_data_sets(minst_dir, one_hot=True) Extracting MNIST_data/train-images-idx3-ubyte.gz Extracting MNIST_data/train-labels-idx1-ubyte.gz Extracting MNIST_data/t10k-images-idx3-ubyte.gz Extracting MNIST_data/t10k-labels-idx1-ubyte.gz WARNING:tensorflow:From D:\\Anaconda3\\Anaconda3_py36\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\datasets\\mnist.py:290: DataSet.__init__ (from tensorflow.contrib.learn.python.learn.datasets.mnist) is deprecated and will be removed in a future version. Instructions for updating: Please use alternatives such as official/mnist/dataset.py from tensorflow/models. 下载下来的数据集被分成两部分：60000行的训练数据集（mnist.train）和10000行的测试数据集（mnist.test）. 每一个MNIST数据单元有两部分组成：一张包含手写数字的图片和一个对应的标签。我们把这些图片设为“xs”，把这些标签设为“ys”。训练数据集和测试数据集都包含xs和ys，比如训练数据集的图片是 mnist.train.images ，训练数据集的标签是 mnist.train.labels. 每一张图片包含28像素X28像素。我们可以用一个数字数组来表示这张图片： 我们把这个数组展开成一个向量，长度是 28x28 = 784。如何展开这个数组（数字间的顺序）不重要，只要保持各个图片采用相同的方式展开。从这个角度来看，MNIST数据集的图片就是在784维向量空间里面的点, 并且拥有比较复杂的结构 (提醒: 此类数据的可视化是计算密集型的)。 在MNIST训练数据集中，mnist.train.images 是一个形状为 [60000, 784]的张量，第一个维度数字用来索引图片，第二个维度数字用来索引每张图片中的像素点。在此张量里的每一个元素，都表示某张图片里的某个像素的强度值，值介于0和1之间。 相对应的MNIST数据集的标签是介于0到9的数字，用来描述给定图片里表示的数字。为了用于这个教程，我们使标签数据是”one-hot vectors”。 一个one-hot向量除了某一位的数字是1以外其余各维度数字都是0。所以在此教程中，数字n将表示成一个只有在第n维度（从0开始）数字为1的10维向量。比如，标签0将表示成([1,0,0,0,0,0,0,0,0,0,0])。因此， mnist.train.labels 是一个[60000, 10]的数字矩阵。 1234567# x represent the input# None means number of images is adaptable# a 28x28 image is flatten to a vector of 784x = tf.placeholder(\"float\", [None, 784])W = tf.Variable(tf.zeros([784, 10]))b = tf.Variable(tf.zeros([10])) Softmax regression关于Softmax可以阅读这篇或者这篇. 整个回归模型： 12# softmaxy = tf.nn.softmax(tf.matmul(x, W)+b) 训练模型使用交叉熵损失函数，更多介绍看这篇. 1234y_ = tf.placeholder(\"float\", [None, 10])# 注意，这里的交叉熵不仅仅用来衡量单一的一对预测和真实值，而是所有100幅图片的交叉熵的总和cross_entropy = -tf.reduce_sum(y_*tf.log(y)) 12# gradient descent and backprapagationtrain_step = tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy) 更多优化算法点击这里. 12# init graphinit = tf.global_variables_initializer() 123456with tf.Session() as sess: sess.run(init) for step in range(1001): batch_xs, batch_ys = mnist.train.next_batch(100) feed_dict =&#123;x: batch_xs, y_:batch_ys&#125; sess.run(train_step, feed_dict) 评估我们的模型tf.argmax 是一个非常有用的函数，它能给出某个tensor对象在某一维上的其数据最大值所在的索引值。由于标签向量是由0,1组成，因此最大值1所在的索引位置就是类别标签，比如tf.argmax(y,1)返回的是模型对于任一输入x预测到的标签值，而 tf.argmax(y_,1) 代表正确的标签，我们可以用 tf.equal 来检测我们的预测是否真实标签匹配(索引位置一样表示匹配)。 12345678910with tf.Session() as sess: sess.run(init) for step in range(1001): batch_xs, batch_ys = mnist.train.next_batch(100) feed_dict =&#123;x: batch_xs, y_:batch_ys&#125; sess.run(train_step, feed_dict) if step%100==0: correct_prediction = tf.equal(tf.argmax(y, 1), tf.argmax(y_, 1)) accuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\")) print(step, \" train acc: \", sess.run(accuracy, feed_dict)) 0 train acc: 0.48 100 train acc: 0.94 200 train acc: 0.96 300 train acc: 0.93 400 train acc: 0.93 500 train acc: 0.89 600 train acc: 0.96 700 train acc: 0.94 800 train acc: 0.94 900 train acc: 0.95 1000 train acc: 0.98 1234567891011121314with tf.Session() as sess: sess.run(init) for step in range(1001): batch_xs, batch_ys = mnist.train.next_batch(100) feed_dict =&#123;x: batch_xs, y_:batch_ys&#125; sess.run(train_step, feed_dict)# if step%100==0:# correct_prediction = tf.equal(tf.argmax(y, 1), tf.argmax(y_, 1))# accuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))# print(step, \" train acc: \", sess.run(accuracy, feed_dict))# # for test set correct_prediction = tf.equal(tf.argmax(y, 1), tf.argmax(y_, 1)) accuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\")) print(\"Test acc:\", sess.run(accuracy, feed_dict=&#123;x:mnist.test.images, y_:mnist.test.labels&#125;)) Test acc: 0.9138 更多内容https://www.tensorflow.org/tutorials/ 总结本文首先通过一个完整的线性回归的例子，展示了TensorFlow的基本使用，首先构造计算图graph，其中包含诸如Variable、placeholder等节点，以及节点之间的数学运算如矩阵乘法；接着对计算图初始化，tf.global_variables_initializer()，其中TensorFlow中很重要的就是回话session机制，通过会话来运行计算图；随后，通过会话进行训练，拟合并德大检测结果。 其次，使用TensorFlow完成了基于MNIST数据集，进行手写体识别的任务，并在测试集上实现了91%的正确率。其完整过程，首先是准备数据，下载的数据被分为训练数据和测试数据。每种数据的基本单元都包含两部分，一部分是手写体图片，统一规格28x28，另一部分是对应的标记，来指出对应的数字，将原始图片展开向量表示，标记采用one-hot表示；接着，构建softmax回归模型。使用梯度下降算法进行反向传播，最小化交叉熵损失进行训练。最后，在测试机上测试，得到实验正确率指标，可以达到91%以上。","categories":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.blankspace.cn/categories/Machine-Learning/"},{"name":"TensorFlow","slug":"Machine-Learning/TensorFlow","permalink":"https://www.blankspace.cn/categories/Machine-Learning/TensorFlow/"}],"tags":[{"name":"TensorFlow","slug":"TensorFlow","permalink":"https://www.blankspace.cn/tags/TensorFlow/"},{"name":"mnist","slug":"mnist","permalink":"https://www.blankspace.cn/tags/mnist/"}]},{"title":"Code Highlight","slug":"code-hightlight","date":"2018-08-11T04:30:03.000Z","updated":"2018-08-11T06:04:04.219Z","comments":true,"path":"2018/08/11/code-hightlight/","link":"","permalink":"https://www.blankspace.cn/2018/08/11/code-hightlight/","excerpt":"","text":"123456789101112131415161718192021/* * This is some sample code to illustrate how things look! */import Musician from './liverpool';class Paul extends Musician &#123; constructor(bass) &#123; super(bass); &#125; get fullName() &#123; return 'Paul McCartney'; &#125; perform() &#123; this.play(this.instrument); this.sing(); &#125;&#125;export default Paul;","categories":[{"name":"Projects","slug":"Projects","permalink":"https://www.blankspace.cn/categories/Projects/"},{"name":"hexo-theme-bootstrap-blog","slug":"Projects/hexo-theme-bootstrap-blog","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/"},{"name":"Tutorial","slug":"Projects/hexo-theme-bootstrap-blog/Tutorial","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/Tutorial/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.blankspace.cn/tags/Hexo/"},{"name":"Code","slug":"Code","permalink":"https://www.blankspace.cn/tags/Code/"}]},{"title":"Numpy随机数1","slug":"Numpy随机数","date":"2018-08-11T02:45:00.000Z","updated":"2018-08-11T11:37:44.854Z","comments":true,"path":"2018/08/11/Numpy随机数/","link":"","permalink":"https://www.blankspace.cn/2018/08/11/Numpy随机数/","excerpt":"","text":"更多内容查看这里 Simple random data | 常用随机函数1import numpy as np 123# rand(d0, d1, …, dn)# random values in a given shapenp.random.rand(1) array([0.15771123]) 1np.random.rand(3, 4) array([[0.17303082, 0.13546342, 0.96790769, 0.54289967], [0.47752797, 0.3163813 , 0.33804729, 0.63760302], 更多内容查看这里 Simple random data | 常用随机函数1import numpy as np rand(d0, d1, …, dn)123# rand(d0, d1, …, dn)# random values in a given shapenp.random.rand(1) array([0.97299322]) 1np.random.rand(3, 4) array([[0.81969546, 0.63076449, 0.70050141, 0.28701361], [0.5909755 , 0.10265285, 0.03841936, 0.04747027], [0.50586629, 0.33692611, 0.18006999, 0.37508064]]) 1np.random.rand(5) array([0.4027442 , 0.29275407, 0.15175853, 0.76296697, 0.84970737]) 正态分布随机数 randn(d0, d1, …, dn)123# randn(d0, d1, …, dn)# return a sample or samples from standard norma sidtributionnp.random.randn(1) array([0.68010349]) 1np.random.randn(4) array([-0.22561174, -0.12611506, 1.42778485, 0.69267162]) 1np.random.randn(2, 2) array([[ 1.09486998, -0.12217683], [-0.26184258, 0.70775913]]) Note: We can use matplotlib to show the distrubution 随机整数randint(low[, high, size, dtype]) / np.random.random_integers(2) 123# randint(low[, high, size, dtype])# return random integers from low(inclusive) to high(exclusive)np.random.randint(1) 0 1np.random.randint(3) 2 1np.random.randint(100, 1000) 945 1np.random.randint(0, 100, 5) array([76, 86, 29, 40, 76]) 1np.random.randint(0, 100, (3, 3)) array([[88, 50, 90], [64, 69, 57], [ 2, 10, 95]]) 12345# random_integers(low[, high, size])# random integers of type np.int between low and high, inclusivenp.random.random_integers(2)# This function is deprecated. Please call randint(l, r + 1) instead D:\\Anaconda3\\Anaconda3_py36\\lib\\site-packages\\ipykernel_launcher.py:3: DeprecationWarning: This function is deprecated. Please call randint(1, 2 + 1) instead This is separate from the ipykernel package so we can avoid doing imports until 1 随机小数 random_sample([size]) random([size]) ranf([size]) sample([size]) 123# random_sample([size])# return random floats in the half-open interval[0.0, 1.0)np.random.random_sample(1) array([0.42922028]) 1np.random.random_sample((3,3)) array([[0.13911191, 0.29153576, 0.38330187], [0.39095818, 0.37114282, 0.69224038], [0.3664121 , 0.02533538, 0.76235701]]) 123# random([size])# return random floats in the half-open interval[0.0, 1.0)np.random.random(1) array([0.57758511]) 1np.random.random((2, 2)) array([[0.89365816, 0.10505705], [0.76704421, 0.27889437]]) 123# ranf([size])# return random floats int the half-open interval [0.0, 1.0)np.random.ranf(1) array([0.64518204]) 1np.random.ranf((3,4)) array([[0.10753966, 0.70902024, 0.63834775, 0.65623879], [0.71709776, 0.34437971, 0.42639926, 0.70715686], [0.12977266, 0.20338805, 0.94316098, 0.3082274 ]]) 123# sample([size])# return random floats int the half-open interval [0.0, 1.0)np.random.sample(2) array([0.95896772, 0.64870791]) 1np.random.sample((2, 2)) array([[0.91634732, 0.95899658], [0.59189998, 0.53045256]]) 自定义随机 choice(a[, size, replace, p]) 123# choice(a[, size, replace, p])# generate a random sample from a given 1-D arraynp.random.choice([3, 2, 1, 0],3) array([3, 1, 3]) 1np.random.choice([3, 2, 1, 0],3, replace=False) array([1, 2, 3]) 1np.random.choice([\"cat\", \"dog\", \"fish\", \"mouse\", \"bird\"],(2, 2), replace=True) array([[&#39;cat&#39;, &#39;dog&#39;], [&#39;bird&#39;, &#39;dog&#39;]], dtype=&#39;&lt;U5&#39;) 1234# p represents properties of the elements of the 1-D array# sum of p must be 1.0np.random.choice([\"cat\", \"dog\", \"fish\", \"mouse\", \"bird\"],(2, 2), replace=True, p=[0.1, 0.5, 0.3, 0.05, 0.05]) array([[&#39;fish&#39;, &#39;dog&#39;], [&#39;dog&#39;, &#39;fish&#39;]], dtype=&#39;&lt;U5&#39;) 123# bytes(length)# return random bytesnp.random.bytes(1) b&#39;\\x8c&#39; Permutations | 排列 shuffle(x) permutation(x) 123456789# shuffle(x)# modify a sequence in-place by shuffling its contents# 将序列在原地打乱x = np.arange(11)print('----befor shuffle x----')print(x)print('----after shuffle x----')np.random.shuffle(x)print(x) ----befor shuffle x---- [ 0 1 2 3 4 5 6 7 8 9 10] ----after shuffle x---- [ 8 1 5 4 0 2 3 9 7 6 10] 1234567# permutation(x)# randomly permute a sequence, or return a permuted rangex = np.arange(11)print(\"---permutation----\")print(np.random.permutation(x))print(\"---x----\")print(x) ---permutation---- [ 9 4 6 0 5 10 8 3 7 2 1] ---x---- [ 0 1 2 3 4 5 6 7 8 9 10] Random generator | 随机数生成器如果设置了seed，每次重新运行时生成的随机数都是确定和上次相同的。 1234# RandomState([seed])# container for the Mersenne Twister pseudo-random number generatornp.random.RandomState(1)np.random.random(5) array([0.58048047, 0.57948883, 0.82388234, 0.77501925, 0.70183176]) 1234# seed([seed])# seed the generatornp.random.seed(0)np.random.random(5) array([0.5488135 , 0.71518937, 0.60276338, 0.54488318, 0.4236548 ]) 123456# get_state()# return a tuple representing the internal state of the generator # np.random.get_state()# set_state(state)# set the interna state of the generator from a tuple","categories":[{"name":"Languages","slug":"Languages","permalink":"https://www.blankspace.cn/categories/Languages/"},{"name":"Python","slug":"Languages/Python","permalink":"https://www.blankspace.cn/categories/Languages/Python/"},{"name":"Numpy","slug":"Languages/Python/Numpy","permalink":"https://www.blankspace.cn/categories/Languages/Python/Numpy/"}],"tags":[{"name":"Numpy","slug":"Numpy","permalink":"https://www.blankspace.cn/tags/Numpy/"},{"name":"random","slug":"random","permalink":"https://www.blankspace.cn/tags/random/"}]},{"title":"Emoji","slug":"emoji-text","date":"2018-08-10T12:20:02.000Z","updated":"2018-08-11T06:04:25.620Z","comments":true,"path":"2018/08/10/emoji-text/","link":"","permalink":"https://www.blankspace.cn/2018/08/10/emoji-text/","excerpt":"","text":"Input emoji with syntax :smile:. Sad, it is failed. 😂😁 Use inputs(eg. MS default input) which can input emoji directly, this is the easiest way. Here to know more.","categories":[{"name":"Projects","slug":"Projects","permalink":"https://www.blankspace.cn/categories/Projects/"},{"name":"hexo-theme-bootstrap-blog","slug":"Projects/hexo-theme-bootstrap-blog","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/"},{"name":"Tutorial","slug":"Projects/hexo-theme-bootstrap-blog/Tutorial","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/Tutorial/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.blankspace.cn/tags/Hexo/"},{"name":"Emoji","slug":"Emoji","permalink":"https://www.blankspace.cn/tags/Emoji/"}]},{"title":"Mathjax","slug":"mathjax-test","date":"2018-08-10T11:53:22.000Z","updated":"2018-08-10T12:41:46.743Z","comments":true,"path":"2018/08/10/mathjax-test/","link":"","permalink":"https://www.blankspace.cn/2018/08/10/mathjax-test/","excerpt":"","text":"This post is used for testing mathjax(latex) support. Inline mathUse $...$, example: 1$\\lim_&#123;x \\to \\infty&#125; \\exp(-x) = 0$ Writing LaTex like: \\lim_{x \\to \\infty} \\exp(-x) = 0 Displayed formulasUse $$...$$ , example: 1$$\\sum_&#123;i=0&#125;^n i^2 = \\frac&#123;(n^2+n)(2n+1)&#125;&#123;6&#125;$$ \\sum_{i=0}^n i^2 = \\frac{(n^2+n)(2n+1)}{6}1234567$$ \\begin&#123;matrix&#125; 1 &amp; x &amp; x^2 \\\\ 1 &amp; y &amp; y^2 \\\\ 1 &amp; z &amp; z^2 \\\\ \\end&#123;matrix&#125;$$ \\begin{matrix} 1 & x & x^2 \\\\ 1 & y & y^2 \\\\ 1 & z & z^2 \\\\ \\end{matrix}1234567\\begin&#123;align&#125;\\sqrt&#123;37&#125; &amp; = \\sqrt&#123;\\frac&#123;73^2-1&#125;&#123;12^2&#125;&#125; \\\\ &amp; = \\sqrt&#123;\\frac&#123;73^2&#125;&#123;12^2&#125;\\cdot\\frac&#123;73^2-1&#125;&#123;73^2&#125;&#125; \\\\ &amp; = \\sqrt&#123;\\frac&#123;73^2&#125;&#123;12^2&#125;&#125;\\sqrt&#123;\\frac&#123;73^2-1&#125;&#123;73^2&#125;&#125; \\\\ &amp; = \\frac&#123;73&#125;&#123;12&#125;\\sqrt&#123;1 - \\frac&#123;1&#125;&#123;73^2&#125;&#125; \\\\ &amp; \\approx \\frac&#123;73&#125;&#123;12&#125;\\left(1 - \\frac&#123;1&#125;&#123;2\\cdot73^2&#125;\\right)\\end&#123;align&#125; \\begin{align} \\sqrt{37} & = \\sqrt{\\frac{73^2-1}{12^2}} \\\\ & = \\sqrt{\\frac{73^2}{12^2}\\cdot\\frac{73^2-1}{73^2}} \\\\ & = \\sqrt{\\frac{73^2}{12^2}}\\sqrt{\\frac{73^2-1}{73^2}} \\\\ & = \\frac{73}{12}\\sqrt{1 - \\frac{1}{73^2}} \\\\ & \\approx \\frac{73}{12}\\left(1 - \\frac{1}{2\\cdot73^2}\\right) \\end{align}1234567\\begin&#123;array&#125;&#123;c|lcr&#125;n &amp; \\text&#123;Left&#125; &amp; \\text&#123;Center&#125; &amp; \\text&#123;Right&#125; \\\\\\hline1 &amp; 0.24 &amp; 1 &amp; 125 \\\\2 &amp; -1 &amp; 189 &amp; -8 \\\\3 &amp; -20 &amp; 2000 &amp; 1+10i\\end&#123;array&#125; \\begin{array}{c|lcr} n & \\text{Left} & \\text{Center} & \\text{Right} \\\\ \\hline 1 & 0.24 & 1 & 125 \\\\ 2 & -1 & 189 & -8 \\\\ 3 & -20 & 2000 & 1+10i \\end{array}More information can be found Here. To know how to let hexo support Matjax, you can read this.","categories":[{"name":"Projects","slug":"Projects","permalink":"https://www.blankspace.cn/categories/Projects/"},{"name":"hexo-theme-bootstrap-blog","slug":"Projects/hexo-theme-bootstrap-blog","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/"},{"name":"Tutorial","slug":"Projects/hexo-theme-bootstrap-blog/Tutorial","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/Tutorial/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.blankspace.cn/tags/Hexo/"}]},{"title":"Translation","slug":"translate","date":"2018-08-08T10:27:25.000Z","updated":"2018-08-13T10:38:36.792Z","comments":true,"path":"2018/08/08/translate/","link":"","permalink":"https://www.blankspace.cn/2018/08/08/translate/","excerpt":"This post is for testing google translation widget.","text":"This post is for testing google translation widget. 采薇 采薇采薇、薇亦作止。 曰歸曰歸、歲亦莫止。 靡室靡家、玁狁之故。 不遑啟居、玁狁之故。 采薇采薇、薇亦柔止。 曰歸曰歸、心亦憂止。 憂心烈烈、載飢載渴。 我戌未定、靡使歸聘。 采薇采薇、薇亦剛止。 曰歸曰歸、歲亦陽止。 王事靡盬、不遑啟處。 憂心孔疚、我行不來。 駕彼四牡、四牡騤騤。 君子所依、小人所腓。 四牡翼翼、象弭魚服。 豈不日戒、玁狁孔亟。 彼爾維何、維常之華。 彼路斯何、君子之車。 戎車既駕、四牡業業。 豈敢定居、一月三捷。 駕彼四牡、四牡騤騤。 君子所依、小人所腓。 四牡翼翼、象弭魚服。 豈不日戒、玁狁孔亟。 昔我往矣、楊柳依依。 今我來思、雨雪靡靡。 行道遲遲、載渴載飢。 我心傷悲、莫知我哀。 CAI WEI Let us gather the thorn-ferns , let us gather the thorn-ferns ; The thorn-ferns are now springing up . When shall we return ? When shall we return ? It will be late in the [next] year . Wife and husband will be separated , Because of the Xian-yun . We shall have no leisure to rest , Because of the Xian-yun . Let us gather the thorn-ferns , let us gather the thorn-ferns ; The thorn-ferns are now tender . When shall we return ? When shall we return ? Our hearts are sorrowful ; Our hearts are sad and sorrowful ; We shall hunger , we shall thirst . While our service on guard is not finished , We can send no one home to enquire about our families . Let us gather the thorn-ferns , let us gather the thorn-ferns ; The thorn-ferns are now hard . When shall we return ? When shall we return ? The year will be in the tenth month . But the king’s business must not be slackly performed ; We shall have no leisure to rest . Our sorrowing hearts are in great distress ; But we shall not return from our expedition . What is that so gorgeous ? It is the flowers of the cherry tree . What carriage is that ? It is the carriage of our general . His war carriage is yoked ; The four steeds are strong . Dare we remain inactive ? In one month we shall have three victories . The four steeds are yoked , The four steeds , eager and strong ; The confidence of the general , The protection of the men . The four steeds move regularly , like wings ; here are the bow with its ivory ends , and the seal-skin quiver . Shall we not daily warn one another ? The business of the Xian-yun is very urgent . At first , when we set out , The willows were fresh and green ; Now , when we shall be returning , The snow will be falling in clouds . Long and tedious will be our marching ; We shall hunger ; we shall thirst . Our hearts are wounded with grief , And no one knows our sadness . 翻译来源：这里.","categories":[{"name":"Projects","slug":"Projects","permalink":"https://www.blankspace.cn/categories/Projects/"},{"name":"hexo-theme-bootstrap-blog","slug":"Projects/hexo-theme-bootstrap-blog","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/"},{"name":"Tutorial","slug":"Projects/hexo-theme-bootstrap-blog/Tutorial","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/Tutorial/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.blankspace.cn/tags/Hexo/"}]},{"title":"Categories","slug":"categories","date":"2018-08-07T16:01:04.000Z","updated":"2018-08-10T02:53:31.192Z","comments":true,"path":"2018/08/08/categories/","link":"","permalink":"https://www.blankspace.cn/2018/08/08/categories/","excerpt":"","text":"This post contains 3 categories. Make sure the theme can display all of the categories.","categories":[{"name":"Projects","slug":"Projects","permalink":"https://www.blankspace.cn/categories/Projects/"},{"name":"hexo-theme-bootstrap-blog","slug":"Projects/hexo-theme-bootstrap-blog","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/"},{"name":"Tutorial","slug":"Projects/hexo-theme-bootstrap-blog/Tutorial","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/Tutorial/"}],"tags":[]},{"title":"Elements","slug":"elements","date":"2018-08-07T16:01:03.000Z","updated":"2018-08-10T02:53:18.753Z","comments":true,"path":"2018/08/08/elements/","link":"","permalink":"https://www.blankspace.cn/2018/08/08/elements/","excerpt":"","text":"The purpose of this post is to make sure all HTML elements can display properly. Heading 1Heading 2Heading 3Heading 4Heading 5Heading 6 ParagraphLorem ipsum dolor sit amet, test link consectetur adipiscing elit. Strong text pellentesque ligula commodo viverra vehicula. Italic text at ullamcorper enim. Morbi a euismod nibh. Underline text non elit nisl. Deleted text tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam laoreet dui odio, id tempus justo tincidunt id. Phasellus scelerisque nunc sed nunc ultricies accumsan. Interdum et malesuada fames ac ante ipsum primis in faucibus. Sed erat diam, blandit eget felis aliquam, rhoncus varius urna. Donec tellus sapien, sodales eget ante vitae, feugiat ullamcorper urna. Praesent auctor dui vitae dapibus eleifend. Proin viverra mollis neque, ut ullamcorper elit posuere eget. Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna. Maecenas ornare arcu at mi suscipit, non molestie tortor ultrices. Aenean convallis, diam et congue ultricies, erat magna tincidunt orci, pulvinar posuere mi sapien ac magna. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent vitae placerat mauris. Nullam laoreet ante posuere tortor blandit auctor. Sed id ligula volutpat leo consequat placerat. Mauris fermentum dolor sed augue malesuada sollicitudin. Vivamus ultrices nunc felis, quis viverra orci eleifend ut. Donec et quam id urna cursus posuere. Donec elementum scelerisque laoreet. List TypesDefinition List (dl)Definition List TitleThis is a definition list division. Ordered List (ol) List Item 1 List Item 2 List Item 3 Unordered List (ul) List Item 1 List Item 2 List Item 3 Table Table Header 1 Table Header 2 Table Header 3 Division 1 Division 2 Division 3 Division 1 Division 2 Division 3 Division 1 Division 2 Division 3 Misc Stuff - abbr, acronym, sub, sup, etc.Lorem superscript dolor subscript amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. cite. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. NBA Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus. AVE","categories":[{"name":"Projects","slug":"Projects","permalink":"https://www.blankspace.cn/categories/Projects/"},{"name":"hexo-theme-bootstrap-blog","slug":"Projects/hexo-theme-bootstrap-blog","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/"},{"name":"Tutorial","slug":"Projects/hexo-theme-bootstrap-blog/Tutorial","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/Tutorial/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.blankspace.cn/tags/Hexo/"},{"name":"Elements","slug":"Elements","permalink":"https://www.blankspace.cn/tags/Elements/"}]},{"title":"Gallery","slug":"gallery","date":"2018-08-07T16:01:02.000Z","updated":"2018-08-10T02:53:12.635Z","comments":true,"path":"2018/08/08/gallery/","link":"","permalink":"https://www.blankspace.cn/2018/08/08/gallery/","excerpt":"","text":"A photo gallery example…","categories":[{"name":"Projects","slug":"Projects","permalink":"https://www.blankspace.cn/categories/Projects/"},{"name":"hexo-theme-bootstrap-blog","slug":"Projects/hexo-theme-bootstrap-blog","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/"},{"name":"Tutorial","slug":"Projects/hexo-theme-bootstrap-blog/Tutorial","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/Tutorial/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.blankspace.cn/tags/Hexo/"},{"name":"Photos","slug":"Photos","permalink":"https://www.blankspace.cn/tags/Photos/"}]},{"title":"Hexo Theme: Bootstrap Blog","slug":"hexo-theme-bootstrap-blog","date":"2018-08-07T16:01:01.000Z","updated":"2018-08-11T06:18:17.224Z","comments":true,"path":"2018/08/08/hexo-theme-bootstrap-blog/","link":"","permalink":"https://www.blankspace.cn/2018/08/08/hexo-theme-bootstrap-blog/","excerpt":"A simple Bootstrap v3 blog theme for Hexo. Based on the official Bootstrap Blog example template. The theme and example site source code can be found on Github: Theme package source code Example site source content Example site generated output Theme announcement blog post","text":"A simple Bootstrap v3 blog theme for Hexo. Based on the official Bootstrap Blog example template. The theme and example site source code can be found on Github: Theme package source code Example site source content Example site generated output Theme announcement blog post Setup InstructionsInstallThis theme requires Hexo 2.4 and above. 1) Install theme: 12$ git clone https://github.com/cgmartin/hexo-theme-bootstrap-blog.git \\ themes/bootstrap-blog 2) (optional) Install hexo-tag-bootstrap for more Bootstrap tags (textcolors, buttons, labels, badges, etc.): 1$ npm install hexo-tag-bootstrap --save 3) (optional) Install hexo-tag-fontawesome for placing Font Awesome icons in your Markdown: 1$ npm install hexo-tag-fontawesome --save EnableModify the theme setting in _config.yml to bootstrap-blog. Update12cd themes/bootstrap-bloggit pull Configuration123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102# File: themes/bootstrap-blog/_config.yml# Headernavbar_brand: falsemenu: Home: index.html Archives: archives/ Categories: categories/ # Projects: projects/ About: about/ # Blogroll: blogroll/ rss: /atom.xml# Contentexcerpt_link: Read more...fancybox: truewordcount: trueviewcount: truetimecost: falselanguage: zh-CN# Sidebarwidgets:- translate- recent_posts- about # See also: `about_content`- category- archive- tag- tagcloud- searchabout_widget_content: &gt; &lt;p&gt;Etiam porta &lt;em&gt;sem malesuada magna&lt;/em&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;# widget behaviorarchive_type: 'monthly'show_count: true# Miscellaneousgoogle_analytics: UA-122713769-1favicon: images/icon.pngtwitter_id:google_plus: 112373242775367333102fb_admins:fb_app_id:# baidu analyticsbaidu_tongji: true# https://github.com/hustcc/canvas-nest.jscanvas_nest: false# https://github.com/imsun/gitment#gitment: falsegitment: owner: repo: client_id: client_secret: # Valine Comment system. https://valine.js.orgvaline: false# valine: # enable: true # 如果你想使用valine，请将值设置为 true # appId: kBrTfD8l4RFzueSAt65hASek-gzGzoHsz # your leancloud appId # appKey: AFsAfwfHqW6iEHkAc3TjYEzh # your leancloud appKey # notify: false # Mail notify # verify: false # Verify code # avatar: mm # Gravatar style : mm/identicon/monsterid/wavatar/retro/hide # placeholder: 我有话想说~ # Comment Box placeholder # guest_info: nick,mail # Comment header info # pageSize: 20 # comment list page size# livere https://livere.com/livere: false# livere: # dataUID: MTAyMC8zODU5MS8xNTExOQ== # http://www.daovoice.iodao_voice: false# dao_voice: # appId: a2c8df52 eyes_protected: false# dynamic_title# title_change: falsetitle_change: normal: o(∩_∩)o leave: Opps...●﹏●# Miscellaneousgoogle_analytics:favicon:twitter:google_plus: navbar_brand - The HTML content for an optional “navbar-brand”. Can be text or an image. false to hide. menu - Navigation menu (map of Titles to URLs) rss - RSS link (ie. “/atom.xml”) excerpt_link - “Read More” link at the bottom of excerpted articles. false to hide the link. fancybox - Enable Fancybox for images widgets - Enable sidebar widgets (more info below) about_widget_content - The HTML content for the “About” sidebar widget (more info below) google_analytics - Google Analytics ID favicon - Favicon path (ie. ‘/favicon.ico’) twitter_id - Twitter ID of the author (ie. @c_g_martin) google_plus - Google+ profile link Instead of editing the layout’s configuration file directly, you can override the theme settings from your project’s root _config.yml, ie.:12345678910111213141516theme_config: # Header navbar_brand: &lt;img src=\"/navbrand.png\"&gt; menu: Home: index.html Archives: archives/ 'Another Page': page/index.html widgets: - about - category - archive - recent_posts - tag about_widget_content: &gt; &lt;p&gt;This is &lt;strong&gt;custom content&lt;/strong&gt; for the \"about\" sidebar widget.&lt;/p&gt; FeaturesFront-Matter ExtrasOptional settings in the front-matter can be added for various effects:123456---author: Author Name # displays the post's authorphotos: # displays a Bootstrap thumbnail gallery- images/HNCK0537.jpg- images/HNCK6173.jpg--- FancyboxThis theme uses Fancybox to showcase your photos. You can use the image Markdown syntax or fancybox tag plugin to add your photos. Usage:12345![img caption](img url)~or~&#123;% fancybox img_url [img_thumbnail] [img_caption] %&#125; CalloutsA custom tag for the Bootstrap “callout” style is available for use. Usage:123&#123;% callout [type:default|primary|success|info|warning|danger] %&#125;...content...&#123;% endcallout %&#125; Example:1234&#123;% callout info %&#125;#### &#123;% fa info-circle %&#125; Info tipThis is some callout content&#123;% endcallout %&#125; SidebarThis theme provides 6 built-in widgets that can be displayed in the sidebar: about * category tag tagcloud archives recent_posts All widgets are enabled and displayed by default. You can toggle them on/off with the widgets setting in the theme’s _config.yml. * NOTE: The “about” widget contains static Lorem Ipsum text by default. You’ll want to edit the about_widget_content setting for your site or disable the widget in the theme config. You can also modify the widget file itself to include contents from a Markdown page:12345&lt;!-- file: ./layout/_widget/about.ejs --&gt;&lt;div class=\"sidebar-module sidebar-module-inset\"&gt; &lt;h4&gt;About&lt;/h4&gt; &lt;%- site.pages['data'].find(function(p) &#123; return p.path === 'about/index.html'; &#125;).content %&gt;&lt;/div&gt; …then run hexo new page about to create the Markdown page. Bootstrap Paginator HelperA custom bs_paginator() helper is used to produce Bootstrap-compatible pagination markup. It is a drop-in replacement for Hexo’s built-in paginator(). 1234&lt;%- bs_paginator(&#123; prev_text: &apos;&lt;i class=&quot;fa fa-chevron-left&quot;&gt;&lt;/i&gt; Prev&apos;, next_text: &apos;Next &lt;i class=&quot;fa fa-chevron-right&quot;&gt;&lt;/i&gt;&apos; &#125;) %&gt; DevelopmentThe default Landscape Hexo theme was used as the starting point and heavily edited for this theme. The Landscape Stylus styles have been replaced with standard CSS files which override bootstrap.min.css. Stylus is used only for bundling the CSS files (see ./source/css/styles.styl). Feel free to convert the CSS to your pre-processor of choice (Stylus, LESS, Sass, etc.). LicenseMIT License Copyright © 2016 Christopher Martin Copyright © 2018 lqdev","categories":[{"name":"Projects","slug":"Projects","permalink":"https://www.blankspace.cn/categories/Projects/"},{"name":"hexo-theme-bootstrap-blog","slug":"Projects/hexo-theme-bootstrap-blog","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/"},{"name":"Tutorial","slug":"Projects/hexo-theme-bootstrap-blog/Tutorial","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/Tutorial/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.blankspace.cn/tags/Hexo/"},{"name":"Theme","slug":"Theme","permalink":"https://www.blankspace.cn/tags/Theme/"}]},{"title":"日本語テスト","slug":"日本語テスト","date":"2018-08-07T16:00:11.000Z","updated":"2018-08-10T06:38:31.875Z","comments":true,"path":"2018/08/08/日本語テスト/","link":"","permalink":"https://www.blankspace.cn/2018/08/08/日本語テスト/","excerpt":"This is a Japanese test post. 私は昨日ついにその助力家というのの上よりするたなけれ。 最も今をお話団はちょうどこの前後なかろでくらいに困りがいるたをは帰着考えたなかって、そうにもするでうたらない。","text":"This is a Japanese test post. 私は昨日ついにその助力家というのの上よりするたなけれ。 最も今をお話団はちょうどこの前後なかろでくらいに困りがいるたをは帰着考えたなかって、そうにもするでうたらない。 がたを知っないはずも同時に九月をいよいよたありた。 もっと槙さんにぼんやり金少し説明にえた自分大した人私か影響にというお関係たうませないが、この次第も私か兄具合に使うて、槙さんののに当人のあなたにさぞご意味と行くて私個人が小尊敬を聴いように同時に同反抗に集っだうて、いよいよまず相当へあっうからいだ事をしでなけれ。 それでそれでもご時日をしはずはたったいやと突き抜けるますて、その元がは行ったてという獄を尽すていけですた。 この中道具の日その学校はあなたごろがすまなりかとネルソンさんの考えるですん、辺の事実ないというご盲従ありたですと、爺さんのためが薬缶が結果までの箸の当時してならて、多少の十月にためからそういう上からとにかくしましないと触れべきものたで、ないうですと多少お人達したのでたた。 From すぐ使えるダミーテキスト - 日本語 Lorem ipsum","categories":[{"name":"Projects","slug":"Projects","permalink":"https://www.blankspace.cn/categories/Projects/"},{"name":"hexo-theme-bootstrap-blog","slug":"Projects/hexo-theme-bootstrap-blog","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/"},{"name":"Tutorial","slug":"Projects/hexo-theme-bootstrap-blog/Tutorial","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/Tutorial/"}],"tags":[]},{"title":"中文测试","slug":"中文測試","date":"2018-08-07T16:00:10.000Z","updated":"2018-08-10T06:38:26.897Z","comments":true,"path":"2018/08/08/中文測試/","link":"","permalink":"https://www.blankspace.cn/2018/08/08/中文測試/","excerpt":"This is a Chinese test post. 当朝大学士，统共有五位，朕不得不罢免四位，六部尚书，朕不得不罢免三位。 看看这七个人吧，哪个不是两鬓半百，哪个不是朝廷的栋梁，哪个不是朕的儿女亲家。 他们烂了，朕心要碎了。 祖宗把江山交到朕的手里，却搞成了这个样子，朕是痛心疾首。 朕有罪于国家，愧对祖宗，愧对天地，朕恨不得自己罢免了自己！ 还有你们，虽然各个冠冕堂皇站在干岸上，你们，就那么干净吗？！！！！ 朕知道，你们有的人比这七个人更腐败！ 朕劝你们一句，都把自己的心肺肠子翻出来晒一晒洗一洗拾掇拾掇！ 。。。。。。。","text":"This is a Chinese test post. 当朝大学士，统共有五位，朕不得不罢免四位，六部尚书，朕不得不罢免三位。 看看这七个人吧，哪个不是两鬓半百，哪个不是朝廷的栋梁，哪个不是朕的儿女亲家。 他们烂了，朕心要碎了。 祖宗把江山交到朕的手里，却搞成了这个样子，朕是痛心疾首。 朕有罪于国家，愧对祖宗，愧对天地，朕恨不得自己罢免了自己！ 还有你们，虽然各个冠冕堂皇站在干岸上，你们，就那么干净吗？！！！！ 朕知道，你们有的人比这七个人更腐败！ 朕劝你们一句，都把自己的心肺肠子翻出来晒一晒洗一洗拾掇拾掇！ 。。。。。。。 朕现在是越来越清楚了，大清的心头之患不在外边，而是在朝廷。就是在这乾清宫！！！！ 就在朕的骨肉皇子和大臣们当中。 咱们这烂一点，大清国就烂一片！你们要是全烂了，大清各地就会揭竿而起，让咱们死无葬身之地呀！ 想想吧，崇祯皇帝朱由检吊死在煤山上才几年呢。。 忘啦？？？？！！！！！！！！！！！！ 那棵老歪脖子树还站在皇宫后边天天地盯着你们哪！ 朕已经三天三夜没有合眼了，老想着和大伙儿说些什么，可是话总得有个头哇，想来想去只有四个字—————————————————————— （悲壮音乐响起，匾额从康熙身后徐徐升起，上面赫然书写着四个大字： 正——大——光——明） 这四个字，说说容易阿，身体力行又何其难？？！！！ 这四个字，朕是从心里刨出来的，从血海里挖出来的。 记着，从今日起，此殿改为正大光明殿！ 好好看看，你们都抬起头来好好看看，想想自己，给朕看半个时辰——","categories":[{"name":"Projects","slug":"Projects","permalink":"https://www.blankspace.cn/categories/Projects/"},{"name":"hexo-theme-bootstrap-blog","slug":"Projects/hexo-theme-bootstrap-blog","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/"},{"name":"Tutorial","slug":"Projects/hexo-theme-bootstrap-blog/Tutorial","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/Tutorial/"}],"tags":[]},{"title":"Videos","slug":"videos","date":"2018-08-07T16:00:09.000Z","updated":"2018-09-17T13:39:15.646Z","comments":true,"path":"2018/08/08/videos/","link":"","permalink":"https://www.blankspace.cn/2018/08/08/videos/","excerpt":"This is a video test post. Video TagYou can insert an online or local video to your site using html5 video tag. For example,123456&lt;video width=600 height=400 src=\"http://www.w3school.com.cn/example/html5/mov_bbb.mp4\" poster=\"http://archive.furtherfield.org/sites/furtherfield.org/files/imagecache/content_width_598px/p_2359.jpg\" controls=\"controls\"&gt; &lt;!-- source src=\"http://www.w3school.com.cn/example/html5/mov_bbb.mp4\" type=\"video/mp4\" --&gt; &lt;!-- source src=\"movie.ogg\" type=\"video/ogg\" --&gt;your browser does not support the video tag.&lt;/video&gt; Your browser does not support the video tag. HTML Video - Browser SupportIn HTML5, there are 3 supported video formats: MP4, WebM, and Ogg. The browser support for the different formats is: Browser MP4 WebM Ogg Internet Explorer YES NO NO Chrome YES YES YES Firefox YES YES YES Safari YES NO NO Opera YES (from Opera 25) YES YES HTML Video - Media Types File Format Media Type MP4 video/mp4 WebM video/webm Ogg video/ogg Attention:Ogg = V.Codec: Theora &amp; A.Codec: VorbisMPEG4 = V.Codec: H.264 &amp; A.Codec: AACWebM = V.Codec: VP8 &amp; A.Codec: Vorbis Read FFMPEG and HTML5 Video to know more. OthersBilibili 1&lt;iframe src=\"//player.bilibili.com/player.html?aid=28777599&amp;cid=49864265&amp;page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" width=\"100%\" height=\"560px\"&gt; &lt;/iframe&gt;","text":"This is a video test post. Video TagYou can insert an online or local video to your site using html5 video tag. For example,123456&lt;video width=600 height=400 src=\"http://www.w3school.com.cn/example/html5/mov_bbb.mp4\" poster=\"http://archive.furtherfield.org/sites/furtherfield.org/files/imagecache/content_width_598px/p_2359.jpg\" controls=\"controls\"&gt; &lt;!-- source src=\"http://www.w3school.com.cn/example/html5/mov_bbb.mp4\" type=\"video/mp4\" --&gt; &lt;!-- source src=\"movie.ogg\" type=\"video/ogg\" --&gt;your browser does not support the video tag.&lt;/video&gt; Your browser does not support the video tag. HTML Video - Browser SupportIn HTML5, there are 3 supported video formats: MP4, WebM, and Ogg. The browser support for the different formats is: Browser MP4 WebM Ogg Internet Explorer YES NO NO Chrome YES YES YES Firefox YES YES YES Safari YES NO NO Opera YES (from Opera 25) YES YES HTML Video - Media Types File Format Media Type MP4 video/mp4 WebM video/webm Ogg video/ogg Attention:Ogg = V.Codec: Theora &amp; A.Codec: VorbisMPEG4 = V.Codec: H.264 &amp; A.Codec: AACWebM = V.Codec: VP8 &amp; A.Codec: Vorbis Read FFMPEG and HTML5 Video to know more. OthersBilibili 1&lt;iframe src=\"//player.bilibili.com/player.html?aid=28777599&amp;cid=49864265&amp;page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" width=\"100%\" height=\"560px\"&gt; &lt;/iframe&gt; Youtube 1&#123;% youtube HWHBCsUR-58 %&#125; Vimeo 1&#123;% vimeo 82090131 %&#125;","categories":[{"name":"Projects","slug":"Projects","permalink":"https://www.blankspace.cn/categories/Projects/"},{"name":"hexo-theme-bootstrap-blog","slug":"Projects/hexo-theme-bootstrap-blog","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/"},{"name":"Tutorial","slug":"Projects/hexo-theme-bootstrap-blog/Tutorial","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/Tutorial/"}],"tags":[]},{"title":"Tag Plugins","slug":"tag-plugins","date":"2018-08-07T16:00:07.000Z","updated":"2018-08-10T06:58:49.305Z","comments":true,"path":"2018/08/08/tag-plugins/","link":"","permalink":"https://www.blankspace.cn/2018/08/08/tag-plugins/","excerpt":"This post is used for testing tag plugins. See docs for more info. Block QuoteNormal blockquote Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna. Quote from a bookDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. David LevithanWide Awake","text":"This post is used for testing tag plugins. See docs for more info. Block QuoteNormal blockquote Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna. Quote from a bookDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. David LevithanWide Awake Quote from Twitter12345&#123;% blockquote @L https://twitter.com/devdocs/status/xxx %&#125;NEW: DevDocs now comes with syntax highlighting. http://devdocs.io&#123;% endblockquote %&#125; NEW: DevDocs now comes with syntax highlighting. http://devdocs.io @Ltwitter.com/devdocs/status/xxx Quote from an article on the webWizardLQ’s Seth GodinWelcome Code BlockNormal code block1alert(&apos;Hello World!&apos;); With caption123&#123;% codeblock Array.map %&#125;array.map(callback[, thisArg])&#123;% endcodeblock %&#125; Array.map1array.map(callback[, thisArg]) With caption and URL1234&#123;% codeblock .compact http://underscorejs.org/#compact Underscore.js %&#125;.compact([0, 1, false, 2, ‘’, 3]);=&gt; [1, 2, 3]&#123;% endcodeblock %&#125; .compactUnderscore.js12.compact([0, 1, false, 2, ‘’, 3]);=&gt; [1, 2, 3] Gist1&#123;% gist 996818 %&#125; jsFiddle1&#123;% jsfiddle ccWP7 %&#125; PullquoteLeft123&#123;% pullquote left %&#125;A cat on the left.&#123;% endpullquote %&#125; A cat on the left. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ligula justo, lobortis sit amet semper vel, dignissim sit amet libero. Praesent ac tempus ligula. Maecenas at gravida odio. Etiam tristique volutpat lacus eu faucibus. Right123&#123;% pullquote left %&#125;A cat on the right.&#123;% endpullquote %&#125; A cat on the right. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ligula justo, lobortis sit amet semper vel, dignissim sit amet libero. Praesent ac tempus ligula. Maecenas at gravida odio. Etiam tristique volutpat lacus eu faucibus. Bootstrap Callouts1234&#123;% callout info %&#125;#### &#123;% fa info-circle %&#125; InfoThis is some info content&#123;% endcallout %&#125; 1234&#123;% callout warning %&#125;#### &#123;% fa exclamation-triangle %&#125; WarningThis is some warning content&#123;% endcallout %&#125; 1234&#123;% callout danger %&#125;#### &#123;% fa exclamation-triangle %&#125; DangerThis is some danger content&#123;% endcallout %&#125; InfoThis is some info content WarningThis is some warning content DangerThis is some danger content","categories":[{"name":"Projects","slug":"Projects","permalink":"https://www.blankspace.cn/categories/Projects/"},{"name":"hexo-theme-bootstrap-blog","slug":"Projects/hexo-theme-bootstrap-blog","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/"},{"name":"Tutorial","slug":"Projects/hexo-theme-bootstrap-blog/Tutorial","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/Tutorial/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.blankspace.cn/tags/Hexo/"}]},{"title":"Secret","slug":"secret","date":"2018-08-07T16:00:06.000Z","updated":"2018-08-10T02:52:09.018Z","comments":true,"path":"2018/08/08/secret/","link":"","permalink":"https://www.blankspace.cn/2018/08/08/secret/","excerpt":"","text":"This post is used for testing password. password: 5201314","categories":[{"name":"Projects","slug":"Projects","permalink":"https://www.blankspace.cn/categories/Projects/"},{"name":"hexo-theme-bootstrap-blog","slug":"Projects/hexo-theme-bootstrap-blog","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/"},{"name":"Tutorial","slug":"Projects/hexo-theme-bootstrap-blog/Tutorial","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/Tutorial/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.blankspace.cn/tags/Hexo/"}]},{"title":"No comment","slug":"no-comments","date":"2018-08-07T16:00:05.000Z","updated":"2018-08-13T23:29:24.510Z","comments":true,"path":"2018/08/08/no-comments/","link":"","permalink":"https://www.blankspace.cn/2018/08/08/no-comments/","excerpt":"","text":"This post doesn’t have any comment.","categories":[{"name":"Projects","slug":"Projects","permalink":"https://www.blankspace.cn/categories/Projects/"},{"name":"hexo-theme-bootstrap-blog","slug":"Projects/hexo-theme-bootstrap-blog","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/"},{"name":"Tutorial","slug":"Projects/hexo-theme-bootstrap-blog/Tutorial","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/Tutorial/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.blankspace.cn/tags/Hexo/"}]},{"title":"Very Looooooog Title, Yes it is, amazing!!!! /^^%*&*^ &% === end","slug":"long-title","date":"2018-08-07T16:00:04.000Z","updated":"2018-09-18T11:41:48.857Z","comments":true,"path":"2018/08/08/long-title/","link":"","permalink":"https://www.blankspace.cn/2018/08/08/long-title/","excerpt":"","text":"This post has a long title. Make sure the title is displaying correctly.","categories":[{"name":"Projects","slug":"Projects","permalink":"https://www.blankspace.cn/categories/Projects/"},{"name":"hexo-theme-bootstrap-blog","slug":"Projects/hexo-theme-bootstrap-blog","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/"},{"name":"Tutorial","slug":"Projects/hexo-theme-bootstrap-blog/Tutorial","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/Tutorial/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.blankspace.cn/tags/Hexo/"}]},{"title":"www.google.com","slug":"link-post-without-title","date":"2018-08-07T16:00:03.000Z","updated":"2018-08-10T02:52:28.962Z","comments":true,"path":"2018/08/08/link-post-without-title/","link":"http://www.google.com/","permalink":"https://www.blankspace.cn/2018/08/08/link-post-without-title/","excerpt":"","text":"This is a link post without a title. The title should be the link with or without protocol. Clicking on the link should open Google in a new tab or window.","categories":[{"name":"Projects","slug":"Projects","permalink":"https://www.blankspace.cn/categories/Projects/"},{"name":"hexo-theme-bootstrap-blog","slug":"Projects/hexo-theme-bootstrap-blog","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/"},{"name":"Tutorial","slug":"Projects/hexo-theme-bootstrap-blog/Tutorial","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/Tutorial/"}],"tags":[]},{"title":"Link Post","slug":"link-post","date":"2018-08-07T16:00:02.000Z","updated":"2018-08-10T02:52:33.474Z","comments":true,"path":"2018/08/08/link-post/","link":"http://www.google.com/","permalink":"https://www.blankspace.cn/2018/08/08/link-post/","excerpt":"","text":"This is a link post. Clicking on the link should open Google in a new tab or window.","categories":[{"name":"Projects","slug":"Projects","permalink":"https://www.blankspace.cn/categories/Projects/"},{"name":"hexo-theme-bootstrap-blog","slug":"Projects/hexo-theme-bootstrap-blog","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/"},{"name":"Tutorial","slug":"Projects/hexo-theme-bootstrap-blog/Tutorial","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/Tutorial/"}],"tags":[]},{"title":"images","slug":"images-test","date":"2018-08-07T16:00:01.000Z","updated":"2018-08-09T03:41:50.784Z","comments":true,"path":"2018/08/08/images-test/","link":"","permalink":"https://www.blankspace.cn/2018/08/08/images-test/","excerpt":"This is a image test post.","text":"This is a image test post.","categories":[{"name":"Projects","slug":"Projects","permalink":"https://www.blankspace.cn/categories/Projects/"},{"name":"hexo-theme-bootstrap-blog","slug":"Projects/hexo-theme-bootstrap-blog","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/"},{"name":"Tutorial","slug":"Projects/hexo-theme-bootstrap-blog/Tutorial","permalink":"https://www.blankspace.cn/categories/Projects/hexo-theme-bootstrap-blog/Tutorial/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.blankspace.cn/tags/Hexo/"},{"name":"Images","slug":"Images","permalink":"https://www.blankspace.cn/tags/Images/"}]}]}