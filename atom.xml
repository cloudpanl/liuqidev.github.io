<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WizardLQ’s | 魔法师の小茶馆</title>
  
  <subtitle>Keep moving, never give up. | 锲而不舍，金石可镂.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.blankspace.cn/"/>
  <updated>2018-10-10T11:38:45.363Z</updated>
  <id>https://www.blankspace.cn/</id>
  
  <author>
    <name>liuqidev</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>（汇总）关于Python的若干问题</title>
    <link href="https://www.blankspace.cn/2018/10/10/misc-pyerrors/"/>
    <id>https://www.blankspace.cn/2018/10/10/misc-pyerrors/</id>
    <published>2018-10-10T03:49:34.000Z</published>
    <updated>2018-10-10T11:38:45.363Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
      <category term="Misc" scheme="https://www.blankspace.cn/categories/Misc/"/>
    
      <category term="Errors" scheme="https://www.blankspace.cn/categories/Misc/Errors/"/>
    
    
      <category term="Python" scheme="https://www.blankspace.cn/tags/Python/"/>
    
      <category term="Errors" scheme="https://www.blankspace.cn/tags/Errors/"/>
    
      <category term="Bugs" scheme="https://www.blankspace.cn/tags/Bugs/"/>
    
  </entry>
  
  <entry>
    <title>Chrome Shortcuts</title>
    <link href="https://www.blankspace.cn/2018/10/10/chrome-shortcuts/"/>
    <id>https://www.blankspace.cn/2018/10/10/chrome-shortcuts/</id>
    <published>2018-10-10T03:17:28.000Z</published>
    <updated>2018-10-10T11:34:37.271Z</updated>
    
    <content type="html"><![CDATA[<p>通过快捷键来使用Chrome，看起来专业一丢丢。</p><h2 id="声明和引用"><a href="#声明和引用" class="headerlink" title="声明和引用"></a>声明和引用</h2><blockquote><p>来源：<a href="https://support.google.com/chrome/answer/157179?hl=en" target="_blank" rel="noopener">https://support.google.com/chrome/answer/157179?hl=en</a></p></blockquote><h2 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h2><div class="table-container"><table><thead><tr><th>快捷键</th><th>用途</th></tr></thead><tbody><tr><td><strong>F12 或 Ctrl+Shift+J</strong></td><td>打开和关闭开发者工具</td></tr><tr><td><strong>Alt + F4</strong></td><td>关闭当前窗口</td></tr><tr><td><strong>Ctrl+W 或 Ctrl+F4</strong></td><td>关闭当前标签</td></tr><tr><td><strong>Ctrl+Tap</strong></td><td>转到下个打开的标签</td></tr><tr><td><strong>Ctrl+Shift+Tap</strong></td><td>转到上个打开的标签</td></tr><tr><td><strong>Ctrl+9</strong></td><td>转到最后一个打开的标签</td></tr><tr><td><strong>Alt+f</strong></td><td>打开菜单</td></tr><tr><td><strong>Ctrl+f</strong></td><td>搜索关键词</td></tr><tr><td><strong>Ctrl+e</strong></td><td>新的搜索</td></tr><tr><td><strong>Alt+Home</strong></td><td>打开主页</td></tr><tr><td><strong>Ctrl+Alt+Del</strong></td><td>清除缓存</td></tr><tr><td><strong>Ctrl+r 或 F5</strong></td><td>刷新当前页面</td></tr></tbody></table></div><h2 id="Windows-amp-Linux"><a href="#Windows-amp-Linux" class="headerlink" title="Windows &amp; Linux"></a>Windows &amp; Linux</h2><h3 id="标签页和窗口快捷键"><a href="#标签页和窗口快捷键" class="headerlink" title="标签页和窗口快捷键"></a>标签页和窗口快捷键</h3><div class="table-container"><table><thead><tr><th><strong>操作</strong></th><th><strong>快捷键</strong></th></tr></thead><tbody><tr><td>打开新窗口</td><td><strong>Ctrl + n</strong></td></tr><tr><td>在无痕模式下打开新窗口</td><td><strong>Ctrl + Shift + n</strong></td></tr><tr><td>打开新的标签页，并跳转到该标签页</td><td><strong>Ctrl + t</strong></td></tr><tr><td>重新打开最后关闭的标签页，并跳转到该标签页</td><td><strong>Ctrl + Shift + t</strong></td></tr><tr><td>跳转到下一个打开的标签页</td><td><strong>Ctrl + Tab</strong> 或 <strong>Ctrl + PgDn</strong></td></tr><tr><td>跳转到上一个打开的标签页</td><td><strong>Ctrl + Shift + Tab</strong> 或 <strong>Ctrl + PgUp</strong></td></tr><tr><td>跳转到特定标签页</td><td><strong>Ctrl + 1</strong> 到 <strong>Ctrl + 8</strong></td></tr><tr><td>跳转到最后一个标签页</td><td><strong>Ctrl + 9</strong></td></tr><tr><td>在当前标签页中打开主页</td><td><strong>Alt + Home</strong></td></tr><tr><td>打开当前标签页浏览记录中记录的上一个页面</td><td><strong>Alt + 向左箭头键</strong></td></tr><tr><td>打开当前标签页浏览记录中记录的下一个页面</td><td><strong>Alt + 向右箭头键</strong></td></tr><tr><td>关闭当前标签页</td><td><strong>Ctrl + w</strong> 或 <strong>Ctrl + F4</strong></td></tr><tr><td>关闭当前窗口</td><td><strong>Ctrl + Shift + w</strong></td></tr><tr><td>最小化当前窗口</td><td><strong>Alt + 空格键 + n</strong></td></tr><tr><td>最大化当前窗口</td><td><strong>Alt + 空格键 + x</strong></td></tr><tr><td>关闭当前窗口</td><td><strong>Alt + F4</strong></td></tr><tr><td>退出 Google Chrome</td><td><strong>Ctrl + Shift + q</strong></td></tr></tbody></table></div><h3 id="Chrome功能快捷键"><a href="#Chrome功能快捷键" class="headerlink" title="Chrome功能快捷键"></a>Chrome功能快捷键</h3><div class="table-container"><table><thead><tr><th><strong>操作</strong></th><th><strong>快捷键</strong></th></tr></thead><tbody><tr><td>打开 Chrome 菜单</td><td><strong>Alt + f</strong> 或 <strong>Alt + e</strong> 或 <strong>F10 + Enter 键</strong></td></tr><tr><td><del>显示或隐藏书签栏</del></td><td><del><strong>Ctrl + Shift + b</strong></del></td></tr><tr><td>打开书签管理器</td><td><strong>Ctrl + Shift + o</strong></td></tr><tr><td>在新标签页中打开“历史记录”页</td><td><strong>Ctrl + h</strong></td></tr><tr><td>在新标签页中打开“下载内容”页</td><td><strong>Ctrl + j</strong></td></tr><tr><td>打开 Chrome 任务管理器</td><td><strong>Shift + Esc</strong></td></tr><tr><td>将焦点放置在 Chrome 工具栏中的第一项上</td><td><strong>Shift + Alt + t</strong></td></tr><tr><td>将焦点放置在 Chrome 工具栏中的最后一项上</td><td><strong>F10</strong></td></tr><tr><td>将焦点移到未聚焦于的对话框（如果显示）中</td><td><strong>F6</strong></td></tr><tr><td>打开查找栏搜索当前网页</td><td><strong>Ctrl + f</strong> 或 <strong>F3</strong></td></tr><tr><td>跳转到与查找栏中搜索字词相匹配的下一条内容</td><td><strong>Ctrl + g</strong></td></tr><tr><td>跳转到与查找栏中搜索字词相匹配的上一条内容</td><td><strong>Ctrl + Shift + g</strong></td></tr><tr><td>打开“开发者工具”</td><td><strong>Ctrl + Shift + j</strong> 或 <strong>F12</strong></td></tr><tr><td>打开“清除浏览数据”选项</td><td><strong>Ctrl + Shift + Delete</strong></td></tr><tr><td>在新标签页中打开 Chrome 帮助中心</td><td><strong>F1</strong></td></tr><tr><td>使用其他帐号登录或以访客身份浏览</td><td><strong>Ctrl + Shift + m</strong></td></tr><tr><td>打开反馈表单</td><td><strong>Alt + Shift + i</strong></td></tr></tbody></table></div><h3 id="地址栏快捷键"><a href="#地址栏快捷键" class="headerlink" title="地址栏快捷键"></a>地址栏快捷键</h3><p>在地址栏中可使用以下快捷键：</p><div class="table-container"><table><thead><tr><th><strong>操作</strong></th><th><strong>快捷键</strong></th></tr></thead><tbody><tr><td>使用默认搜索引擎进行搜索</td><td>输入搜索字词并按 <strong>Enter</strong> 键</td></tr><tr><td>使用其他搜索引擎进行搜索</td><td>输入搜索引擎名称，然后按 <strong>Tab</strong> 键</td></tr><tr><td>为网站名称添加 <code>www.</code> 和 <code>.com</code>，并在当前标签页中打开该网站</td><td>输入网站名称并按 <strong>Ctrl + Enter</strong> 键</td></tr><tr><td>打开新的标签页并执行 Google 搜索</td><td>输入搜索字词并按 <strong>Alt + Enter</strong> 键</td></tr><tr><td>跳转到地址栏</td><td><strong>Ctrl + l</strong>、<strong>Alt + d</strong> 或 <strong>F6</strong></td></tr><tr><td>从页面中的任意位置搜索</td><td><strong>Ctrl + k</strong> 或 <strong>Ctrl + e</strong></td></tr><tr><td>从地址栏中移除联想查询内容</td><td>按<strong>向下箭头键</strong>以突出显示相应内容，然后按 <strong>Shift + Delete</strong> 键</td></tr></tbody></table></div><h3 id="网页快捷键"><a href="#网页快捷键" class="headerlink" title="网页快捷键"></a>网页快捷键</h3><div class="table-container"><table><thead><tr><th><strong>操作</strong></th><th><strong>快捷键</strong></th></tr></thead><tbody><tr><td>打开选项以打印当前网页</td><td><strong>Ctrl + p</strong></td></tr><tr><td>打开选项以保存当前网页</td><td><strong>Ctrl + s</strong></td></tr><tr><td>重新加载当前网页</td><td><strong>F5</strong> 或 <strong>Ctrl + r</strong></td></tr><tr><td>重新加载当前网页（忽略缓存的内容）</td><td><strong>Shift + F5</strong> 或 <strong>Ctrl + Shift + r</strong></td></tr><tr><td>停止加载网页</td><td><strong>Esc</strong></td></tr><tr><td>浏览下一个可点击项</td><td><strong>Tab</strong></td></tr><tr><td>浏览上一个可点击项</td><td><strong>Shift + Tab</strong></td></tr><tr><td>使用 Chrome 打开计算机中的文件</td><td>按住 <strong>Ctrl + o</strong> 键并选择文件</td></tr><tr><td>显示当前网页的 HTML 源代码（不可修改）</td><td><strong>Ctrl + u</strong></td></tr><tr><td>将当前网页保存为书签</td><td><strong>Ctrl + d</strong></td></tr><tr><td>将所有打开的标签页以书签的形式保存在新文件夹中</td><td><strong>Ctrl + Shift + d</strong></td></tr><tr><td>开启或关闭全屏模式</td><td><strong>F11</strong></td></tr><tr><td>放大网页上的所有内容</td><td><strong>Ctrl 和 +</strong></td></tr><tr><td>缩小网页上的所有内容</td><td><strong>Ctrl 和 -</strong></td></tr><tr><td>将网页上的所有内容恢复到默认大小</td><td><strong>Ctrl + 0</strong></td></tr><tr><td>向下滚动网页，一次一个屏幕</td><td><strong>空格键</strong>或 <strong>PgDn</strong></td></tr><tr><td>向上滚动网页，一次一个屏幕</td><td><strong>Shift + 空格键</strong>或 <strong>PgUp</strong></td></tr><tr><td>转到网页顶部</td><td><strong>首页</strong></td></tr><tr><td>转到网页底部</td><td><strong>末尾</strong></td></tr><tr><td>在网页上水平滚动</td><td>按住 <strong>Shift</strong> 键并滚动鼠标滚轮</td></tr><tr><td>将光标移到文本字段中的上一个字词前面</td><td><strong>Ctrl + 向左箭头键</strong></td></tr><tr><td>将光标移到文本字段中的上一个字词后面</td><td><strong>Ctrl + 向右箭头键</strong></td></tr><tr><td>删除文本字段中的上一个字词</td><td><strong>Ctrl + Backspace</strong></td></tr><tr><td>在当前标签页中打开主页</td><td><strong>Alt + Home</strong></td></tr></tbody></table></div><h3 id="鼠标快捷键"><a href="#鼠标快捷键" class="headerlink" title="鼠标快捷键"></a>鼠标快捷键</h3><p>以下快捷键要求您使用鼠标：</p><div class="table-container"><table><thead><tr><th><strong>操作</strong></th><th><strong>快捷键</strong></th></tr></thead><tbody><tr><td>在当前标签页中打开链接（仅限鼠标）</td><td>将链接拖到标签页中</td></tr><tr><td>在新的后台标签页中打开链接</td><td>按住 <strong>Ctrl</strong> 键的同时点击链接</td></tr><tr><td>打开链接，并跳转到该链接</td><td>按住 <strong>Ctrl + Shift</strong> 键的同时点击链接</td></tr><tr><td>打开链接，并跳转到该链接（仅使用鼠标）</td><td>将链接拖到标签栏的空白区域</td></tr><tr><td>在新窗口中打开链接</td><td>按住 <strong>Shift</strong> 键的同时点击链接</td></tr><tr><td>在新窗口中打开标签页（仅使用鼠标）</td><td>将标签页拖出标签栏</td></tr><tr><td>将标签页移至当前窗口（仅限鼠标）</td><td>将标签页拖到现有窗口中</td></tr><tr><td>将标签页移回其原始位置</td><td>拖动标签页的同时按 <strong>Esc</strong></td></tr><tr><td>将当前网页保存为书签</td><td>将相应网址拖动到书签栏中</td></tr><tr><td>下载链接目标</td><td>按住 <strong>Alt</strong> 键的同时点击链接</td></tr><tr><td>显示浏览记录</td><td>右键点击“后退”箭头 或“前进”箭头 ，或者点击（按住鼠标按键别松手）“后退”箭头  或“前进”箭头</td></tr><tr><td>在最大化模式和窗口模式间切换</td><td>双击标签栏的空白区域</td></tr><tr><td>放大网页上的所有内容</td><td>按住 <strong>Ctrl</strong> 键的同时向上滚动鼠标滚轮</td></tr><tr><td>缩小网页上的所有内容</td><td>按住 <strong>Ctrl</strong> 键的同时向下滚动鼠标滚轮</td></tr></tbody></table></div><h2 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h2><h3 id="标签页和窗口快捷键-1"><a href="#标签页和窗口快捷键-1" class="headerlink" title="标签页和窗口快捷键"></a>标签页和窗口快捷键</h3><div class="table-container"><table><thead><tr><th><strong>操作</strong></th><th><strong>快捷键</strong></th></tr></thead><tbody><tr><td>打开新窗口</td><td><strong>⌘ + n</strong></td></tr><tr><td>在无痕模式下打开新窗口</td><td><strong>⌘ + Shift + n</strong></td></tr><tr><td>打开新的标签页，并跳转到该标签页</td><td><strong>⌘ + t</strong></td></tr><tr><td>重新打开最后关闭的标签页，并跳转到该标签页</td><td><strong>⌘ + Shift + t</strong></td></tr><tr><td>跳转到下一个打开的标签页</td><td><strong>⌘ + Option + 向右箭头键</strong></td></tr><tr><td>跳转到上一个打开的标签页</td><td><strong>⌘ + Option + 向左箭头键</strong></td></tr><tr><td>跳转到特定标签页</td><td><strong>⌘ + 1</strong> 到 <strong>⌘ + 8</strong></td></tr><tr><td>跳转到最后一个标签页</td><td><strong>⌘ + 9</strong></td></tr><tr><td>打开当前标签页浏览记录中记录的上一个页面</td><td><strong>⌘ + [</strong> 或 <strong>⌘ + 向左箭头键</strong></td></tr><tr><td>打开当前标签页浏览记录中记录的下一个页面</td><td><strong>⌘ + ]</strong> 或 <strong>⌘ + 向右箭头键</strong></td></tr><tr><td>关闭当前标签页或弹出式窗口</td><td><strong>⌘ + w</strong></td></tr><tr><td>关闭当前窗口</td><td><strong>⌘ + Shift + w</strong></td></tr><tr><td>最小化窗口</td><td><strong>⌘ + m</strong></td></tr><tr><td>隐藏 Google Chrome</td><td><strong>⌘ + h</strong></td></tr><tr><td>退出 Google Chrome</td><td><strong>⌘ + q</strong></td></tr></tbody></table></div><h3 id="Chrome功能快捷键-1"><a href="#Chrome功能快捷键-1" class="headerlink" title="Chrome功能快捷键"></a>Chrome功能快捷键</h3><div class="table-container"><table><thead><tr><th><strong>操作</strong></th><th><strong>快捷键</strong></th></tr></thead><tbody><tr><td>显示或隐藏书签栏</td><td><strong>⌘ + Shift + b</strong></td></tr><tr><td>打开书签管理器</td><td><strong>⌘ + Option + b</strong></td></tr><tr><td>在新标签页中打开“设置”页</td><td><strong>⌘ + ,</strong></td></tr><tr><td>在新标签页中打开“历史记录”页</td><td><strong>⌘ + y</strong></td></tr><tr><td>在新标签页中打开“下载内容”页</td><td><strong>⌘ + Shift + j</strong></td></tr><tr><td>打开查找栏搜索当前网页</td><td><strong>⌘ + f</strong></td></tr><tr><td>跳转到与查找栏中搜索字词相匹配的下一条内容</td><td><strong>⌘ + g</strong></td></tr><tr><td>跳转到与查找栏中搜索字词相匹配的上一条内容</td><td><strong>⌘ + Shift + g</strong></td></tr><tr><td>打开查找栏后，搜索选定文本</td><td><strong>⌘ + e</strong></td></tr><tr><td>打开“开发者工具”</td><td><strong>⌘ + Option + i</strong></td></tr><tr><td>打开“清除浏览数据”选项</td><td><strong>⌘ + Shift + Delete</strong></td></tr><tr><td>使用其他帐号登录或以访客身份浏览</td></tr></tbody></table></div><h3 id="地址栏快捷键-1"><a href="#地址栏快捷键-1" class="headerlink" title="地址栏快捷键"></a>地址栏快捷键</h3><p>在地址栏中可使用以下快捷键：</p><div class="table-container"><table><thead><tr><th><strong>操作</strong></th><th><strong>快捷键</strong></th></tr></thead><tbody><tr><td>使用默认搜索引擎进行搜索</td><td>输入搜索字词并按 <strong>Enter</strong> 键</td></tr><tr><td>使用其他搜索引擎进行搜索</td><td>输入搜索引擎名称，然后按 <strong>Tab</strong> 键</td></tr><tr><td>为网站名称添加 <code>www.</code> 和 <code>.com</code>，并在当前标签页中打开该网站</td><td>输入网站名称并按 <strong>Control + Enter</strong> 键</td></tr><tr><td>为网站名称添加 <code>www.</code> 和 <code>.com</code>，并在新标签页中打开该网站</td><td>输入网站名称并按 <strong>Control + Shift + Enter</strong> 键</td></tr><tr><td>在新的后台标签页中打开网站</td><td>输入网址并按 <strong>⌘ + Enter</strong> 键</td></tr><tr><td>跳转到地址栏</td><td><strong>⌘ + l</strong></td></tr><tr><td>从地址栏中移除联想查询内容</td><td>按<strong>向下箭头键</strong>以突出显示相应内容，然后按 <strong>Shift + fn + Delete</strong> 键</td></tr></tbody></table></div><h3 id="网页快捷键-1"><a href="#网页快捷键-1" class="headerlink" title="网页快捷键"></a>网页快捷键</h3><div class="table-container"><table><thead><tr><th><strong>操作</strong></th><th><strong>快捷键</strong></th></tr></thead><tbody><tr><td>打开选项以打印当前网页</td><td><strong>⌘ + p</strong></td></tr><tr><td>打开选项以保存当前网页</td><td><strong>⌘ + s</strong></td></tr><tr><td>打开“页面设置”对话框</td><td><strong>⌘ + Option + p</strong></td></tr><tr><td>重新加载当前网页（忽略缓存的内容）</td><td><strong>⌘ + Shift + r</strong></td></tr><tr><td>停止加载网页</td><td><strong>Esc</strong></td></tr><tr><td>浏览下一个可点击项</td><td><strong>Tab</strong></td></tr><tr><td>浏览上一个可点击项</td><td><strong>Shift + Tab</strong></td></tr><tr><td>使用 Google Chrome 打开计算机中的文件</td><td>按住 <strong>⌘ + o</strong> 键并选择文件</td></tr><tr><td>显示当前网页的 HTML 源代码（不可修改）</td><td><strong>⌘ + Option + u</strong></td></tr><tr><td>打开 JavaScript 控制台</td><td><strong>⌘ + Option + j</strong></td></tr><tr><td>将当前网页保存为书签</td><td><strong>⌘ + d</strong></td></tr><tr><td>将所有打开的标签页以书签的形式保存在新文件夹中</td><td><strong>⌘ + Shift + d</strong></td></tr><tr><td>开启或关闭全屏模式</td><td><strong>⌘ + Ctrl + f</strong></td></tr><tr><td>放大网页上的所有内容</td><td><strong>⌘ 和 +</strong></td></tr><tr><td>缩小网页上的所有内容</td><td><strong>⌘ 和 -</strong></td></tr><tr><td>将网页上的所有内容恢复到默认大小</td><td><strong>⌘ + 0</strong></td></tr><tr><td>向下滚动网页，一次一个屏幕</td><td><strong>空格键</strong></td></tr><tr><td>向上滚动网页，一次一个屏幕</td><td><strong>Shift + 空格键</strong></td></tr><tr><td>搜索网络</td><td><strong>⌘ + Option + f</strong></td></tr><tr><td>将光标移到文本字段中的上一个字词前面</td><td><strong>Option + 向左箭头键</strong></td></tr><tr><td>将光标移到文本字段中的上一个字词后面</td><td><strong>Option + 向右箭头键</strong></td></tr><tr><td>删除文本字段中的上一个字词</td><td><strong>Option + Delete</strong></td></tr><tr><td>在当前标签页中打开主页</td><td><strong>⌘ + Shift + h</strong></td></tr></tbody></table></div><h3 id="鼠标快捷键-1"><a href="#鼠标快捷键-1" class="headerlink" title="鼠标快捷键"></a>鼠标快捷键</h3><p>以下快捷键要求您使用鼠标：</p><div class="table-container"><table><thead><tr><th><strong>操作</strong></th><th><strong>快捷键</strong></th></tr></thead><tbody><tr><td>在当前标签页中打开链接（仅限鼠标）</td><td>将链接拖到标签页中</td></tr><tr><td>在新的后台标签页中打开链接</td><td>按住 <strong>⌘</strong> 键的同时点击链接</td></tr><tr><td>打开链接，并跳转到该链接</td><td>按住 <strong>⌘ + Shift</strong> 键的同时点击链接</td></tr><tr><td>打开链接，并跳转到该链接（仅使用鼠标）</td><td>将链接拖到标签栏的空白区域</td></tr><tr><td>在新窗口中打开链接</td><td>按住 <strong>Shift</strong> 键的同时点击链接</td></tr><tr><td>在新窗口中打开标签页（仅使用鼠标）</td><td>将标签页拖出标签栏</td></tr><tr><td>将标签页移至当前窗口（仅限鼠标）</td><td>将标签页拖到现有窗口中</td></tr><tr><td>将标签页移回其原始位置</td><td>拖动标签页的同时按 <strong>Esc</strong></td></tr><tr><td>将当前网页保存为书签</td><td>将相应网址拖动到书签栏中</td></tr><tr><td>下载链接目标</td><td>按住 <strong>Option</strong> 键的同时点击链接</td></tr><tr><td>显示浏览记录</td><td>右键点击“后退”箭头  或“前进”箭头 ，或者点击（按住鼠标按键别松手）“后退”箭头 或“前进”箭头</td></tr><tr><td>将窗口高度最大化</td><td>双击标签栏的空白区域</td></tr></tbody></table></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过快捷键来使用Chrome，看起来专业一丢丢。&lt;/p&gt;
&lt;h2 id=&quot;声明和引用&quot;&gt;&lt;a href=&quot;#声明和引用&quot; class=&quot;headerlink&quot; title=&quot;声明和引用&quot;&gt;&lt;/a&gt;声明和引用&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;来源：&lt;a href=&quot;h
      
    
    </summary>
    
      <category term="Misc" scheme="https://www.blankspace.cn/categories/Misc/"/>
    
      <category term="Tools &amp; Tips" scheme="https://www.blankspace.cn/categories/Misc/Tools-Tips/"/>
    
      <category term="Shortcuts" scheme="https://www.blankspace.cn/categories/Misc/Tools-Tips/Shortcuts/"/>
    
    
      <category term="Chrome" scheme="https://www.blankspace.cn/tags/Chrome/"/>
    
      <category term="Shortcuts" scheme="https://www.blankspace.cn/tags/Shortcuts/"/>
    
  </entry>
  
  <entry>
    <title>（待完善...）Shell命令和cluster建立和使用</title>
    <link href="https://www.blankspace.cn/2018/10/08/bigdata-system-hw01/"/>
    <id>https://www.blankspace.cn/2018/10/08/bigdata-system-hw01/</id>
    <published>2018-10-08T15:16:59.000Z</published>
    <updated>2018-10-10T11:36:32.415Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Outline"><a href="#Outline" class="headerlink" title="Outline"></a>Outline</h2><ul><li>使用一个Linux server</li><li>使用一个a linux cluster</li><li>mapreduce and spark</li></ul><h3 id="协议和工具"><a href="#协议和工具" class="headerlink" title="协议和工具"></a>协议和工具</h3><p>ssh工具</p><ul><li>putty</li><li>xshell</li></ul><h3 id="获得数据"><a href="#获得数据" class="headerlink" title="获得数据"></a>获得数据</h3><ul><li>scp, winscp</li><li>sshfs</li><li>ftp</li><li>wget, curl</li></ul><h3 id="处理结构化的数据"><a href="#处理结构化的数据" class="headerlink" title="处理结构化的数据"></a>处理结构化的数据</h3><ul><li>awk<br>  awk ‘{print $3 “\t” $4} filename</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> awk '&#123;print $2 "\t" $3&#125;' a.txt</span><br><span class="line">1       1</span><br><span class="line">2       2</span><br><span class="line">3       3</span><br><span class="line">4       4</span><br><span class="line">2       3</span><br></pre></td></tr></table></figure><h3 id="查看数据"><a href="#查看数据" class="headerlink" title="查看数据"></a>查看数据</h3><p><code>ls -lh</code></p><ul><li>wc : word count</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2018211154@ubuntu:~$ wc -l wc_dataset.txt </span><br><span class="line">536700000 wc_dataset.txt</span><br></pre></td></tr></table></figure><h4 id="查看部分数据"><a href="#查看部分数据" class="headerlink" title="查看部分数据"></a>查看部分数据</h4><ul><li>more less</li><li>head tail</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">xxx@ubuntu:~$ tail -n 20 wc_dataset.txt </span><br><span class="line">words</span><br><span class="line">of</span><br><span class="line">the</span><br><span class="line">old</span><br><span class="line">Negro</span><br><span class="line">spiritual</span><br><span class="line">Free</span><br><span class="line">at</span><br><span class="line">last</span><br><span class="line">free</span><br><span class="line">at</span><br><span class="line">last</span><br><span class="line">Thank</span><br><span class="line">God</span><br><span class="line">Almighty</span><br><span class="line">we</span><br><span class="line">are</span><br><span class="line">free</span><br><span class="line">at</span><br><span class="line">last</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -n 10000 wc_dataset.txt | head -n 100</span><br></pre></td></tr></table></figure><ul><li>cat 连接</li></ul><h3 id="对于表格数据的操作"><a href="#对于表格数据的操作" class="headerlink" title="对于表格数据的操作"></a>对于表格数据的操作</h3><ul><li>cat: 打印到标准输出<ul><li>cat a  b &gt; c :列方向合并a,b到c</li></ul></li><li>paste: 行方向的合并<br> grep -c：查找,<code>grep -c pattern file</code>, c是count。</li><li>正则表达式</li><li>^开头</li><li>$结尾</li><li><code>*</code>所有</li><li><code>[]</code></li><li>{}</li><li>?</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2018211154@ubuntu:~$ grep -c "^$" wc_dataset.txt </span><br><span class="line">0</span><br></pre></td></tr></table></figure><p><code>/a/{++cnt} END {print &quot;Count = &quot;, cnt}</code> filename<br>/a 查找</p><p>`awk ‘!($0 in arr) {arr[$0]; print}’ filename</p><h3 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h3><ul><li>排序sor</li><li>unique</li></ul><h2 id="Running-commands-on-a-single-machine"><a href="#Running-commands-on-a-single-machine" class="headerlink" title="Running commands on a single machine"></a>Running commands on a single machine</h2><h3 id="amp"><a href="#amp" class="headerlink" title="&amp;"></a>&amp;</h3><p>运行多个进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a.sh &amp;</span><br><span class="line">b.sh &amp;</span><br><span class="line">c.sh &amp;</span><br><span class="line">wait</span><br></pre></td></tr></table></figure><p>编写<code>.sh</code></p><h3 id="ps-top"><a href="#ps-top" class="headerlink" title="ps, top"></a>ps, top</h3><p>查看进程</p><p>crontab： crontab -e</p><h2 id="Using-a-linux-cluster"><a href="#Using-a-linux-cluster" class="headerlink" title="Using a linux cluster"></a>Using a linux cluster</h2><h3 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h3><ul><li><p>ssh machine command</p></li><li><p>dsh, pdsh</p></li></ul><p>将私钥注册，就不需要输入密码。</p><h2 id="Using-a-linux-cluster-1"><a href="#Using-a-linux-cluster-1" class="headerlink" title="Using a linux cluster"></a>Using a linux cluster</h2><ul><li><p>pusll-based control<br>  create an agent on each server, driven by crontab</p><p>  eg. wget and run</p></li><li><p>creat a central control </p></li></ul><h2 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h3 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h3><h3 id="实验材料"><a href="#实验材料" class="headerlink" title="实验材料"></a>实验材料</h3><p><strong>实验平台</strong>：Windows 10 专业版 64-bit (10.0, Build 16299)。8192MB RAM。<br><strong>处理器</strong>：Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 CPUs), ~2.8GHz。<strong>数据集</strong>：本实验选取的是Kaggle上的<code>facebook-recruiting-iii-keyword-extraction</code>公开数据集，文件大小为3GB，数据集详情见后文。</p><p><img src="/2018/10/08/bigdata-system-hw01/data01.png" alt="使用SCP上传数据"></p><h3 id="数据获取"><a href="#数据获取" class="headerlink" title="数据获取"></a>数据获取</h3><p><strong>Kaggle</strong>是当今世界上最大的数据科学竞赛和学习社</p><ol><li>获取Kaggle账号</li><li>下载数据集</li></ol><p>每个数据集在下载之前都要阅读和同意其声明，确定之后就可以开始通过Kaggle命令来下载数据集。</p><p>对于首次下载来说，首先确保自己的电脑</p><h3 id="单机Linux实验"><a href="#单机Linux实验" class="headerlink" title="单机Linux实验"></a>单机Linux实验</h3><p><img src="/2018/10/08/bigdata-system-hw01/scp01.png" alt="使用SCP上传数据"></p><p><img src="/2018/10/08/bigdata-system-hw01/ls01.png" alt="cd, ls指令"></p><h3 id="多机协同实验"><a href="#多机协同实验" class="headerlink" title="多机协同实验"></a>多机协同实验</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Outline&quot;&gt;&lt;a href=&quot;#Outline&quot; class=&quot;headerlink&quot; title=&quot;Outline&quot;&gt;&lt;/a&gt;Outline&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用一个Linux server&lt;/li&gt;
&lt;li&gt;使用一个a linux cluste
      
    
    </summary>
    
      <category term="Data Science" scheme="https://www.blankspace.cn/categories/Data-Science/"/>
    
      <category term="Big Data" scheme="https://www.blankspace.cn/categories/Data-Science/Big-Data/"/>
    
      <category term="Big Data System" scheme="https://www.blankspace.cn/categories/Data-Science/Big-Data/Big-Data-System/"/>
    
    
      <category term="Shell" scheme="https://www.blankspace.cn/tags/Shell/"/>
    
      <category term="ssh" scheme="https://www.blankspace.cn/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>（待完善...）Shell命令快速参考</title>
    <link href="https://www.blankspace.cn/2018/10/08/linux-shell-rush-01/"/>
    <id>https://www.blankspace.cn/2018/10/08/linux-shell-rush-01/</id>
    <published>2018-10-08T01:24:03.000Z</published>
    <updated>2018-10-08T15:15:37.023Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ls-cd-pwd"><a href="#ls-cd-pwd" class="headerlink" title="ls, cd, pwd"></a>ls, cd, pwd</h2><h3 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h3><ol><li><p>命令格式<br><code>ls</code> : list</p><blockquote><p>ls <option> <dir></dir></option></p></blockquote></li><li><p>常用参数<br>使用<code>man ls</code>查看是坠吼的，笔记里就懒得写那么多了。常用的有：</p></li></ol><ul><li><code>-a</code>: <code>--all</code>, 显示全部的文件，包括以<code>.</code>开头的隐藏文件。</li><li><code>-l</code>: 长列表的形式呈现文件</li><li><code>-t</code>：以文档修改时间排序</li><li><code>-h</code>：列出人能读懂的文件大小</li><li><code>-d</code>：将目录也像问价那样列出来</li></ul><ol><li>使用范例<br><strong>1)</strong> 参数可以每个加<code>-</code>列出，也可以组合，只用一个<code>-</code><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xxx@ubuntu:~$ ls -a -l -t -h</span><br><span class="line">xxx@ubuntu:~$ ls -alth</span><br></pre></td></tr></table></figure></li></ol><p><strong>2)</strong> 列出当前目录哪些文件名(比如以<code>d</code>开头)的文件<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l d*</span><br></pre></td></tr></table></figure></p><h3 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h3><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ls-cd-pwd&quot;&gt;&lt;a href=&quot;#ls-cd-pwd&quot; class=&quot;headerlink&quot; title=&quot;ls, cd, pwd&quot;&gt;&lt;/a&gt;ls, cd, pwd&lt;/h2&gt;&lt;h3 id=&quot;ls&quot;&gt;&lt;a href=&quot;#ls&quot; class=&quot;headerlink&quot; title=&quot;ls&quot;&gt;&lt;/a&gt;ls&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;命令格式&lt;br&gt;&lt;code&gt;ls&lt;/code&gt; : list&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ls &lt;option&gt; &lt;dir&gt;&lt;/dir&gt;&lt;/option&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;常用参数&lt;br&gt;使用&lt;code&gt;man ls&lt;/code&gt;查看是坠吼的，笔记里就懒得写那么多了。常用的有：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;: &lt;code&gt;--all&lt;/code&gt;, 显示全部的文件，包括以&lt;code&gt;.&lt;/code&gt;开头的隐藏文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 长列表的形式呈现文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;：以文档修改时间排序&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt;：列出人能读懂的文件大小&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;：将目录也像问价那样列出来&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;使用范例&lt;br&gt;&lt;strong&gt;1)&lt;/strong&gt; 参数可以每个加&lt;code&gt;-&lt;/code&gt;列出，也可以组合，只用一个&lt;code&gt;-&lt;/code&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xxx@ubuntu:~$ ls -a -l -t -h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xxx@ubuntu:~$ ls -alth&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;2)&lt;/strong&gt; 列出当前目录哪些文件名(比如以&lt;code&gt;d&lt;/code&gt;开头)的文件&lt;br&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ls -l d*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;cd&quot;&gt;&lt;a href=&quot;#cd&quot; class=&quot;headerlink&quot; title=&quot;cd&quot;&gt;&lt;/a&gt;cd&lt;/h3&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.blankspace.cn/categories/Linux/"/>
    
      <category term="Shell" scheme="https://www.blankspace.cn/categories/Linux/Shell/"/>
    
    
      <category term="Shell" scheme="https://www.blankspace.cn/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>（待完善...）Kaggle机器学习入门教程笔记</title>
    <link href="https://www.blankspace.cn/2018/10/06/kaggle-learnm-ml-lv1/"/>
    <id>https://www.blankspace.cn/2018/10/06/kaggle-learnm-ml-lv1/</id>
    <published>2018-10-06T12:34:51.000Z</published>
    <updated>2018-10-08T01:24:59.966Z</updated>
    
    <content type="html"><![CDATA[<p>原教程，看<a href="https://www.kaggle.com/learn/machine-learning" target="_blank" rel="noopener">这里</a>。</p><p>课次：19。预计花费时长：4小时（实际我花了不止这么多时间）。</p><h2 id="Level-1"><a href="#Level-1" class="headerlink" title="Level 1"></a>Level 1</h2><h2 id="Level-2"><a href="#Level-2" class="headerlink" title="Level 2"></a>Level 2</h2><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原教程，看&lt;a href=&quot;https://www.kaggle.com/learn/machine-learning&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;课次：19。预计花费时长：4小时（实际我花了不止这么多时间）。&lt;/p&gt;
&lt;h2 id=&quot;Level-1&quot;&gt;&lt;a href=&quot;#Level-1&quot; class=&quot;headerlink&quot; title=&quot;Level 1&quot;&gt;&lt;/a&gt;Level 1&lt;/h2&gt;&lt;h2 id=&quot;Level-2&quot;&gt;&lt;a href=&quot;#Level-2&quot; class=&quot;headerlink&quot; title=&quot;Level 2&quot;&gt;&lt;/a&gt;Level 2&lt;/h2&gt;
    
    </summary>
    
      <category term="Data Science" scheme="https://www.blankspace.cn/categories/Data-Science/"/>
    
      <category term="Competition" scheme="https://www.blankspace.cn/categories/Data-Science/Competition/"/>
    
      <category term="Kaggle" scheme="https://www.blankspace.cn/categories/Data-Science/Competition/Kaggle/"/>
    
    
      <category term="Kaggle" scheme="https://www.blankspace.cn/tags/Kaggle/"/>
    
      <category term="Skit-learn" scheme="https://www.blankspace.cn/tags/Skit-learn/"/>
    
      <category term="Python" scheme="https://www.blankspace.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>（待完善...）向量/矩阵微分</title>
    <link href="https://www.blankspace.cn/2018/10/05/vector-matrix-derivatives/"/>
    <id>https://www.blankspace.cn/2018/10/05/vector-matrix-derivatives/</id>
    <published>2018-10-05T02:44:32.000Z</published>
    <updated>2018-10-05T15:21:46.509Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>声明：本文部分内容引用自James E. Gentle所著的《Matrix Algebra: Theory, Computations, and Applications in Statistics》。</p></blockquote><p>向量（Vector）和矩阵（Matrix）对于表达多变量数据很有用，特别是处理线性方程或者表达对象间的线性关系，使用向量和矩阵是很自然的表示。</p><h2 id="向量，矩阵概念和符号表示"><a href="#向量，矩阵概念和符号表示" class="headerlink" title="向量，矩阵概念和符号表示"></a>向量，矩阵概念和符号表示</h2><p>向量和矩阵有很多种不同的精确定义，但是我们通常认为<strong>向量</strong>就是排成直线的数组（或者说标量数组），而<strong>矩阵</strong>就是排成矩形的数组。</p><p>“通常没有特别说明，<strong>标量（Scalar）</strong>认为是实数（Real Number，注：实数是有理数 <strong>rational number</strong>  和无理数 <strong>irrational number</strong> 的总称，也就是能够在一条直线上标注出来的连续的数值。实数是和<a href="https://en.wikipedia.org/wiki/Imaginary_number" target="_blank" rel="noopener">虚数 Imaginary Number </a>相对的概念，“虚实结合”共同构成了<a href="https://en.wikipedia.org/wiki/Complex_number" target="_blank" rel="noopener">复数 Complex Number</a>。)。我们将实数组成的集合以及实数域记作$\mathbb{R}$（域field，包含集合以及操作数operator）。则我们将$\mathbb{R}$之中的元素称之为标量”</p><p>有时候，也可以从几何的角度看待向量和矩阵，在平冈和幸所著的《プログラミングのための線形代数 （用于编程的线性代数）》（卢晓南中译本叫做《程序员的数学：线性代数》）就反复强调了<strong>矩阵就是几何变换</strong>的概念。</p><h3 id="Vector"><a href="#Vector" class="headerlink" title="Vector"></a>Vector</h3><p>对于正整数n，一个向量就是一个n元组、有序集合或n个称之为标量的元素组成的数组。元素的数量称之为order（阶），有时称之为向量的“长度（length）”。</p><p>一个n-vector可以视作是n维空间中的一个点，而在这种情况下，长度代表的就是原点到该向量所表示点的欧氏距离：也就是元素平方和开平方根。</p><p>一般约定的表示向量使用小写英文字母表示，相同的字母带下标表示想两种的某个元素。向量中的第一个元素记为第1个元素，最后一个元素记为第n个元素（计算机科学中通常将第一个元素记为第0号，最后一个元素记为第n-1号。张学工老师的《模式识别》中是按照这种方式表示的，数学中偏好从1开始的记法）。</p><p>一个n-vector写作：</p><script type="math/tex; mode=display">x=\begin{bmatrix}x_1 \\x_2 \\\vdots \\x_n\end{bmatrix} \tag{1}</script><p>或者：</p><script type="math/tex; mode=display">x=\begin{bmatrix}x_1, x_2, \cdots, x_n \end{bmatrix} \tag{2}</script><p>通常向量被视为一列，所以第一种表示法更为自然，但是不太方便书写，所以会写成行向量转置的形式。</p><p>使用符号</p><script type="math/tex; mode=display">\mathbb{R^n}</script><p>记为所以n-vector组成的集合。</p><h3 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h3><p>数组是一堆元素组成的有结构的整体（collection），对应的有直线，矩形以及立方体等形状。数组的维数称为数组的秩（rank）。因此，向量是秩为1的数组，矩阵是秩为2的数组，对于标量，我们认为其实退化的秩为0的数组。数组的秩值得是数组的维数，这和矩阵的秩的概念不同，矩阵的秩表示矩阵中线性无关向量的最大数量值。</p><h3 id="Matrix"><a href="#Matrix" class="headerlink" title="Matrix"></a>Matrix</h3><p>矩阵是一个矩形的或者二维的数组。一个$n \times m$的矩阵表示有n行m列，若n==m，那么矩阵就是一个方阵。按照上面对于维数的定义，所有的矩阵都是2维的。但是到了矩阵这里，维的定义又不一样了，其代表了矩阵列的个数。</p><p>通常使用大写字母来表示矩阵，而为了表示矩阵中的元素，通常表示为对应的小写字母，加上两个下标，第一个下标表示行号，第二个下标表示列的位号。使用符号$a_{<em>j}$表示矩阵$A$的第$j$列，符号$a_{i</em>}$表示矩阵$A$的第$i$行。</p><p>$n\times m$的矩阵可以写作：</p><script type="math/tex; mode=display">A=\begin{bmatrix}a_{11}&\cdots&a_{1m} \\\vdots&\vdots&\vdots \\a_{n1}&\cdots&a_{nm} \\\end{bmatrix} \tag{3}</script><p>使用符号$A_{n\times m}$表示一个矩阵是$n\times m$列的。使用符号：</p><script type="math/tex; mode=display">\mathbb{R^{n\times m}}</script><p>记为所有$n\times m$标量矩阵组成的集合。使用符号$(A)_{ij}$指明矩阵第$i$行第$j$列的元素，$(A)_{ij}=a_{ij}$。</p><p>对于向量还有矩阵的微分和积分，是对在标量变量上相应操作的扩展。~PS:然鹅很悲催的是我记忆里无论是微积分还是线性代数，好像都没有讲对于向量还有矩阵的微分和积分，也许这就是我是个学渣的原因吧😂~。其中需要注意三个关键点：</p><ul><li>操作的变量（variables），即对谁进行微分（之后可能会介绍向量/矩阵的积分，到时候就是操作就是积分）</li><li>操作数（operand），即要进行微分的函数</li><li>操作的结果，即微分的结果。</li></ul><h2 id="微分概念和符号表示"><a href="#微分概念和符号表示" class="headerlink" title="微分概念和符号表示"></a>微分概念和符号表示</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>根据导数的定义，一个函数的导数，是函数在变量发生很小一段变化时在该处函数变化率取极限。</p><p>现在变量$\Xi$是向量、矩阵对象，而函数$\Phi$也是对于关于向量、矩阵的函数。函数$\Phi$的变化，表示为：</p><script type="math/tex; mode=display">\delta\Phi = \Phi_{new}-\Phi_{old}</script><p>变量的变化：</p><script type="math/tex; mode=display">\delta\Xi= \Xi_{new}-\Xi_{old}</script><p>它们也都可以计算出来，比方说使用<a href="https://en.wikipedia.org/wiki/Norm" target="_blank" rel="noopener">范式</a>（就将向量、矩阵转换成标量）来衡量值的变化。</p><p>但是为了计算对于向量、矩阵的导数，不能直接来除以$\delta\Xi$，因为我们没有定义除以向量、矩阵这样的运算。所以我们将其转换成一个可解的问题，即除以范数来解决，于是就可以这样定义上述函数的变化：</p><script type="math/tex; mode=display">\lim_{\Vert\delta\Xi\Vert\to0}{\frac{\Phi(\Xi+\delta\Xi) - \Phi(\Xi)}{\Vert\delta\Xi\Vert}} \tag{4}</script><p>由于无论是向量还是矩阵都定义了和标量的乘法运算，所以上式可以转换为：</p><script type="math/tex; mode=display">\lim_{t\to0}{\frac{\Phi(\Xi+t\Upsilon) - \Phi(\Xi)}{t}} \tag{5}</script><p>其中$t$是一个标量，$\Upsilon$是要被加到$\Xi$上（也就是引起改变的）的向量或者矩阵。因此，有上式要求得向量、矩阵的导数（求出了微分也就求出了），<strong>$\Phi$的类型可能是标量，向量或矩阵，同样的对于$\Xi$和$\Upsilon$也有可能是标量，向量或矩阵，要分类分析这些情况</strong>。</p><h3 id="连续性"><a href="#连续性" class="headerlink" title="连续性"></a>连续性</h3><p>根据导数的定义，如果一个函数在某点的导数存在，那么必须满足，函数在该点是连续的才行。关于向量、矩阵的导数，其连续性如何判断呢？</p><p>以下几种情况均能保证关于向量或矩阵的函数的连续性：</p><ul><li>向量或矩阵每个元素都是连续的</li><li>（正如标量的和还有积是连续的）向量、矩阵的和以及积也是连续的</li><li>连续函数的连续函数是连续的</li><li>矩阵的行列式是连续函数</li><li>矩阵的逆是连续函数</li></ul><h3 id="符号表示"><a href="#符号表示" class="headerlink" title="符号表示"></a>符号表示</h3><ul><li>$\partial/\partial x$或$\partial/\partial x^T$：对于$x$的偏导</li><li>$\partial/\partial x_i$：对于标量$x_i$的偏导</li></ul><h2 id="微分类型和计算"><a href="#微分类型和计算" class="headerlink" title="微分类型和计算"></a>微分类型和计算</h2><blockquote><p>注：由上面的概念可知，无论向量还是矩阵，其中的元素都是标量，至于导数的计算，总的思路就是将其转化为已经定义和可解的对于标量的导数。</p></blockquote><h3 id="关于标量变量的微分"><a href="#关于标量变量的微分" class="headerlink" title="关于标量变量的微分"></a>关于标量变量的微分</h3><h4 id="向量关于标量的导数"><a href="#向量关于标量的导数" class="headerlink" title="向量关于标量的导数"></a>向量关于标量的导数</h4><script type="math/tex; mode=display">\frac{\partial{y}}{\partial{x}}=\left(\frac{\partial{y_1}}{\partial{x}}, \frac{\partial{y_2}}{\partial{x}}, \dots,  \frac{\partial{y_n}}{\partial{x}} \right)^T \tag{6}</script><p>其中$y(x)=(y_1(x), y_2(x), \dots, y_n(x))^T$。向量关于标量的二阶导还有高阶导是同样是一个向量，其中每个元素是对应元素关于标量的二阶导还有高阶导。</p><p>这是怎么得来的呢？</p><p>“万事开头难”，虽然有的人能够一眼看出来，但是动手验证一遍还是蛮好的。先从具体计算$\partial y_5/\partial x$，由于$y_5(x)$是关于标量$x$的函数，所以直接计算出$\partial y_5/\partial x$就好了。而$y$是关于$x$函数组成的向量，因此同理，$\partial y_i/\partial x$都能直接求出来，因此就有式(6)的结论。</p><p>之后的情况总体也是采用这种“把草稿纸捡起来”的推导过程，从而最后完成对于对向量，矩阵的求导。</p><h4 id="矩阵关于标量的导数"><a href="#矩阵关于标量的导数" class="headerlink" title="矩阵关于标量的导数"></a>矩阵关于标量的导数</h4><p>（待完善…）</p><h4 id="函数关于标量的导数"><a href="#函数关于标量的导数" class="headerlink" title="函数关于标量的导数"></a>函数关于标量的导数</h4><h4 id="关于标量的高阶导"><a href="#关于标量的高阶导" class="headerlink" title="关于标量的高阶导"></a>关于标量的高阶导</h4><h3 id="关于向量变量的微分"><a href="#关于向量变量的微分" class="headerlink" title="关于向量变量的微分"></a>关于向量变量的微分</h3><h3 id="关于矩阵变量的微分"><a href="#关于矩阵变量的微分" class="headerlink" title="关于矩阵变量的微分"></a>关于矩阵变量的微分</h3><p>（待完善…）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;声明：本文部分内容引用自James E. Gentle所著的《Matrix Algebra: Theory, Computations, and Applications in Statistics》。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;向
      
    
    </summary>
    
      <category term="Math" scheme="https://www.blankspace.cn/categories/Math/"/>
    
      <category term="Algebra" scheme="https://www.blankspace.cn/categories/Math/Algebra/"/>
    
      <category term="Matrix Algebra" scheme="https://www.blankspace.cn/categories/Math/Algebra/Matrix-Algebra/"/>
    
    
      <category term="Vector" scheme="https://www.blankspace.cn/tags/Vector/"/>
    
      <category term="Matrix" scheme="https://www.blankspace.cn/tags/Matrix/"/>
    
      <category term="Derivative" scheme="https://www.blankspace.cn/tags/Derivative/"/>
    
  </entry>
  
  <entry>
    <title>解决SPX截图时屏幕无故放大的问题</title>
    <link href="https://www.blankspace.cn/2018/10/03/solve-screen-capture/"/>
    <id>https://www.blankspace.cn/2018/10/03/solve-screen-capture/</id>
    <published>2018-10-03T05:53:21.000Z</published>
    <updated>2018-10-03T08:17:57.835Z</updated>
    
    <content type="html"><![CDATA[<p>　　<a href="http://www.instant-screen-capture.com/" target="_blank" rel="noopener">SPX</a>是个非常好用的截图工具，特色就是其撕边功能，虽然有时候只是看上去很酷而已，但是很有趣。</p><p><img src="/2018/10/03/solve-screen-capture/SPX.png" alt="SPX截图效果"></p><p>　　此外其也提供了模糊，注释，标号，箭头，保存到文件，发送到打印机等功能。</p><p><img src="/2018/10/03/solve-screen-capture/SPX-editor.png" alt="SPX-editor"></p><p>　　在使用的过程中我发现其存在的几个BUG，第一个，在Windows 10上当我的屏幕分辨率调成最高，同时文字缩放调成推荐的125%，截图的时候程序就会莫名放大，导致只能截取屏幕一部分区域；第二个，中文注释存在问题，设置字符集为GB2312能够显示中文，但是注释后面总会跟奇怪的字符，有的时候是<code>a</code>有的时候是<code>\1</code>，而西文字符不存在这个问题。</p><p>　　对于第一个问题，一种解决方案就是文字缩放调成100%，这样就不会莫名放大了，但是电脑的图标还有文字就会显得很小，这样对视力不好。</p><p>　　后来经过摸索，应该是程序兼容性导致的，关于Windows程序兼容性的调整，看<a href="https://support.microsoft.com/zh-cn/help/15078/windows-make-older-programs-compatible" target="_blank" rel="noopener">使旧版程序与此版本的 Windows 兼容</a>，于是就将程序的属性中的兼容性改成Windows7就一切正常了（找到应用程序图标，鼠标右键属性）。</p><p>　　对于第二个问题，应该就是软件自身的BUG了，只能尽量使用英文注释了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;　　&lt;a href=&quot;http://www.instant-screen-capture.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SPX&lt;/a&gt;是个非常好用的截图工具，特色就是其撕边功能，虽然有时候只是看上去很酷而已，但是很有趣。&lt;/p&gt;

      
    
    </summary>
    
      <category term="Misc" scheme="https://www.blankspace.cn/categories/Misc/"/>
    
      <category term="Bugs" scheme="https://www.blankspace.cn/categories/Misc/Bugs/"/>
    
      <category term="OS" scheme="https://www.blankspace.cn/categories/Misc/Bugs/OS/"/>
    
    
      <category term="Windows" scheme="https://www.blankspace.cn/tags/Windows/"/>
    
      <category term="SPX" scheme="https://www.blankspace.cn/tags/SPX/"/>
    
  </entry>
  
  <entry>
    <title>Git快速参考</title>
    <link href="https://www.blankspace.cn/2018/10/02/git-quick-reference/"/>
    <id>https://www.blankspace.cn/2018/10/02/git-quick-reference/</id>
    <published>2018-10-02T12:00:53.000Z</published>
    <updated>2018-10-03T12:02:19.474Z</updated>
    
    <content type="html"><![CDATA[<p>Git进行版本控制，管理的是修改而非文件。<br>分清楚工作区，版本库，暂存区(stage)就能很好地理解其工作原理。</p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>工作区（Working Directory）：顾名思义是工作的地方，对文件的创建，修改，添加，删除等都会对其造成影响。比方说我创建的一个项目工程就是一个工作区。<br>版本库(Repository)：工作区中有一个隐藏的目录.git，不算工作区而是Git版本库。<br>Git版本库最终的就是stage（或者叫index）的暂存区，还有Git默认创建的master分支，以及指向master分支的HEAD指针。<br>文件的增删变更直接作用在工作区，第一步，变更后add，就添加到了版本库的暂存区。<br>第二步，git commit提交更改，就是将暂存区的所有内容提交到当前分支。<br>简单的理解就是，需要提交的文件修改都放在暂存区，然后一次性提交暂存区中的内容到到当前分支。</p><h2 id="文件修改和“时光穿梭”"><a href="#文件修改和“时光穿梭”" class="headerlink" title="文件修改和“时光穿梭”"></a>文件修改和“时光穿梭”</h2><ul><li>场景1：当修改了工作区的文件内容，觉得不合适，想直接丢弃工作区的修改，使用命令：<code>git checkout -- filenname</code></li><li>场景2：当修改了工作区的文件内容，觉得不合适，但是已经通过<code>git add</code>添加修改到了暂存区，想直接丢弃工作区的修改，分两步，第一步，使用命令<code>git reset HEAD filename</code>，就回到了场景1；第二步按照场景1来操作。</li><li>场景3：已经通过<code>git commit</code>提交了不合适的修改到版本库中，想要撤销本次提交，就执行版本退回命令，<code>git reset --hard commid_id</code>进行时光穿梭。穿梭前可以使用<code>git log</code>查看历史版本；当还需要重返未来的时候，使用<code>git reflog</code>查看历史命令。</li></ul><h2 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h2><p>使用<code>rm filename</code>来在工作区删除文件，现在工作区和版本库就不一致了。</p><ul><li>场景1：确认删除该文件，使用<code>git rm filename</code>命令，然后<code>git commit</code></li><li>场景2：属于误删操作，但是还没有提交到版本库，使用命令<code>git checkout -- filename</code>，使用版本库中的版本替换到工作区的版本。</li><li>场景3：已经提交到版本库，发现属于误删操作，执行版本回退来时光穿梭。</li></ul><h2 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h2><ul><li>创建和切换分支：<code>git checkout -b branch_name</code>.相当于两句指令：<code>git branch branch_name</code>, 随后<code>git checkout branch_name</code></li></ul><p>ps: 关于Vim重命名文件，在退出之前输入<code>:sav new_file_name</code>即可，会保存一个相同内容的副本，而不是在当前修改文件中修改，要想这样需要安装特定的插件。</p><ul><li>查看分支：<code>git branch</code></li><li>创建分支：<code>git branch &lt;branch_name&gt;</code></li><li>切换到分支：<code>git checkout &lt;branch_name&gt;</code></li><li>创建加切换：<code>git checkout -b &lt;branch_name&gt;</code></li><li>合并到当前：<code>git merge &lt;branch_name&gt;</code></li><li>删除分支：<code>git branch -d &lt;branch_name&gt;</code></li></ul><h3 id="冲突解决"><a href="#冲突解决" class="headerlink" title="冲突解决"></a>冲突解决</h3><p>新建分支在上面修改后，add, commit，然后切换到要汇入的分支上，假如此时在当前分支上也做了修改，执行<code>git merge &lt;branch_to_be_merged&gt;</code>时发现无法合并，使用<code>git status</code>查看冲突位置，然后修改冲突（就是文件中标注的位置，通常就是同一行内容不一致导致的）,修改完毕后重新add，commit，以及merge就行了。<br>可以使用<code>git log --graph &lt;--abbrev-comit&gt; 查看分支合并情况图</code>。</p><h3 id="分支管理策略"><a href="#分支管理策略" class="headerlink" title="分支管理策略"></a>分支管理策略</h3><p>通常合并分支使用的都是<code>Fast forward</code>模式，在合并的时候加上<code>--no-ff</code>参数就可以采用普通模式合并，历史记录中会有分支的信息，而<code>Fast forward</code>在合并后删除分支日志历史中就没有关于此分支的记录，也就看不出来曾经做过合并。</p><h3 id="保存和恢复现场"><a href="#保存和恢复现场" class="headerlink" title="保存和恢复现场"></a>保存和恢复现场</h3><p>场景：当手头正在多某项工作，突然接到任务需要马上处理，手头的工作不得不停下，但是还没有完善到能够提交的程度。该怎么办？<br>相当于打断点，保存现场，使用<code>git stach</code>保存当前的工作。然后去处理临时或者紧急的任务（比如说修复某个bug）。当临时或者紧急任务处理完毕后，返回来恢复现场继续原来的工作。<br>恢复现场使用,<code>git stash list</code>查看有哪些存档，然后使用<code>git stash apply &lt;stash@{xxx}&gt;</code>来恢复，参数是可选的用于多次stash之后选择要恢复的那个。这种方式恢复后stash的内容不删除，需要输入<code>git stash drop</code>来删除。<br>另一种方式能够恢复的同时删除stash，即使用<code>git stash pop</code>。</p><h3 id="删除未合并过的分支"><a href="#删除未合并过的分支" class="headerlink" title="删除未合并过的分支"></a>删除未合并过的分支</h3><p>场景：导师给了个新需求要做，做完了却悲催地听说不需要了，现在要删除这个分支。<code>git brach -d &lt;feature&gt;</code>，会提示<code>The branch &#39;&lt;feature&gt;&#39; is note fully merged. If you are sure you want to delete it , run&#39;git branch -D &lt;feature&gt;&#39;</code>。</p><p>所以<code>git branch -D &lt;branch_name&gt;</code>就是强制删除未曾合并过的分支的命令。</p><h2 id="远程分支操作"><a href="#远程分支操作" class="headerlink" title="远程分支操作"></a>远程分支操作</h2><ul><li>场景1：在本地创建了一个分支，但是远程没有，commit之后希望push到远程比方说Github上，但是不是master分支，而是一个目前还没有创建的分支上。使用<code>git push -u origin &lt;local_branch_name&gt;</code>,这样就在远程创建了和<code>local_branch_name</code>同名分支。</li><li><p>场景2：远端已经存在和本地同名或者不同名的分支，希望这时将本地的分支推到远端上，<code>git push &lt;remote_name&gt; &lt;local_branch_name&gt;:&lt;remote_branch_name&gt;</code></p></li><li><p>场景3：当有多人同时提交到一个分支，自己的提交和他人的有冲突，这时按照提交的提示来做，一般会提示<code>git pull ...</code>，将远程的提交pul下来。pull下来后再次提交，若发现push有冲突，则需要手动解决冲突，解决方法和上文的冲突解决一致。解决后再进行push即可。</p></li><li>场景4：远程已经存在某个分支，想在本地创建一个分支和远程的分支对应起来。使用<code>git checkout -b local_branch_name origin/remote_branch_name</code></li><li>场景5：远程已经存在某个分支，本地同时存在某个分支，现在要把两个关联起来，使用<code>git branch --set-upstream-to=origin/remote_branch_name local_branch_name</code>,制定本地分支和远程分支的关联。这样就能解决某些时候pull失败的问题，比如<code>no tracking information</code>。</li></ul><h2 id="rebase整理push历史"><a href="#rebase整理push历史" class="headerlink" title="rebase整理push历史"></a>rebase整理push历史</h2><ul><li>场景：本地版本历史过多，有的commit并没有push到远程，所以再查看历史的时候希望只查看push过的提交，使用<code>git rebase</code>命令实现。</li></ul><h2 id="tag"><a href="#tag" class="headerlink" title="tag"></a>tag</h2><h3 id="为commit打上标签"><a href="#为commit打上标签" class="headerlink" title="为commit打上标签"></a>为commit打上标签</h3><ul><li><p>场景1：某个工作已经进行了多次的编辑和提交。过了一阵子，导师或者其他人说，请把之前的某次提交打包一下。这时选择查找<code>commit_id</code>显得就不是很方便。<code>tag</code>就相当于是对于commit的起的别名，使用<code>git tag &lt;tag_name&gt;</code>默认为最近的一次提交打上标签，在产看log的时候，就会出现相应的标签提示。使用<code>git show tag_name</code>来查看<code>tag_name</code>对应的那次提交。</p></li><li><p>场景2：之前的提交忘记打标签，现在需要对历史中某个版本打上标签。使用<code>git tag tag_name commit_id</code>。使用<code>git tag</code>查看所有标签。</p></li><li><p>场景3：创建某个标签的同时，还提供一些说明信息。使用<code>git tag -a tag_name -m &quot;balala enengy... commit_id</code>。使用<code>git show tag_name</code>就能查看到相应说明文字。</p></li></ul><h3 id="标签操作"><a href="#标签操作" class="headerlink" title="标签操作"></a>标签操作</h3><ul><li>场景1，打错了，在本地删除：<code>git tag -d tag_name</code></li><li>场景2，推送某次提交的标签到远程：<code>git push origin tag_name</code></li><li>场景3，推送全部尚未推送到远程的标签：<code>git push origin --tags</code></li><li>场景4，删除远程的标签：先要删除本地的要删除的标签。然后执行，<code>git push origin :refs/tags/tag_name</code>，然后去远程查看标签是否被删除。</li></ul><h2 id="自定义Git"><a href="#自定义Git" class="headerlink" title="自定义Git"></a>自定义Git</h2><p>除了配置<code>user.name</code>, <code>user.email</code>之外还可以配置一些东西。</p><ul><li>场景，命令行工作颜色单调：配置显示ui, <code>git config --global color.ui true</code>，使文件名也被不同的颜色标注。（我使用git bash本身就是有颜色的）。</li></ul><h2 id="设置忽略规则"><a href="#设置忽略规则" class="headerlink" title="设置忽略规则"></a>设置忽略规则</h2><p>这个功能非常有必要，特别是在一些项目中有比较大或者涉及敏感信息的文件时（比如密码，很大很大的数据集等）。编写<code>.gitignore</code>文件来屏蔽某些类型的文件。文件每行表示一个屏蔽规则，一个规则可以屏蔽某个具体的文件或者某一类或几类文件的提交。可以使用通配符来编写规则，<code>#</code>作为注释。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 要忽略提交什么文件</span></span><br><span class="line">file_name</span><br><span class="line">*.dat</span><br><span class="line">*.py[cod]</span><br><span class="line">db.ini</span><br></pre></td></tr></table></figure></p><ul><li>当发现某个在屏蔽规则中文件恰好必须要提交上去，使用<code>git add -f file_name.file_type</code></li><li>使用<code>git check-ignore</code>来检查屏蔽规则</li></ul><h2 id="配置命令别名"><a href="#配置命令别名" class="headerlink" title="配置命令别名"></a>配置命令别名</h2><ul><li>通常使用缩写来给某个长的命令或者组合当做别名，来提高生产效率。使用<code>git config --global alias.s_name &#39;long_command_name&#39;</code>,比如：<code>git config --global alias.br branch</code>，就可以使用<code>git br</code>代替<code>git branch</code>操作了。</li></ul><p>例如：</p><blockquote><p>git config —global alias.lg “log —color —graph —pretty=format:’%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset’ —abbrev-commit”</p></blockquote><ul><li>删除某个别名：别名放在隐藏文件<code>.git/congif</code>的<code>[alias]</code>后，删除别名直接把对应的行删除即可。也可以在用户主目录下的隐藏文件<code>.gitconfig</code>中也存放了当前用户的Git配置，可以删除文件重新配置命令。</li></ul><h2 id="架设Git服务器"><a href="#架设Git服务器" class="headerlink" title="架设Git服务器"></a>架设Git服务器</h2><p><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137583770360579bc4b458f044ce7afed3df579123eca000" target="_blank" rel="noopener">参考1</a><br><a href="https://git-scm.com/book/en/v2/Git-on-the-Server-Getting-Git-on-a-Server" target="_blank" rel="noopener">参考2</a></p><p>总的来说基于Linux系统，在裸Git仓库上配置协议，就能搭建成功。有相关工具来完善和方便管理,<code>Gitosis</code>管理公钥，使用<code>Gitolite</code>进行权限管理。</p><p>当然还有<code>GitLab</code>方便搭建私有Git仓库，进行团队管理。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Git进行版本控制，管理的是修改而非文件。&lt;br&gt;分清楚工作区，版本库，暂存区(stage)就能很好地理解其工作原理。&lt;/p&gt;
&lt;h2 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h
      
    
    </summary>
    
      <category term="Version Control" scheme="https://www.blankspace.cn/categories/Version-Control/"/>
    
      <category term="Git" scheme="https://www.blankspace.cn/categories/Version-Control/Git/"/>
    
    
      <category term="Git" scheme="https://www.blankspace.cn/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>聚类分析</title>
    <link href="https://www.blankspace.cn/2018/09/27/data-mining-ch01-s02-01/"/>
    <id>https://www.blankspace.cn/2018/09/27/data-mining-ch01-s02-01/</id>
    <published>2018-09-27T00:59:31.000Z</published>
    <updated>2018-09-27T09:00:47.524Z</updated>
    
    <content type="html"><![CDATA[<p>　　学习不应当机械重复和记忆，要善于将现有的知识和理论用自己的方式进行理解和转化，就是用自己的话说出来。</p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>　　人类（但不仅仅是人类）通常很擅长也很喜欢聚类。在对世界的观察和理解中，要将特定的对象指派到特定的组中，“物以类聚，人以群分”，我感觉其实也就是分类啦，只不过为了和原始数据提供标记的分类任务区分开来，没有提供标记的任务就是聚类啦，组也不叫组了，就叫做簇cluster，聚类就叫做clustering。聚类不是终点而是起点，为很多工作做下铺垫，比如说数据分析。</p><p>　　聚类有为了理解的，也有为了建立高层的抽象的，前一种比如生物学中的层次分类，界门纲目科属种（kingdom，phylum，class，order，family，genus，species）；信息检索中搜索结果返回若干簇；心理学和医学研究等。后一种如某些算法为了减小分析复杂度，对于数据集的簇使用而不是整个数据集，能够得到和使用所有数据相媲美的结果；还有如压缩，如向量量化，将数据对象使用所在簇的序索引来表示；发现最近邻等。</p><h3 id="簇的定义"><a href="#簇的定义" class="headerlink" title="簇的定义"></a>簇的定义</h3><p>　　可以说是一个个的分组，组内之间相互之间是相似的（相关的），而不同组之间的对象是不同的（不想关的）。组内的相似性（同质性）越大越好，组间差别越大越好。分组依赖于数据的特性以及期望的结果，所以实际上是需求驱动的。</p><h3 id="聚类类型"><a href="#聚类类型" class="headerlink" title="聚类类型"></a>聚类类型</h3><ul><li>划分 VS 层次：划分聚类（partitional clustering）使不同簇之间不能重叠，每个对象恰在一个簇中。层次聚类（hierarchical clustering），按层次嵌套组成一棵树，除叶子节点之外，所有的簇都是其子簇的并。</li><li>互斥，重叠和模糊：重叠（overlapping）/非互斥（non-exclusive）聚类反映一个对象属于多个类。模糊聚类（fuzzy clustering）将属于某个簇给定一个权重系数，介于0和1之间，0代表绝对不属于，1代表确定一定加肯定，每个兑现的权重之和等于1。同理的概率聚类也是计算一个对象属于每个簇的概率，所有概率之和等于1。实践中通常将最大系数，最高概率的对象指派到对应的类上，从而转换成为互斥聚类。</li><li>完全 VS 部分：完全聚类将每个对象指派到一个簇。而部分聚类选取感兴趣的点，而忽略一些噪声或者背景，离群点等，“找主要矛盾”。</li></ul><h3 id="簇的分类"><a href="#簇的分类" class="headerlink" title="簇的分类"></a>簇的分类</h3><ul><li>明显分离的：簇与簇一看就有明显的分界</li><li>基于原型：原型通常是质心/中心点或者其他最具代表性的点，而簇中每个对象到原型的距离（相似度）都要到其他簇的距离更近（更相似）。</li><li>基于图的：图就有边和点，点通常是对象，边就是对象之间的联系，簇可以定义成联通分量，也就是相互联通单数不和分量外的对象联通。还有基于邻近的簇（contiguity-based cluster），也就是两点点只有距离大于一定的阈值，才算作它们是联通的。此外还有比如基于团（clique）的基于图的其他聚类，团也就是集合之间所有的点完全连接。</li><li>基于密度：可以和噪声区分</li><li>概念簇：通常是很具体的簇中对象的共同性质</li><li>…</li></ul><h3 id="学习路径"><a href="#学习路径" class="headerlink" title="学习路径"></a>学习路径</h3><ul><li>K均值：其实基于原型的，划分的，聚类技术，将数据聚成你所指定的K个簇</li><li>凝聚的层次聚类：基于层次的聚类：开始每个点就是一个簇，然后，重复合并最相靠近的簇，直到产生包含所有点的簇，就形成了整个层次聚类的树。其中某些技术可能是基于图的聚类。</li><li>DBSCAN：产生于划分聚类的基于密度的聚类算法，簇的个数由算法自动确定，低密度的区域中的点被视为噪声而忽略，即DBSCAN不产生完全聚类。</li></ul><h2 id="K均值"><a href="#K均值" class="headerlink" title="K均值"></a>K均值</h2><h3 id="基本K均值"><a href="#基本K均值" class="headerlink" title="基本K均值"></a>基本K均值</h3><p>使用伪代码的形式进行描述：</p><div class="table-container"><table><thead><tr><th>算法：基本K均值算法</th></tr></thead><tbody><tr><td>1.选择(一般是随机选)K个点作为初始质心<br>2.repeat<br>3.　对每个点求其到K个质心的距离，离谁最近则指派到哪个质心，从而所有点最终形成K个簇<br>4.　对每个簇重新计算质心<br>5.until  每个簇的质心不在发生变化</td></tr></tbody></table></div><h3 id="K均值：附加问题"><a href="#K均值：附加问题" class="headerlink" title="K均值：附加问题"></a>K均值：附加问题</h3><p>我的问题：</p><ol><li>$\color{\red}{为啥收敛？}$</li></ol><p>　　首先预热一下：</p><p>　　给定m个点组成的点集$X=\{x_1, x_2, \dots, x_m\}$，满足$C, x_i \in \mathbb{R^n}$：</p><script type="math/tex; mode=display">E(X)=\operatorname*{argmin}_{x_i \in X} \Vert x_i - C \Vert_2</script><p>　　则C为X的几何中心。比方说二维平面上的三个点，连接在一起组成一个三角形，则到三个点欧氏距离最短的点是 它们的重心，即$C=( (x_1+x_2+x_3)/3, (y_1, y_2, y_3)/3 )$。</p><p>　　直观上来讲是这样的，但是如何证明呢？“实际上很困难，其没有确定的表达式。但是可以采用迭代的过程每次求一个近似值来逼近”<a href="https://en.wikipedia.org/wiki/Geometric_median" target="_blank" rel="noopener">[1]</a>，而且能够确定一定能够找到其全局最优解，而不会陷入到局部最优解中，原因就在于其实一个凸函数，为什么呢？原因是“每个样本点到到特定点的距离是一个凸函数，凸函数相加也是凸函数”。具体的算法有<a href="https://en.wikipedia.org/wiki/Geometric_median#Computation" target="_blank" rel="noopener"><strong>Weiszfeld法</strong> </a>：</p><p><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b3fb215363358f12687100710caff0e86cd9d26b" alt="Weiszfeld算法"></p><p>当其估计点落在给定点上时可能无法收敛，可以通过修改来使其收敛。</p><p>　　为什么k-means是收敛的，本质原因在于<strong>其属于EM算法的范畴，而EM算法是收敛的</strong>。</p><p>　　什么是EM算法，全称叫做Expectation Maximum，也就是期望最大，属于高斯混合模型（混合高斯模型）中讲到的内容。</p><p>之所以使用混合高斯模型，原因就在于聚类划分太“一刀切（hard）”，也就是说是“hard assignment”，然而现实情况存在一些“灰色地带”。由上面几何中心的推导可以得知，使用k均值算法，形成的簇都是基于中心的簇，</p><p>所以就要引入概率来衡量采样所归属的簇。</p><h3 id="二分K均值"><a href="#二分K均值" class="headerlink" title="二分K均值"></a>二分K均值</h3><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　学习不应当机械重复和记忆，要善于将现有的知识和理论用自己的方式进行理解和转化，就是用自己的话说出来。&lt;/p&gt;
&lt;h2 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h2&gt;&lt;p&gt;　　人类（但不仅仅是人类）通常很擅长也很喜欢聚类。在对世界的观察和理解中，要将特定的对象指派到特定的组中，“物以类聚，人以群分”，我感觉其实也就是分类啦，只不过为了和原始数据提供标记的分类任务区分开来，没有提供标记的任务就是聚类啦，组也不叫组了，就叫做簇cluster，聚类就叫做clustering。聚类不是终点而是起点，为很多工作做下铺垫，比如说数据分析。&lt;/p&gt;
&lt;p&gt;　　聚类有为了理解的，也有为了建立高层的抽象的，前一种比如生物学中的层次分类，界门纲目科属种（kingdom，phylum，class，order，family，genus，species）；信息检索中搜索结果返回若干簇；心理学和医学研究等。后一种如某些算法为了减小分析复杂度，对于数据集的簇使用而不是整个数据集，能够得到和使用所有数据相媲美的结果；还有如压缩，如向量量化，将数据对象使用所在簇的序索引来表示；发现最近邻等。&lt;/p&gt;
&lt;h3 id=&quot;簇的定义&quot;&gt;&lt;a href=&quot;#簇的定义&quot; class=&quot;headerlink&quot; title=&quot;簇的定义&quot;&gt;&lt;/a&gt;簇的定义&lt;/h3&gt;&lt;p&gt;　　可以说是一个个的分组，组内之间相互之间是相似的（相关的），而不同组之间的对象是不同的（不想关的）。组内的相似性（同质性）越大越好，组间差别越大越好。分组依赖于数据的特性以及期望的结果，所以实际上是需求驱动的。&lt;/p&gt;
&lt;h3 id=&quot;聚类类型&quot;&gt;&lt;a href=&quot;#聚类类型&quot; class=&quot;headerlink&quot; title=&quot;聚类类型&quot;&gt;&lt;/a&gt;聚类类型&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;划分 VS 层次：划分聚类（partitional clustering）使不同簇之间不能重叠，每个对象恰在一个簇中。层次聚类（hierarchical clustering），按层次嵌套组成一棵树，除叶子节点之外，所有的簇都是其子簇的并。&lt;/li&gt;
&lt;li&gt;互斥，重叠和模糊：重叠（overlapping）/非互斥（non-exclusive）聚类反映一个对象属于多个类。模糊聚类（fuzzy clustering）将属于某个簇给定一个权重系数，介于0和1之间，0代表绝对不属于，1代表确定一定加肯定，每个兑现的权重之和等于1。同理的概率聚类也是计算一个对象属于每个簇的概率，所有概率之和等于1。实践中通常将最大系数，最高概率的对象指派到对应的类上，从而转换成为互斥聚类。&lt;/li&gt;
&lt;li&gt;完全 VS 部分：完全聚类将每个对象指派到一个簇。而部分聚类选取感兴趣的点，而忽略一些噪声或者背景，离群点等，“找主要矛盾”。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;簇的分类&quot;&gt;&lt;a href=&quot;#簇的分类&quot; class=&quot;headerlink&quot; title=&quot;簇的分类&quot;&gt;&lt;/a&gt;簇的分类&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;明显分离的：簇与簇一看就有明显的分界&lt;/li&gt;
&lt;li&gt;基于原型：原型通常是质心/中心点或者其他最具代表性的点，而簇中每个对象到原型的距离（相似度）都要到其他簇的距离更近（更相似）。&lt;/li&gt;
&lt;li&gt;基于图的：图就有边和点，点通常是对象，边就是对象之间的联系，簇可以定义成联通分量，也就是相互联通单数不和分量外的对象联通。还有基于邻近的簇（contiguity-based cluster），也就是两点点只有距离大于一定的阈值，才算作它们是联通的。此外还有比如基于团（clique）的基于图的其他聚类，团也就是集合之间所有的点完全连接。&lt;/li&gt;
&lt;li&gt;基于密度：可以和噪声区分&lt;/li&gt;
&lt;li&gt;概念簇：通常是很具体的簇中对象的共同性质&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;学习路径&quot;&gt;&lt;a href=&quot;#学习路径&quot; class=&quot;headerlink&quot; title=&quot;学习路径&quot;&gt;&lt;/a&gt;学习路径&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;K均值：其实基于原型的，划分的，聚类技术，将数据聚成你所指定的K个簇&lt;/li&gt;
&lt;li&gt;凝聚的层次聚类：基于层次的聚类：开始每个点就是一个簇，然后，重复合并最相靠近的簇，直到产生包含所有点的簇，就形成了整个层次聚类的树。其中某些技术可能是基于图的聚类。&lt;/li&gt;
&lt;li&gt;DBSCAN：产生于划分聚类的基于密度的聚类算法，簇的个数由算法自动确定，低密度的区域中的点被视为噪声而忽略，即DBSCAN不产生完全聚类。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;K均值&quot;&gt;&lt;a href=&quot;#K均值&quot; class=&quot;headerlink&quot; title=&quot;K均值&quot;&gt;&lt;/a&gt;K均值&lt;/h2&gt;&lt;h3 id=&quot;基本K均值&quot;&gt;&lt;a href=&quot;#基本K均值&quot; class=&quot;headerlink&quot; title=&quot;基本K均值&quot;&gt;&lt;/a&gt;基本K均值&lt;/h3&gt;&lt;p&gt;使用伪代码的形式进行描述：&lt;/p&gt;
&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;算法：基本K均值算法&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1.选择(一般是随机选)K个点作为初始质心&lt;br&gt;2.repeat&lt;br&gt;3.　对每个点求其到K个质心的距离，离谁最近则指派到哪个质心，从而所有点最终形成K个簇&lt;br&gt;4.　对每个簇重新计算质心&lt;br&gt;5.until  每个簇的质心不在发生变化&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&quot;K均值：附加问题&quot;&gt;&lt;a href=&quot;#K均值：附加问题&quot; class=&quot;headerlink&quot; title=&quot;K均值：附加问题&quot;&gt;&lt;/a&gt;K均值：附加问题&lt;/h3&gt;&lt;p&gt;我的问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;$\color{\red}{为啥收敛？}$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;　　首先预热一下：&lt;/p&gt;
&lt;p&gt;　　给定m个点组成的点集$X=\{x_1, x_2, \dots, x_m\}$，满足$C, x_i \in \mathbb{R^n}$：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
E(X)=\operatorname*{argmin}_{x_i \in X} \Vert x_i - C \Vert_2&lt;/script&gt;&lt;p&gt;　　则C为X的几何中心。比方说二维平面上的三个点，连接在一起组成一个三角形，则到三个点欧氏距离最短的点是 它们的重心，即$C=( (x_1+x_2+x_3)/3, (y_1, y_2, y_3)/3 )$。&lt;/p&gt;
&lt;p&gt;　　直观上来讲是这样的，但是如何证明呢？“实际上很困难，其没有确定的表达式。但是可以采用迭代的过程每次求一个近似值来逼近”&lt;a href=&quot;https://en.wikipedia.org/wiki/Geometric_median&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;[1]&lt;/a&gt;，而且能够确定一定能够找到其全局最优解，而不会陷入到局部最优解中，原因就在于其实一个凸函数，为什么呢？原因是“每个样本点到到特定点的距离是一个凸函数，凸函数相加也是凸函数”。具体的算法有&lt;a href=&quot;https://en.wikipedia.org/wiki/Geometric_median#Computation&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Weiszfeld法&lt;/strong&gt; &lt;/a&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://wikimedia.org/api/rest_v1/media/math/render/svg/b3fb215363358f12687100710caff0e86cd9d26b&quot; alt=&quot;Weiszfeld算法&quot;&gt;&lt;/p&gt;
&lt;p&gt;当其估计点落在给定点上时可能无法收敛，可以通过修改来使其收敛。&lt;/p&gt;
&lt;p&gt;　　为什么k-means是收敛的，本质原因在于&lt;strong&gt;其属于EM算法的范畴，而EM算法是收敛的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;　　什么是EM算法，全称叫做Expectation Maximum，也就是期望最大，属于高斯混合模型（混合高斯模型）中讲到的内容。&lt;/p&gt;
&lt;p&gt;之所以使用混合高斯模型，原因就在于聚类划分太“一刀切（hard）”，也就是说是“hard assignment”，然而现实情况存在一些“灰色地带”。由上面几何中心的推导可以得知，使用k均值算法，形成的簇都是基于中心的簇，&lt;/p&gt;
&lt;p&gt;所以就要引入概率来衡量采样所归属的簇。&lt;/p&gt;
&lt;h3 id=&quot;二分K均值&quot;&gt;&lt;a href=&quot;#二分K均值&quot; class=&quot;headerlink&quot; title=&quot;二分K均值&quot;&gt;&lt;/a&gt;二分K均值&lt;/h3&gt;
    
    </summary>
    
      <category term="Data Science" scheme="https://www.blankspace.cn/categories/Data-Science/"/>
    
      <category term="Data Mining" scheme="https://www.blankspace.cn/categories/Data-Science/Data-Mining/"/>
    
    
      <category term="Unsupervised Learning" scheme="https://www.blankspace.cn/tags/Unsupervised-Learning/"/>
    
      <category term="Clustering" scheme="https://www.blankspace.cn/tags/Clustering/"/>
    
  </entry>
  
  <entry>
    <title>（待完善...）LaTeX笔记</title>
    <link href="https://www.blankspace.cn/2018/09/23/latex-notes-01/"/>
    <id>https://www.blankspace.cn/2018/09/23/latex-notes-01/</id>
    <published>2018-09-23T02:14:46.000Z</published>
    <updated>2018-10-05T04:29:41.882Z</updated>
    
    <content type="html"><![CDATA[<p>&#160; &#160; &#160; &#160;为什么要学习$\LaTeX$？原因很简单，“虽说气质为王，但往往也要看脸”，所以相当多的高质量的论文，书籍都会使用这种精确控制，外行看起来狂拽酷炫，不明嚼栗的排版工具，所以想发论文，这种排版神器的使用是圈子里必备且默认你会的技能。另外，我个人觉得Word十分好用，十分良心，所见即所得，功能十分强大。有人会褒一个贬一个，我觉得Word和$\LaTeX$都很好。现在有的期刊，会议也接受Word格式的论文，在有必要的时候学习也是极好的。</p><p>&#160; &#160; &#160; &#160;看过一些介绍$\LaTeX$ 的文章和书籍,很多作者写的很好，总体上也是从易到难，由浅入深。但是我看完之后，或者边看边学的过程中，总感觉缺了点什么，那就是这么多的规则，这么多符号，这么多宏包，什么时候才能用 $\LaTeX$ 写一篇像样的文章，什么时候才能写书，写论文呀！</p><p>&#160; &#160; &#160; &#160;我个人不想对$\LaTeX$ 做太深的研究，也不想向别人炫耀这种看似困难的工具的使用，只想发挥其该有的功用——更好地书写排版。所以在这里记下学习时的简单实用的笔记，尽快上手，同样也是边学习边练习边回顾，希望最终写出专业的论文以及其他优雅的出版物还有演示文稿，以掌握一个科研人员基本的素质。</p><h2 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h2><ul><li><a href="http://www.latexstudio.net/" target="_blank" rel="noopener">$\LaTeX$开源小屋</a>：很不错的中文$\LaTeX$社区，几乎应有尽有，资料很全</li><li><a href="https://cn.sharelatex.com/" target="_blank" rel="noopener">ShareLaTeX</a>：有丰富的模板，可以用来模仿</li><li>GitHub，简书，CSDN等，上面都已一些相关的模板，文章等</li><li><a href="https://tex.stackexchange.com/" target="_blank" rel="noopener">TeX StackExchange</a>还有Stack Overflow：遇到问题可以去上面查询</li></ul><h2 id="基础结构"><a href="#基础结构" class="headerlink" title="基础结构"></a>基础结构</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">\documentclass&#123;article&#125;</span><br><span class="line"></span><br><span class="line">\usepackage&#123;ctex&#125;  %引入中文支持</span><br><span class="line"></span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line">\LaTeX&#123;&#125; 你好  </span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure><p><img src="/2018/09/23/latex-notes-01/图1-latex最基础模板.png" alt="图1-latex最基础模板：\begin{environment\}...\end{environment} 中为内容，上面为导言区"></p><div class="bs-callout bs-callout-info"><h3 id="用法"><a href="#用法" class="headerlink" title="   用法"></a><i class="fa fa-info-circle"></i>   用法</h3><ul><li><code>\命令名称[备选参数]{（必选）参数}</code>：叫做命令。个人感觉类似于HTML中的<code>&lt;!DOCTYPE html&gt;</code>。例如，<code>\documentclass[a4paper]{ctexart}</code>，花括号中为必选参数，设置文档类型为<code>ctexart</code>。中括号里备选参数<code>a4paper</code>，将文档大小设置为A4纸大小。</li><li><code>\begin[...]{environment} ...\end{environment}</code>：叫做环境，用于控制<code>\begin[...]{environment}</code>和<code>\end{environment}</code>之间的内容。</li></ul></div><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;为什么要学习$\LaTeX$？原因很简单，“虽说气质为王，但往往也要看脸”，所以相当多的高质量的论文，书籍都会使用这种精确控制，外行看起来狂拽酷炫，不明嚼栗的排版工具，所以想发论文，这种排版神器的使用是圈子里必备且默认你会的技能。另外，我个人觉得Word十分好用，十分良心，所见即所得，功能十分强大。有人会褒一个贬一个，我觉得Word和$\LaTeX$都很好。现在有的期刊，会议也接受Word格式的论文，在有必要的时候学习也是极好的。&lt;/p&gt;
&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;看过一些介绍$\LaTeX$ 的文章和书籍,很多作者写的很好，总体上也是从易到难，由浅入深。但是我看完之后，或者边看边学的过程中，总感觉缺了点什么，那就是这么多的规则，这么多符号，这么多宏包，什么时候才能用 $\LaTeX$ 写一篇像样的文章，什么时候才能写书，写论文呀！&lt;/p&gt;
&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;我个人不想对$\LaTeX$ 做太深的研究，也不想向别人炫耀这种看似困难的工具的使用，只想发挥其该有的功用——更好地书写排版。所以在这里记下学习时的简单实用的笔记，尽快上手，同样也是边学习边练习边回顾，希望最终写出专业的论文以及其他优雅的出版物还有演示文稿，以掌握一个科研人员基本的素质。&lt;/p&gt;
&lt;h2 id=&quot;学习资源&quot;&gt;&lt;a href=&quot;#学习资源&quot; class=&quot;headerlink&quot; title=&quot;学习资源&quot;&gt;&lt;/a&gt;学习资源&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.latexstudio.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;$\LaTeX$开源小屋&lt;/a&gt;：很不错的中文$\LaTeX$社区，几乎应有尽有，资料很全&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cn.sharelatex.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ShareLaTeX&lt;/a&gt;：有丰富的模板，可以用来模仿&lt;/li&gt;
&lt;li&gt;GitHub，简书，CSDN等，上面都已一些相关的模板，文章等&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tex.stackexchange.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;TeX StackExchange&lt;/a&gt;还有Stack Overflow：遇到问题可以去上面查询&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;基础结构&quot;&gt;&lt;a href=&quot;#基础结构&quot; class=&quot;headerlink&quot; title=&quot;基础结构&quot;&gt;&lt;/a&gt;基础结构&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;\documentclass&amp;#123;article&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\usepackage&amp;#123;ctex&amp;#125;  %引入中文支持&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\begin&amp;#123;document&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	\LaTeX&amp;#123;&amp;#125; 你好  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\end&amp;#123;document&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/2018/09/23/latex-notes-01/图1-latex最基础模板.png&quot; alt=&quot;图1-latex最基础模板：\begin{environment\}...\end{environment} 中为内容，上面为导言区&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;&lt;h3 id=&quot;用法&quot;&gt;&lt;a href=&quot;#用法&quot; class=&quot;headerlink&quot; title=&quot;   用法&quot;&gt;&lt;/a&gt;&lt;i class=&quot;fa fa-info-circle&quot;&gt;&lt;/i&gt;   用法&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\命令名称[备选参数]{（必选）参数}&lt;/code&gt;：叫做命令。个人感觉类似于HTML中的&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt;。例如，&lt;code&gt;\documentclass[a4paper]{ctexart}&lt;/code&gt;，花括号中为必选参数，设置文档类型为&lt;code&gt;ctexart&lt;/code&gt;。中括号里备选参数&lt;code&gt;a4paper&lt;/code&gt;，将文档大小设置为A4纸大小。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\begin[...]{environment} ...\end{environment}&lt;/code&gt;：叫做环境，用于控制&lt;code&gt;\begin[...]{environment}&lt;/code&gt;和&lt;code&gt;\end{environment}&lt;/code&gt;之间的内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
    
    </summary>
    
      <category term="Typesetting" scheme="https://www.blankspace.cn/categories/Typesetting/"/>
    
      <category term="TeX" scheme="https://www.blankspace.cn/categories/Typesetting/TeX/"/>
    
      <category term="LaTex" scheme="https://www.blankspace.cn/categories/Typesetting/TeX/LaTex/"/>
    
    
      <category term="TeX" scheme="https://www.blankspace.cn/tags/TeX/"/>
    
      <category term="LaTex" scheme="https://www.blankspace.cn/tags/LaTex/"/>
    
  </entry>
  
  <entry>
    <title>GitHub关键概念</title>
    <link href="https://www.blankspace.cn/2018/09/22/github-keywords/"/>
    <id>https://www.blankspace.cn/2018/09/22/github-keywords/</id>
    <published>2018-09-22T01:50:06.000Z</published>
    <updated>2018-09-22T06:49:43.352Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Git-amp-GitHub"><a href="#Git-amp-GitHub" class="headerlink" title="Git &amp; GitHub"></a>Git &amp; GitHub</h2><p><a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a>是一个版本控制软件：</p><p>读作<code>[gɪt]</code>,拼音读作<code>gē yì te</code>。</p><blockquote><p>Git is a <a href="https://git-scm.com/about/free-and-open-source" target="_blank" rel="noopener">free and open source</a> distributed version control system designed to handle everything from small to very large projects with speed and efficiency. </p></blockquote><p><a href="https://github.com" target="_blank" rel="noopener">GitHub</a>是一个网站：</p><p>读作<code>[gɪt hʌb]</code>，拼音读作<code>gē yì te hà bo</code></p><blockquote><p>GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere. </p></blockquote><p>通常自己一个人开发时使用Git有助于对代码版本进行控制，返回到之前任意时间点，能够合并多个分支流，解决或查看冲突。假如有协作开发作用更大。</p><p>而使用GitHub不仅能够用来存储Git库，其还会提供以下操作：</p><ul><li>文档需求：使用提出问题（issues），可以提出新的功能需求，记录缺陷，从而让团队进行开发</li><li>独立分支流记录：使用分支（branches）和拉请求（pull requests）,可以在不同的分支或功能下进行合作。</li><li>评估工作进展：通过查看拉请求（pull requests）列表，可以查看目前工作状态下的所有不同功能，通过单击列出的任何一个拉请求命令，可以看到最新变化以及所有关于该动的讨论。</li><li>看到团队的进展：通过使用Insights，可以看到团队的工作进展和脉冲（pulse）。</li></ul><h2 id="关键概念-术语"><a href="#关键概念-术语" class="headerlink" title="关键概念/术语"></a>关键概念/术语</h2><p>由于目前GitHub还是英文的，所以刚开始学习时不是很明白其中的某些概念，可能会觉得有点不明所以，经过一段时间的摸索，特整理如下：</p><h3 id="repository（仓库）"><a href="#repository（仓库）" class="headerlink" title="repository（仓库）"></a>repository（仓库）</h3><p>单数，a repository；复数，repositories。概念：</p><blockquote><p>a place, building, or receptacle where things are or may be stored. </p></blockquote><p>相当于一个项目（Project）文件夹，仓库名也就是项目文件夹名称，可以在里面存放代码，各种和项目有关的文档等。</p><p><img src="/2018/09/22/github-keywords/关键词示意.png" alt="1537585381087"></p><h3 id="watch（关注）"><a href="#watch（关注）" class="headerlink" title="watch（关注）"></a>watch（关注）</h3><p>长期关注某个项目的进展，设置在某些情况下发送提醒（到邮箱）。</p><h3 id="star（收藏）"><a href="#star（收藏）" class="headerlink" title="star（收藏）"></a>star（收藏）</h3><p>觉得某个项目不错，收藏一下，给个小星星，方便以后查看，同时也是对项目开发者的赞赏。</p><h3 id="fork（分叉）"><a href="#fork（分叉）" class="headerlink" title="fork（分叉）"></a>fork（分叉）</h3><p>有时候我没有直接改变某个项目的许可，或者我想参与一个你不知道的人或者团队的开源项目，就可以克隆，修改，并使用拉请求的方式将其提交到最初的项目中。</p><h3 id="issue（提出问题）"><a href="#issue（提出问题）" class="headerlink" title="issue（提出问题）"></a>issue（提出问题）</h3><p>用来讨论功能/需求，跟踪缺陷，或者两者兼备。比如我发现某个项目在PC上没问题，但移植到手机上就出现了位置的错误，就可以开一个issue来记录错误的过程。</p><h3 id="pull-request（拉请求）"><a href="#pull-request（拉请求）" class="headerlink" title="pull request（拉请求）"></a>pull request（拉请求）</h3><p>原先拉请求是用来请求别人复查自己已经完成的工作，并将它们合并到主分支上。现在，拉请求常用在一个流程的早期阶段，可以讨论可能的功能。</p><h3 id="clone（克隆）"><a href="#clone（克隆）" class="headerlink" title="clone（克隆）"></a>clone（克隆）</h3><p>将项目库复制到本地。例如我下载一个项目的副本，在本地将其中的某个bug修复，然后再提交回GitHub。</p><h3 id="wiki（维基文档记录）"><a href="#wiki（维基文档记录）" class="headerlink" title="wiki（维基文档记录）"></a>wiki（维基文档记录）</h3><p>当Readme比较长了，可以使用wiki进行文档记录，各个章节页面用简单的链接关系相联系。（通常我看好像没多少中国开发者选择使用wiki，有的readme相当长）。</p><h3 id="commit（提交）"><a href="#commit（提交）" class="headerlink" title="commit（提交）"></a>commit（提交）</h3><p>将一个或者多个文件的修改保存到Git历史记录中，都会创建一个新的提交。</p><h3 id="branch（分支）"><a href="#branch（分支）" class="headerlink" title="branch（分支）"></a>branch（分支）</h3><ul><li>主分支（master branch）</li><li>功能分支（feature branch）</li></ul><h3 id="merge（合并）"><a href="#merge（合并）" class="headerlink" title="merge（合并）"></a>merge（合并）</h3><p>将一个分支的全部工作合并到另一个分支，GitHub会在合并前检查是否有冲突并给出修改意见。</p><h3 id="release（发布）"><a href="#release（发布）" class="headerlink" title="release（发布）"></a>release（发布）</h3><p>到了一定阶段，项目已经差不多了，就可以新建release，版本x.xx，来发布正式版供别人打包下载。</p><h2 id="GitHub学习资源"><a href="#GitHub学习资源" class="headerlink" title="GitHub学习资源"></a>GitHub学习资源</h2><ul><li>初级：<a href="https://services.github.com/" target="_blank" rel="noopener">https://services.github.com/</a></li><li>高级：<a href="https://developer.github.com/" target="_blank" rel="noopener">https://developer.github.com/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Git-amp-GitHub&quot;&gt;&lt;a href=&quot;#Git-amp-GitHub&quot; class=&quot;headerlink&quot; title=&quot;Git &amp;amp; GitHub&quot;&gt;&lt;/a&gt;Git &amp;amp; GitHub&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://g
      
    
    </summary>
    
      <category term="Version Control" scheme="https://www.blankspace.cn/categories/Version-Control/"/>
    
      <category term="Git" scheme="https://www.blankspace.cn/categories/Version-Control/Git/"/>
    
      <category term="GitHub" scheme="https://www.blankspace.cn/categories/Version-Control/Git/GitHub/"/>
    
    
      <category term="GitHub" scheme="https://www.blankspace.cn/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>（待完善...）使用Scikit-learn进行机器学习</title>
    <link href="https://www.blankspace.cn/2018/09/20/scikit-learn-ch01/"/>
    <id>https://www.blankspace.cn/2018/09/20/scikit-learn-ch01/</id>
    <published>2018-09-20T12:57:03.000Z</published>
    <updated>2018-10-05T04:29:16.481Z</updated>
    
    <content type="html"><![CDATA[<p>我发现使用scikit-learn上手简单，设计合理，接口统一，内置了很多机器学习算法，所以使用其来进行机器学习数据分析是一种极好的选择。根据一些经典的例子，复现和演示，来加深对于机器学习算法的理解。</p><h2 id="线性回归"><a href="#线性回归" class="headerlink" title="线性回归"></a>线性回归</h2><h3 id="一元线性回归"><a href="#一元线性回归" class="headerlink" title="一元线性回归"></a>一元线性回归</h3><h3 id="多元线性回归"><a href="#多元线性回归" class="headerlink" title="多元线性回归"></a>多元线性回归</h3><h2 id="监督学习"><a href="#监督学习" class="headerlink" title="监督学习"></a>监督学习</h2><h3 id="基于支持向量机（SVM）的图像分类"><a href="#基于支持向量机（SVM）的图像分类" class="headerlink" title="基于支持向量机（SVM）的图像分类"></a>基于支持向量机（SVM）的图像分类</h3><h3 id="基于朴素贝叶斯（Naive-Bayes）的文本分类"><a href="#基于朴素贝叶斯（Naive-Bayes）的文本分类" class="headerlink" title="基于朴素贝叶斯（Naïve Bayes）的文本分类"></a>基于朴素贝叶斯（Naïve Bayes）的文本分类</h3><h3 id="决策树"><a href="#决策树" class="headerlink" title="决策树"></a>决策树</h3><h3 id="房价预测"><a href="#房价预测" class="headerlink" title="房价预测"></a>房价预测</h3><h2 id="无监督学习"><a href="#无监督学习" class="headerlink" title="无监督学习"></a>无监督学习</h2><h3 id="主成分分析"><a href="#主成分分析" class="headerlink" title="主成分分析"></a>主成分分析</h3><h3 id="聚类"><a href="#聚类" class="headerlink" title="聚类"></a>聚类</h3><h2 id="高级特征"><a href="#高级特征" class="headerlink" title="高级特征"></a>高级特征</h2><h3 id="Grid-Search"><a href="#Grid-Search" class="headerlink" title="Grid Search"></a>Grid Search</h3><p>…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我发现使用scikit-learn上手简单，设计合理，接口统一，内置了很多机器学习算法，所以使用其来进行机器学习数据分析是一种极好的选择。根据一些经典的例子，复现和演示，来加深对于机器学习算法的理解。&lt;/p&gt;
&lt;h2 id=&quot;线性回归&quot;&gt;&lt;a href=&quot;#线性回归&quot; cl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Frequency Analysis</title>
    <link href="https://www.blankspace.cn/2018/09/20/pandas-experiment-01/"/>
    <id>https://www.blankspace.cn/2018/09/20/pandas-experiment-01/</id>
    <published>2018-09-20T08:12:36.000Z</published>
    <updated>2018-09-20T09:06:35.824Z</updated>
    
    <content type="html"><![CDATA[<p><strong>最关键的就一句代码，直接跳到最后即可。</strong></p><p>数据挖掘课程作业貌似要用到MATLAB以及SPSS，而 实验设计和数据分析课程主要使用Excel。除了SPSS之外其余两个都接触过，今天安装了SPSS，安装后的新手指引很贴心，给了一个收入分析的例子，全程不到5分钟，最后出来了很棒的统计以及可视化结果，长成下面这样。感觉Pandas，NumPy，Matplotlib也能做，试着复现一下，同时回顾一下Pandas的操作。</p><p><img src="/2018/09/20/pandas-experiment-01/spss示例结果.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入数据，../DataSets/demoFreq1.csv</span></span><br><span class="line">demoFreq_path = <span class="string">"../DataSets/demoFreq1.csv"</span></span><br><span class="line">df = pd.read_csv(demoFreq_path)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>id</th>      <th>gender</th>      <th>bdate</th>      <th>age</th>      <th>educ</th>      <th>jobcat</th>      <th>salbegin</th>      <th>salary</th>      <th>service</th>      <th>prevexp</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>m</td>      <td>7/26/1981</td>      <td>36</td>      <td>15</td>      <td>4</td>      <td>44010.0</td>      <td>98799.81000</td>      <td>98</td>      <td>144</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>m</td>      <td>11/13/1987</td>      <td>30</td>      <td>16</td>      <td>5</td>      <td>30562.5</td>      <td>69679.86600</td>      <td>98</td>      <td>36</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>f</td>      <td>1/16/1959</td>      <td>58</td>      <td>12</td>      <td>2</td>      <td>19560.0</td>      <td>37179.92850</td>      <td>98</td>      <td>381</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>f</td>      <td>10/6/1994</td>      <td>23</td>      <td>8</td>      <td>1</td>      <td>21516.0</td>      <td>37959.92700</td>      <td>98</td>      <td>190</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>m</td>      <td>8/1/1984</td>      <td>33</td>      <td>15</td>      <td>5</td>      <td>34230.0</td>      <td>77999.85000</td>      <td>98</td>      <td>138</td>    </tr>    <tr>      <th>5</th>      <td>6</td>      <td>m</td>      <td>2/12/1988</td>      <td>29</td>      <td>15</td>      <td>5</td>      <td>22005.0</td>      <td>55639.89300</td>      <td>98</td>      <td>67</td>    </tr>    <tr>      <th>6</th>      <td>7</td>      <td>m</td>      <td>10/17/1985</td>      <td>32</td>      <td>15</td>      <td>5</td>      <td>30562.5</td>      <td>62399.88000</td>      <td>98</td>      <td>114</td>    </tr>    <tr>      <th>7</th>      <td>8</td>      <td>f</td>      <td>10/27/1995</td>      <td>22</td>      <td>12</td>      <td>2</td>      <td>15892.5</td>      <td>37959.92700</td>      <td>98</td>      <td>0</td>    </tr>    <tr>      <th>8</th>      <td>9</td>      <td>f</td>      <td>7/16/1975</td>      <td>42</td>      <td>15</td>      <td>5</td>      <td>20782.5</td>      <td>48359.90700</td>      <td>98</td>      <td>115</td>    </tr>    <tr>      <th>9</th>      <td>10</td>      <td>f</td>      <td>8/6/1975</td>      <td>42</td>      <td>12</td>      <td>2</td>      <td>22005.0</td>      <td>41599.92000</td>      <td>98</td>      <td>244</td>    </tr>    <tr>      <th>10</th>      <td>11</td>      <td>f</td>      <td>7/31/1979</td>      <td>38</td>      <td>16</td>      <td>5</td>      <td>26895.0</td>      <td>52519.89900</td>      <td>98</td>      <td>143</td>    </tr>    <tr>      <th>11</th>      <td>12</td>      <td>m</td>      <td>7/3/1993</td>      <td>24</td>      <td>8</td>      <td>1</td>      <td>19560.0</td>      <td>49139.90550</td>      <td>98</td>      <td>26</td>    </tr>    <tr>      <th>12</th>      <td>13</td>      <td>m</td>      <td>1/7/1990</td>      <td>27</td>      <td>15</td>      <td>5</td>      <td>23227.5</td>      <td>48099.90750</td>      <td>98</td>      <td>34</td>    </tr>    <tr>      <th>13</th>      <td>14</td>      <td>f</td>      <td>8/19/1978</td>      <td>39</td>      <td>15</td>      <td>5</td>      <td>27384.0</td>      <td>60839.88300</td>      <td>98</td>      <td>137</td>    </tr>    <tr>      <th>14</th>      <td>15</td>      <td>m</td>      <td>2/19/1992</td>      <td>25</td>      <td>12</td>      <td>2</td>      <td>22005.0</td>      <td>47319.90900</td>      <td>97</td>      <td>66</td>    </tr>    <tr>      <th>15</th>      <td>16</td>      <td>m</td>      <td>5/10/1994</td>      <td>23</td>      <td>12</td>      <td>2</td>      <td>24450.0</td>      <td>70719.86400</td>      <td>97</td>      <td>24</td>    </tr>    <tr>      <th>16</th>      <td>17</td>      <td>m</td>      <td>1/8/1992</td>      <td>25</td>      <td>15</td>      <td>5</td>      <td>23227.5</td>      <td>79733.18000</td>      <td>97</td>      <td>48</td>    </tr>    <tr>      <th>17</th>      <td>18</td>      <td>m</td>      <td>9/10/1985</td>      <td>32</td>      <td>16</td>      <td>4</td>      <td>44841.3</td>      <td>179832.98750</td>      <td>97</td>      <td>70</td>    </tr>    <tr>      <th>18</th>      <td>19</td>      <td>m</td>      <td>2/9/1992</td>      <td>25</td>      <td>12</td>      <td>2</td>      <td>23227.5</td>      <td>73319.85900</td>      <td>97</td>      <td>103</td>    </tr>    <tr>      <th>19</th>      <td>20</td>      <td>f</td>      <td>7/15/1969</td>      <td>48</td>      <td>12</td>      <td>2</td>      <td>18826.5</td>      <td>45499.91250</td>      <td>97</td>      <td>48</td>    </tr>    <tr>      <th>20</th>      <td>21</td>      <td>f</td>      <td>8/11/1992</td>      <td>25</td>      <td>16</td>      <td>5</td>      <td>24450.0</td>      <td>67339.87050</td>      <td>97</td>      <td>17</td>    </tr>    <tr>      <th>21</th>      <td>22</td>      <td>m</td>      <td>3/17/1970</td>      <td>47</td>      <td>12</td>      <td>2</td>      <td>20782.5</td>      <td>37699.92750</td>      <td>97</td>      <td>315</td>    </tr>    <tr>      <th>22</th>      <td>23</td>      <td>f</td>      <td>9/5/1994</td>      <td>23</td>      <td>15</td>      <td>5</td>      <td>18093.0</td>      <td>41599.92000</td>      <td>97</td>      <td>75</td>    </tr>    <tr>      <th>23</th>      <td>24</td>      <td>f</td>      <td>9/17/1962</td>      <td>55</td>      <td>12</td>      <td>2</td>      <td>14670.0</td>      <td>29379.94350</td>      <td>97</td>      <td>124</td>    </tr>    <tr>      <th>24</th>      <td>25</td>      <td>f</td>      <td>12/22/1971</td>      <td>45</td>      <td>15</td>      <td>5</td>      <td>14670.0</td>      <td>36659.92950</td>      <td>97</td>      <td>171</td>    </tr>    <tr>      <th>25</th>      <td>26</td>      <td>m</td>      <td>4/30/1996</td>      <td>21</td>      <td>15</td>      <td>5</td>      <td>20538.0</td>      <td>53819.89650</td>      <td>96</td>      <td>14</td>    </tr>    <tr>      <th>26</th>      <td>27</td>      <td>m</td>      <td>9/9/1983</td>      <td>34</td>      <td>19</td>      <td>4</td>      <td>44792.4</td>      <td>104649.79875</td>      <td>96</td>      <td>96</td>    </tr>    <tr>      <th>27</th>      <td>28</td>      <td>m</td>      <td>10/1/1992</td>      <td>25</td>      <td>15</td>      <td>5</td>      <td>23227.5</td>      <td>56419.89150</td>      <td>96</td>      <td>43</td>    </tr>    <tr>      <th>28</th>      <td>29</td>      <td>m</td>      <td>7/20/1973</td>      <td>44</td>      <td>19</td>      <td>6</td>      <td>130367.4</td>      <td>233999.55000</td>      <td>96</td>      <td>199</td>    </tr>    <tr>      <th>29</th>      <td>30</td>      <td>m</td>      <td>3/10/1991</td>      <td>26</td>      <td>15</td>      <td>5</td>      <td>23227.5</td>      <td>54079.89600</td>      <td>96</td>      <td>54</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>444</th>      <td>445</td>      <td>m</td>      <td>1/24/1993</td>      <td>24</td>      <td>15</td>      <td>5</td>      <td>26895.0</td>      <td>48619.90650</td>      <td>66</td>      <td>84</td>    </tr>    <tr>      <th>445</th>      <td>446</td>      <td>m</td>      <td>1/24/1988</td>      <td>29</td>      <td>16</td>      <td>4</td>      <td>71883.0</td>      <td>173333.00000</td>      <td>66</td>      <td>128</td>    </tr>    <tr>      <th>446</th>      <td>447</td>      <td>m</td>      <td>12/23/1990</td>      <td>26</td>      <td>15</td>      <td>5</td>      <td>33496.5</td>      <td>84933.17000</td>      <td>66</td>      <td>86</td>    </tr>    <tr>      <th>447</th>      <td>448</td>      <td>f</td>      <td>11/26/1962</td>      <td>54</td>      <td>12</td>      <td>2</td>      <td>16626.0</td>      <td>28339.94550</td>      <td>66</td>      <td>163</td>    </tr>    <tr>      <th>448</th>      <td>449</td>      <td>m</td>      <td>6/25/1995</td>      <td>22</td>      <td>16</td>      <td>4</td>      <td>35452.5</td>      <td>121333.10000</td>      <td>65</td>      <td>19</td>    </tr>    <tr>      <th>449</th>      <td>450</td>      <td>m</td>      <td>1/11/1984</td>      <td>33</td>      <td>19</td>      <td>4</td>      <td>57017.4</td>      <td>95333.15000</td>      <td>65</td>      <td>129</td>    </tr>    <tr>      <th>450</th>      <td>451</td>      <td>m</td>      <td>1/9/1999</td>      <td>18</td>      <td>15</td>      <td>5</td>      <td>23227.5</td>      <td>49399.90500</td>      <td>65</td>      <td>20</td>    </tr>    <tr>      <th>451</th>      <td>452</td>      <td>m</td>      <td>2/3/1983</td>      <td>34</td>      <td>12</td>      <td>2</td>      <td>29340.0</td>      <td>49919.90400</td>      <td>65</td>      <td>210</td>    </tr>    <tr>      <th>452</th>      <td>453</td>      <td>m</td>      <td>1/28/1960</td>      <td>57</td>      <td>15</td>      <td>5</td>      <td>25672.5</td>      <td>42379.91850</td>      <td>65</td>      <td>338</td>    </tr>    <tr>      <th>453</th>      <td>454</td>      <td>m</td>      <td>1/18/1995</td>      <td>22</td>      <td>19</td>      <td>4</td>      <td>50937.5</td>      <td>157083.03125</td>      <td>65</td>      <td>18</td>    </tr>    <tr>      <th>454</th>      <td>455</td>      <td>m</td>      <td>7/9/1993</td>      <td>24</td>      <td>16</td>      <td>4</td>      <td>31785.0</td>      <td>75659.85450</td>      <td>65</td>      <td>19</td>    </tr>    <tr>      <th>455</th>      <td>456</td>      <td>m</td>      <td>4/8/1989</td>      <td>28</td>      <td>19</td>      <td>4</td>      <td>69291.3</td>      <td>129999.75000</td>      <td>65</td>      <td>54</td>    </tr>    <tr>      <th>456</th>      <td>457</td>      <td>m</td>      <td>11/17/1997</td>      <td>19</td>      <td>15</td>      <td>5</td>      <td>23227.5</td>      <td>54859.89450</td>      <td>65</td>      <td>10</td>    </tr>    <tr>      <th>457</th>      <td>458</td>      <td>m</td>      <td>12/27/1994</td>      <td>22</td>      <td>19</td>      <td>4</td>      <td>46846.2</td>      <td>107249.79375</td>      <td>65</td>      <td>26</td>    </tr>    <tr>      <th>458</th>      <td>459</td>      <td>f</td>      <td>8/2/2000</td>      <td>17</td>      <td>12</td>      <td>2</td>      <td>18337.5</td>      <td>37699.92750</td>      <td>65</td>      <td>0</td>    </tr>    <tr>      <th>459</th>      <td>460</td>      <td>f</td>      <td>2/2/1999</td>      <td>18</td>      <td>12</td>      <td>2</td>      <td>20782.5</td>      <td>38999.92500</td>      <td>65</td>      <td>24</td>    </tr>    <tr>      <th>460</th>      <td>461</td>      <td>f</td>      <td>5/1/1995</td>      <td>22</td>      <td>8</td>      <td>1</td>      <td>22005.0</td>      <td>37439.92800</td>      <td>65</td>      <td>173</td>    </tr>    <tr>      <th>461</th>      <td>462</td>      <td>f</td>      <td>4/9/1993</td>      <td>24</td>      <td>16</td>      <td>4</td>      <td>31785.0</td>      <td>59643.88530</td>      <td>65</td>      <td>79</td>    </tr>    <tr>      <th>462</th>      <td>463</td>      <td>f</td>      <td>4/6/1964</td>      <td>53</td>      <td>15</td>      <td>5</td>      <td>23227.5</td>      <td>35879.93100</td>      <td>65</td>      <td>241</td>    </tr>    <tr>      <th>463</th>      <td>464</td>      <td>m</td>      <td>9/10/1991</td>      <td>26</td>      <td>19</td>      <td>4</td>      <td>53790.0</td>      <td>82419.84150</td>      <td>64</td>      <td>27</td>    </tr>    <tr>      <th>464</th>      <td>465</td>      <td>m</td>      <td>1/10/1992</td>      <td>25</td>      <td>12</td>      <td>2</td>      <td>26895.0</td>      <td>58759.88700</td>      <td>64</td>      <td>106</td>    </tr>    <tr>      <th>465</th>      <td>466</td>      <td>f</td>      <td>12/6/1977</td>      <td>39</td>      <td>12</td>      <td>2</td>      <td>22005.0</td>      <td>40559.92200</td>      <td>64</td>      <td>198</td>    </tr>    <tr>      <th>466</th>      <td>467</td>      <td>f</td>      <td>2/7/1997</td>      <td>20</td>      <td>16</td>      <td>5</td>      <td>31785.0</td>      <td>56939.89050</td>      <td>64</td>      <td>20</td>    </tr>    <tr>      <th>467</th>      <td>468</td>      <td>f</td>      <td>5/21/1995</td>      <td>22</td>      <td>16</td>      <td>4</td>      <td>32567.4</td>      <td>96633.14750</td>      <td>64</td>      <td>36</td>    </tr>    <tr>      <th>468</th>      <td>469</td>      <td>f</td>      <td>11/22/1993</td>      <td>23</td>      <td>15</td>      <td>5</td>      <td>22738.5</td>      <td>43679.91600</td>      <td>64</td>      <td>57</td>    </tr>    <tr>      <th>469</th>      <td>470</td>      <td>m</td>      <td>7/14/1993</td>      <td>24</td>      <td>12</td>      <td>2</td>      <td>25672.5</td>      <td>45499.91250</td>      <td>64</td>      <td>69</td>    </tr>    <tr>      <th>470</th>      <td>471</td>      <td>m</td>      <td>1/24/1996</td>      <td>21</td>      <td>15</td>      <td>5</td>      <td>25672.5</td>      <td>45759.91200</td>      <td>64</td>      <td>32</td>    </tr>    <tr>      <th>471</th>      <td>472</td>      <td>m</td>      <td>8/14/1995</td>      <td>22</td>      <td>15</td>      <td>5</td>      <td>25672.5</td>      <td>67859.86950</td>      <td>63</td>      <td>46</td>    </tr>    <tr>      <th>472</th>      <td>473</td>      <td>f</td>      <td>5/18/1967</td>      <td>50</td>      <td>12</td>      <td>2</td>      <td>20782.5</td>      <td>37179.92850</td>      <td>63</td>      <td>139</td>    </tr>    <tr>      <th>473</th>      <td>474</td>      <td>f</td>      <td>4/28/1998</td>      <td>19</td>      <td>12</td>      <td>2</td>      <td>23227.5</td>      <td>50959.90200</td>      <td>63</td>      <td>9</td>    </tr>  </tbody></table><p>474 rows × 10 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(df[<span class="string">'salary'</span>])</span><br></pre></td></tr></table></figure><pre><code>0       98799.810001       69679.866002       37179.928503       37959.927004       77999.850005       55639.893006       62399.880007       37959.927008       48359.907009       41599.9200010      52519.8990011      49139.9055012      48099.9075013      60839.8830014      47319.9090015      70719.8640016      79733.1800017     179832.9875018      73319.8590019      45499.9125020      67339.8705021      37699.9275022      41599.9200023      29379.9435024      36659.9295025      53819.8965026     104649.7987527      56419.8915028     233999.5500029      54079.89600           ...     444     48619.90650445    173333.00000446     84933.17000447     28339.94550448    121333.10000449     95333.15000450     49399.90500451     49919.90400452     42379.91850453    157083.03125454     75659.85450455    129999.75000456     54859.89450457    107249.79375458     37699.92750459     38999.92500460     37439.92800461     59643.88530462     35879.93100463     82419.84150464     58759.88700465     40559.92200466     56939.89050467     96633.14750468     43679.91600469     45499.91250470     45759.91200471     67859.86950472     37179.92850473     50959.90200Name: salary, Length: 474, dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(type(df[<span class="string">'salary'</span>])) <span class="comment"># 每一列就是一个Series，相当于SPSS中的变量值</span></span><br></pre></td></tr></table></figure><pre><code>&lt;class &#39;pandas.core.series.Series&#39;&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head(<span class="number">10</span>) <span class="comment"># 查看前n条记录</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>id</th>      <th>gender</th>      <th>bdate</th>      <th>age</th>      <th>educ</th>      <th>jobcat</th>      <th>salbegin</th>      <th>salary</th>      <th>service</th>      <th>prevexp</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>m</td>      <td>7/26/1981</td>      <td>36</td>      <td>15</td>      <td>4</td>      <td>44010.0</td>      <td>98799.8100</td>      <td>98</td>      <td>144</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>m</td>      <td>11/13/1987</td>      <td>30</td>      <td>16</td>      <td>5</td>      <td>30562.5</td>      <td>69679.8660</td>      <td>98</td>      <td>36</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>f</td>      <td>1/16/1959</td>      <td>58</td>      <td>12</td>      <td>2</td>      <td>19560.0</td>      <td>37179.9285</td>      <td>98</td>      <td>381</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>f</td>      <td>10/6/1994</td>      <td>23</td>      <td>8</td>      <td>1</td>      <td>21516.0</td>      <td>37959.9270</td>      <td>98</td>      <td>190</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>m</td>      <td>8/1/1984</td>      <td>33</td>      <td>15</td>      <td>5</td>      <td>34230.0</td>      <td>77999.8500</td>      <td>98</td>      <td>138</td>    </tr>    <tr>      <th>5</th>      <td>6</td>      <td>m</td>      <td>2/12/1988</td>      <td>29</td>      <td>15</td>      <td>5</td>      <td>22005.0</td>      <td>55639.8930</td>      <td>98</td>      <td>67</td>    </tr>    <tr>      <th>6</th>      <td>7</td>      <td>m</td>      <td>10/17/1985</td>      <td>32</td>      <td>15</td>      <td>5</td>      <td>30562.5</td>      <td>62399.8800</td>      <td>98</td>      <td>114</td>    </tr>    <tr>      <th>7</th>      <td>8</td>      <td>f</td>      <td>10/27/1995</td>      <td>22</td>      <td>12</td>      <td>2</td>      <td>15892.5</td>      <td>37959.9270</td>      <td>98</td>      <td>0</td>    </tr>    <tr>      <th>8</th>      <td>9</td>      <td>f</td>      <td>7/16/1975</td>      <td>42</td>      <td>15</td>      <td>5</td>      <td>20782.5</td>      <td>48359.9070</td>      <td>98</td>      <td>115</td>    </tr>    <tr>      <th>9</th>      <td>10</td>      <td>f</td>      <td>8/6/1975</td>      <td>42</td>      <td>12</td>      <td>2</td>      <td>22005.0</td>      <td>41599.9200</td>      <td>98</td>      <td>244</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="number">0</span>:<span class="number">10</span>] <span class="comment"># 类似于数组的形式来操作</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>id</th>      <th>gender</th>      <th>bdate</th>      <th>age</th>      <th>educ</th>      <th>jobcat</th>      <th>salbegin</th>      <th>salary</th>      <th>service</th>      <th>prevexp</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>m</td>      <td>7/26/1981</td>      <td>36</td>      <td>15</td>      <td>4</td>      <td>44010.0</td>      <td>98799.8100</td>      <td>98</td>      <td>144</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>m</td>      <td>11/13/1987</td>      <td>30</td>      <td>16</td>      <td>5</td>      <td>30562.5</td>      <td>69679.8660</td>      <td>98</td>      <td>36</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>f</td>      <td>1/16/1959</td>      <td>58</td>      <td>12</td>      <td>2</td>      <td>19560.0</td>      <td>37179.9285</td>      <td>98</td>      <td>381</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>f</td>      <td>10/6/1994</td>      <td>23</td>      <td>8</td>      <td>1</td>      <td>21516.0</td>      <td>37959.9270</td>      <td>98</td>      <td>190</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>m</td>      <td>8/1/1984</td>      <td>33</td>      <td>15</td>      <td>5</td>      <td>34230.0</td>      <td>77999.8500</td>      <td>98</td>      <td>138</td>    </tr>    <tr>      <th>5</th>      <td>6</td>      <td>m</td>      <td>2/12/1988</td>      <td>29</td>      <td>15</td>      <td>5</td>      <td>22005.0</td>      <td>55639.8930</td>      <td>98</td>      <td>67</td>    </tr>    <tr>      <th>6</th>      <td>7</td>      <td>m</td>      <td>10/17/1985</td>      <td>32</td>      <td>15</td>      <td>5</td>      <td>30562.5</td>      <td>62399.8800</td>      <td>98</td>      <td>114</td>    </tr>    <tr>      <th>7</th>      <td>8</td>      <td>f</td>      <td>10/27/1995</td>      <td>22</td>      <td>12</td>      <td>2</td>      <td>15892.5</td>      <td>37959.9270</td>      <td>98</td>      <td>0</td>    </tr>    <tr>      <th>8</th>      <td>9</td>      <td>f</td>      <td>7/16/1975</td>      <td>42</td>      <td>15</td>      <td>5</td>      <td>20782.5</td>      <td>48359.9070</td>      <td>98</td>      <td>115</td>    </tr>    <tr>      <th>9</th>      <td>10</td>      <td>f</td>      <td>8/6/1975</td>      <td>42</td>      <td>12</td>      <td>2</td>      <td>22005.0</td>      <td>41599.9200</td>      <td>98</td>      <td>244</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'age'</span>]  <span class="comment"># 根据变量名（关键码）来查看</span></span><br></pre></td></tr></table></figure><pre><code>0      361      302      583      234      335      296      327      228      429      4210     3811     2412     2713     3914     2515     2316     2517     3218     2519     4820     2521     4722     2323     5524     4525     2126     3427     2528     4429     26       ..444    24445    29446    26447    54448    22449    33450    18451    34452    57453    22454    24455    28456    19457    22458    17459    18460    22461    24462    53463    26464    25465    39466    20467    22468    23469    24470    21471    22472    50473    19Name: age, Length: 474, dtype: object</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(df.columns)  <span class="comment"># 查看所有变量名</span></span><br></pre></td></tr></table></figure><pre><code>Index([&#39;id&#39;, &#39;gender&#39;, &#39;bdate&#39;, &#39;age&#39;, &#39;educ&#39;, &#39;jobcat&#39;, &#39;salbegin&#39;, &#39;salary&#39;,       &#39;service&#39;, &#39;prevexp&#39;],      dtype=&#39;object&#39;)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var_names = df.columns.tolist() <span class="comment"># 转换为list</span></span><br><span class="line">print(var_names)</span><br></pre></td></tr></table></figure><pre><code>[&#39;id&#39;, &#39;gender&#39;, &#39;bdate&#39;, &#39;age&#39;, &#39;educ&#39;, &#39;jobcat&#39;, &#39;salbegin&#39;, &#39;salary&#39;, &#39;service&#39;, &#39;prevexp&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.describe()  <span class="comment"># 基本统计信息</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>id</th>      <th>educ</th>      <th>jobcat</th>      <th>salbegin</th>      <th>salary</th>      <th>service</th>      <th>prevexp</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>474.000000</td>      <td>474.000000</td>      <td>474.000000</td>      <td>474.000000</td>      <td>474.000000</td>      <td>474.000000</td>      <td>474.000000</td>    </tr>    <tr>      <th>mean</th>      <td>237.500000</td>      <td>13.491561</td>      <td>3.278481</td>      <td>27736.220992</td>      <td>59660.468953</td>      <td>81.109705</td>      <td>95.860759</td>    </tr>    <tr>      <th>std</th>      <td>136.976275</td>      <td>2.884846</td>      <td>1.462166</td>      <td>12829.140192</td>      <td>29597.756286</td>      <td>10.060945</td>      <td>104.586236</td>    </tr>    <tr>      <th>min</th>      <td>1.000000</td>      <td>8.000000</td>      <td>1.000000</td>      <td>14670.000000</td>      <td>27299.947500</td>      <td>63.000000</td>      <td>0.000000</td>    </tr>    <tr>      <th>25%</th>      <td>119.250000</td>      <td>12.000000</td>      <td>2.000000</td>      <td>20354.625000</td>      <td>41599.920000</td>      <td>72.000000</td>      <td>19.250000</td>    </tr>    <tr>      <th>50%</th>      <td>237.500000</td>      <td>12.000000</td>      <td>3.000000</td>      <td>24450.000000</td>      <td>50049.903750</td>      <td>81.000000</td>      <td>55.000000</td>    </tr>    <tr>      <th>75%</th>      <td>355.750000</td>      <td>15.000000</td>      <td>5.000000</td>      <td>28508.700000</td>      <td>64024.876875</td>      <td>90.000000</td>      <td>138.750000</td>    </tr>    <tr>      <th>max</th>      <td>474.000000</td>      <td>21.000000</td>      <td>6.000000</td>      <td>130367.400000</td>      <td>233999.550000</td>      <td>98.000000</td>      <td>476.000000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.describe(include=[np.number])  <span class="comment"># 只统计数值型的内容</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>id</th>      <th>educ</th>      <th>jobcat</th>      <th>salbegin</th>      <th>salary</th>      <th>service</th>      <th>prevexp</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>474.000000</td>      <td>474.000000</td>      <td>474.000000</td>      <td>474.000000</td>      <td>474.000000</td>      <td>474.000000</td>      <td>474.000000</td>    </tr>    <tr>      <th>mean</th>      <td>237.500000</td>      <td>13.491561</td>      <td>3.278481</td>      <td>27736.220992</td>      <td>59660.468953</td>      <td>81.109705</td>      <td>95.860759</td>    </tr>    <tr>      <th>std</th>      <td>136.976275</td>      <td>2.884846</td>      <td>1.462166</td>      <td>12829.140192</td>      <td>29597.756286</td>      <td>10.060945</td>      <td>104.586236</td>    </tr>    <tr>      <th>min</th>      <td>1.000000</td>      <td>8.000000</td>      <td>1.000000</td>      <td>14670.000000</td>      <td>27299.947500</td>      <td>63.000000</td>      <td>0.000000</td>    </tr>    <tr>      <th>25%</th>      <td>119.250000</td>      <td>12.000000</td>      <td>2.000000</td>      <td>20354.625000</td>      <td>41599.920000</td>      <td>72.000000</td>      <td>19.250000</td>    </tr>    <tr>      <th>50%</th>      <td>237.500000</td>      <td>12.000000</td>      <td>3.000000</td>      <td>24450.000000</td>      <td>50049.903750</td>      <td>81.000000</td>      <td>55.000000</td>    </tr>    <tr>      <th>75%</th>      <td>355.750000</td>      <td>15.000000</td>      <td>5.000000</td>      <td>28508.700000</td>      <td>64024.876875</td>      <td>90.000000</td>      <td>138.750000</td>    </tr>    <tr>      <th>max</th>      <td>474.000000</td>      <td>21.000000</td>      <td>6.000000</td>      <td>130367.400000</td>      <td>233999.550000</td>      <td>98.000000</td>      <td>476.000000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'salary'</span>].describe()  <span class="comment"># 没有统计missing的数量，当其余信息比spss丰富</span></span><br></pre></td></tr></table></figure><pre><code>count       474.000000mean      59660.468953std       29597.756286min       27299.94750025%       41599.92000050%       50049.90375075%       64024.876875max      233999.550000Name: salary, dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.describe(include=[np.object])  <span class="comment"># 只统计字符串类型的内容</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>gender</th>      <th>bdate</th>      <th>age</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>474</td>      <td>474</td>      <td>474</td>    </tr>    <tr>      <th>unique</th>      <td>2</td>      <td>458</td>      <td>44</td>    </tr>    <tr>      <th>top</th>      <td>m</td>      <td>5/3/1995</td>      <td>24</td>    </tr>    <tr>      <th>freq</th>      <td>258</td>      <td>3</td>      <td>44</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">问题1    收入分布</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><pre><code>&#39;\n问题1    收入分布\n&#39;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 纵坐标，数量；横坐标，收入</span></span><br><span class="line">salary = df[<span class="string">'salary'</span>].unique()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">len(salary)</span><br></pre></td></tr></table></figure><pre><code>221</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">min(salary), max(salary)  <span class="comment"># 收入差距上下限</span></span><br></pre></td></tr></table></figure><pre><code>(27299.9475, 233999.55)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.salary</span><br></pre></td></tr></table></figure><pre><code>0       98799.810001       69679.866002       37179.928503       37959.927004       77999.850005       55639.893006       62399.880007       37959.927008       48359.907009       41599.9200010      52519.8990011      49139.9055012      48099.9075013      60839.8830014      47319.9090015      70719.8640016      79733.1800017     179832.9875018      73319.8590019      45499.9125020      67339.8705021      37699.9275022      41599.9200023      29379.9435024      36659.9295025      53819.8965026     104649.7987527      56419.8915028     233999.5500029      54079.89600           ...     444     48619.90650445    173333.00000446     84933.17000447     28339.94550448    121333.10000449     95333.15000450     49399.90500451     49919.90400452     42379.91850453    157083.03125454     75659.85450455    129999.75000456     54859.89450457    107249.79375458     37699.92750459     38999.92500460     37439.92800461     59643.88530462     35879.93100463     82419.84150464     58759.88700465     40559.92200466     56939.89050467     96633.14750468     43679.91600469     45499.91250470     45759.91200471     67859.86950472     37179.92850473     50959.90200Name: salary, Length: 474, dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.iloc[<span class="number">0</span>, <span class="number">0</span>]  <span class="comment"># 控制其中任意位置</span></span><br></pre></td></tr></table></figure><pre><code>1</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[<span class="number">0</span>, <span class="string">'id'</span>]  <span class="comment"># 这种方式也可以为DataFrame添加行 https://blog.csdn.net/tanzuozhev/article/details/76735660</span></span><br></pre></td></tr></table></figure><pre><code>1</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 收入，计数，占比，累计占比  salary, frequency, percent, cumulative percent</span></span><br><span class="line">df_new = pd.DataFrame(columns=[<span class="string">'Salary'</span>, <span class="string">'Frequency'</span>, <span class="string">'Percent'</span>, <span class="string">'CumulativePercent'</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">counts = df.salary.value_counts()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(type(counts))</span><br><span class="line">print(counts)</span><br></pre></td></tr></table></figure><pre><code>&lt;class &#39;pandas.core.series.Series&#39;&gt;53299.89750     1341599.92000      842379.91850      845499.91250      746279.91100      748099.90750      738999.92500      738739.92550      658759.88700      634059.93450      649399.90500      659799.88500      546019.91150      550959.90200      547579.90850      550439.90300      543679.91600      536139.93050      547319.90900      551999.90000      537959.92700      552519.89900      455379.89350      469679.86600      439779.92350      442899.91750      436919.92900      451739.90050      462399.88000      444979.91350      4                ..60007.88460      191259.82450      168119.86900      1145166.38750     131979.93850      1127833.08750     150855.90220      183199.84000      134319.93400      127299.94750      171239.86300      196199.81500      149659.90450      164999.87500      150179.90350      128339.94550      1102959.80200     1179399.65500     152779.89850      194249.81875      1173333.00000     172799.86000      192083.15625      175243.85530      1191749.63125     1149499.71250     198019.81150      188833.16250      177999.85000      169419.86650      1Name: salary, Length: 221, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 绘制柱状图</span></span><br><span class="line"></span><br><span class="line">p = counts.plot(kind=<span class="string">'bar'</span>).get_figure()</span><br><span class="line">p.show()</span><br></pre></td></tr></table></figure><pre><code>D:\Anaconda3\Anaconda3_py36\lib\site-packages\matplotlib\figure.py:459: UserWarning: matplotlib is currently using a non-GUI backend, so cannot show the figure  &quot;matplotlib is currently using a non-GUI backend, &quot;</code></pre><p><img src="/2018/09/20/pandas-experiment-01/output_25_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p.savefig(<span class="string">'demo_01.png'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分段累积，绘制柱状图</span></span><br><span class="line">counts.plot.hist()  <span class="comment"># 注意，使用counts来绘制柱状图显然是错误的</span></span><br></pre></td></tr></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1742a430588&gt;</code></pre><p><img src="/2018/09/20/pandas-experiment-01/output_27_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">counts.sort_index()</span><br></pre></td></tr></table></figure><pre><code>27299.94750     127559.94700     128079.94600     328339.94550     128599.94500     128859.94450     129119.94400     129379.94350     329639.94300     229899.94250     130159.94200     230679.94100     131459.93950     231979.93850     132499.93750     133279.93600     234059.93450     634319.93400     134579.93350     234839.93300     235359.93200     335619.93150     135879.93100     236139.93050     536399.93000     236659.92950     236919.92900     437179.92850     337439.92800     337699.92750     3               ..114833.11250    1115699.77750    1115916.44375    2116999.77500    1118083.10625    2119166.43750    2120033.10250    1121333.10000    2122849.76375    1125666.42500    1127399.75500    1127833.08750    1129999.75000    2135416.40625    1135633.07250    1136066.40500    1138666.40000    1140833.06250    1142999.72500    1145166.38750    1149499.71250    1157083.03125    1158166.36250    1159466.36000    1168133.01000    1173333.00000    1179399.65500    1179832.98750    1191749.63125    1233999.55000    1Name: salary, Length: 221, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">counts.plot.hist(color=<span class="string">'k'</span>, alpha=<span class="number">0.5</span>, bins=<span class="number">30</span>)</span><br></pre></td></tr></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x17429f56710&gt;</code></pre><p><img src="/2018/09/20/pandas-experiment-01/output_29_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">counts.plot.hist(color=<span class="string">'g'</span>, alpha=<span class="number">0.6</span>, bins=<span class="number">18</span>, figsize=(<span class="number">16</span>, <span class="number">9</span>))</span><br></pre></td></tr></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x17424e1db38&gt;</code></pre><p><img src="/2018/09/20/pandas-experiment-01/output_30_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">counts.diff().hist(color=<span class="string">'k'</span>, alpha=<span class="number">0.5</span>, bins=<span class="number">50</span>)</span><br></pre></td></tr></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x174257b5748&gt;</code></pre><p><img src="/2018/09/20/pandas-experiment-01/output_31_1.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt_hist = df[<span class="string">'salary'</span>].plot.hist(alpha=<span class="number">0.8</span>, bins=<span class="number">28</span>, figsize=(<span class="number">16</span>, <span class="number">9</span>))</span><br></pre></td></tr></table></figure><p><img src="/2018/09/20/pandas-experiment-01/output_32_0.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt_hist.set_xlabel(<span class="string">'Current Salary($)'</span>)</span><br></pre></td></tr></table></figure><pre><code>Text(0.5,3.2,&#39;Current Salary($)&#39;)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt_hist</span><br></pre></td></tr></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x17429117390&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt_hist = df[<span class="string">'salary'</span>].plot.hist(alpha=<span class="number">0.8</span>, bins=<span class="number">28</span>, figsize=(<span class="number">16</span>, <span class="number">9</span>)).set_title(<span class="string">'Histogram'</span>)</span><br></pre></td></tr></table></figure><p><img src="/2018/09/20/pandas-experiment-01/output_35_0.png" alt="收入分析柱状图(待完善)"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;最关键的就一句代码，直接跳到最后即可。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据挖掘课程作业貌似要用到MATLAB以及SPSS，而 实验设计和数据分析课程主要使用Excel。除了SPSS之外其余两个都接触过，今天安装了SPSS，安装后的新手指引很贴心，给了一个收
      
    
    </summary>
    
      <category term="Languages" scheme="https://www.blankspace.cn/categories/Languages/"/>
    
      <category term="Python" scheme="https://www.blankspace.cn/categories/Languages/Python/"/>
    
      <category term="Pandas" scheme="https://www.blankspace.cn/categories/Languages/Python/Pandas/"/>
    
    
      <category term="Pandas" scheme="https://www.blankspace.cn/tags/Pandas/"/>
    
      <category term="Frequency Analysis" scheme="https://www.blankspace.cn/tags/Frequency-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>数据预处理</title>
    <link href="https://www.blankspace.cn/2018/09/20/data-mining-ch02-s01/"/>
    <id>https://www.blankspace.cn/2018/09/20/data-mining-ch02-s01/</id>
    <published>2018-09-19T23:16:05.000Z</published>
    <updated>2018-09-20T08:16:52.862Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h2><h3 id="数据缺失"><a href="#数据缺失" class="headerlink" title="数据缺失"></a>数据缺失</h3><ul><li>原因<ul><li>Equipment malfunction</li><li>Data not provide</li><li>Not Application</li></ul></li><li>类型<ul><li>完全随机缺失</li><li>有条件的随机缺失</li><li>非随机缺失</li></ul></li><li>处理<ul><li>忽略/删除</li><li>填充：1.根据领域知识；2.填平均值，中位数等；3.高斯分布；</li></ul></li></ul><h3 id="离群点（outlier）"><a href="#离群点（outlier）" class="headerlink" title="离群点（outlier）"></a>离群点（outlier）</h3><p>Outlier $\neq$ Anomaly</p><h4 id="LOF（Local-Outlier-Factor，局部异常因子方法）"><a href="#LOF（Local-Outlier-Factor，局部异常因子方法）" class="headerlink" title="LOF（Local Outlier Factor，局部异常因子方法）"></a>LOF（Local Outlier Factor，局部异常因子方法）</h4><p><img src="/2018/09/20/data-mining-ch02-s01/Local Outlier Factor.png" alt="LOF方法"></p><p>其中，</p><ul><li><p>$d(A, B)$表示A, B间的距离（例如欧氏距离）；</p></li><li><p>$distance_k(B)$表示点B到周围点（不包括B自身）中第k远的距离，即图示右上角虚线圆圈的半径，称为k-distance；</p></li><li>$distance_k(A, B)$表示A到B的距离和B的k-distance中的较大者，称为可达距离；</li><li>$N_k(A)$表示A的k-distance邻域，即A周边k个点组成的集合，N即Neighbor，$\vert N_k(A) \vert$是A的k-distance领域点的个数，$\vert N_k(A) \vert \geq k$；</li><li>$ldr_k(A)$为A的local reachability density（局部可达密度），是指<strong>$N_k(A)$到A的平均可达距离的倒数</strong>，密度越高，越可能是属于同一个簇；密度越低（平均可达距离越远），越可能是离群点；</li><li>$LOF_k(A)$为A的local outlier factor（局部离群因子），表示$N_k(A)$的$ldr$与点A的$ldr$之比的平均值，约大于1越可能是离群点。</li></ul><p><a href="https://blog.csdn.net/wangyibo0201/article/details/51705966/" target="_blank" rel="noopener">阅读</a></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;数据清洗&quot;&gt;&lt;a href=&quot;#数据清洗&quot; class=&quot;headerlink&quot; title=&quot;数据清洗&quot;&gt;&lt;/a&gt;数据清洗&lt;/h2&gt;&lt;h3 id=&quot;数据缺失&quot;&gt;&lt;a href=&quot;#数据缺失&quot; class=&quot;headerlink&quot; title=&quot;数据缺失&quot;&gt;&lt;/a&gt;数据缺失&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;原因&lt;ul&gt;
&lt;li&gt;Equipment malfunction&lt;/li&gt;
&lt;li&gt;Data not provide&lt;/li&gt;
&lt;li&gt;Not Application&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;类型&lt;ul&gt;
&lt;li&gt;完全随机缺失&lt;/li&gt;
&lt;li&gt;有条件的随机缺失&lt;/li&gt;
&lt;li&gt;非随机缺失&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;处理&lt;ul&gt;
&lt;li&gt;忽略/删除&lt;/li&gt;
&lt;li&gt;填充：1.根据领域知识；2.填平均值，中位数等；3.高斯分布；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;离群点（outlier）&quot;&gt;&lt;a href=&quot;#离群点（outlier）&quot; class=&quot;headerlink&quot; title=&quot;离群点（outlier）&quot;&gt;&lt;/a&gt;离群点（outlier）&lt;/h3&gt;&lt;p&gt;Outlier $\neq$ Anomaly&lt;/p&gt;
&lt;h4 id=&quot;LOF（Local-Outlier-Factor，局部异常因子方法）&quot;&gt;&lt;a href=&quot;#LOF（Local-Outlier-Factor，局部异常因子方法）&quot; class=&quot;headerlink&quot; title=&quot;LOF（Local Outlier Factor，局部异常因子方法）&quot;&gt;&lt;/a&gt;LOF（Local Outlier Factor，局部异常因子方法）&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/2018/09/20/data-mining-ch02-s01/Local Outlier Factor.png&quot; alt=&quot;LOF方法&quot;&gt;&lt;/p&gt;
&lt;p&gt;其中，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;$d(A, B)$表示A, B间的距离（例如欧氏距离）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;$distance_k(B)$表示点B到周围点（不包括B自身）中第k远的距离，即图示右上角虚线圆圈的半径，称为k-distance；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;$distance_k(A, B)$表示A到B的距离和B的k-distance中的较大者，称为可达距离；&lt;/li&gt;
&lt;li&gt;$N_k(A)$表示A的k-distance邻域，即A周边k个点组成的集合，N即Neighbor，$\vert N_k(A) \vert$是A的k-distance领域点的个数，$\vert N_k(A) \vert \geq k$；&lt;/li&gt;
&lt;li&gt;$ldr_k(A)$为A的local reachability density（局部可达密度），是指&lt;strong&gt;$N_k(A)$到A的平均可达距离的倒数&lt;/strong&gt;，密度越高，越可能是属于同一个簇；密度越低（平均可达距离越远），越可能是离群点；&lt;/li&gt;
&lt;li&gt;$LOF_k(A)$为A的local outlier factor（局部离群因子），表示$N_k(A)$的$ldr$与点A的$ldr$之比的平均值，约大于1越可能是离群点。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/wangyibo0201/article/details/51705966/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;阅读&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Data Science" scheme="https://www.blankspace.cn/categories/Data-Science/"/>
    
      <category term="Data Mining" scheme="https://www.blankspace.cn/categories/Data-Science/Data-Mining/"/>
    
    
      <category term="Data Preprocessing" scheme="https://www.blankspace.cn/tags/Data-Preprocessing/"/>
    
  </entry>
  
  <entry>
    <title>水和生命</title>
    <link href="https://www.blankspace.cn/2018/09/19/biology-ch02-s02/"/>
    <id>https://www.blankspace.cn/2018/09/19/biology-ch02-s02/</id>
    <published>2018-09-19T15:23:37.000Z</published>
    <updated>2018-09-19T15:30:06.021Z</updated>
    
    <content type="html"><![CDATA[<p>水和生命密切相关。</p><h2 id="水的特点"><a href="#水的特点" class="headerlink" title="水的特点"></a>水的特点</h2><ol><li>内聚力和粘附力</li><li>水的热容量</li><li>固态轻于液态水</li><li>水是良好的溶剂</li></ol><h3 id="内聚力"><a href="#内聚力" class="headerlink" title="内聚力"></a>内聚力</h3><p>内聚力：氢键使物质凝聚一起的现象</p><p>水形成concave效应</p><h3 id="粘附力"><a href="#粘附力" class="headerlink" title="粘附力"></a>粘附力</h3><p>黏附在其他分子上</p><p><strong>内聚力和粘附力解释生物学想象：</strong></p><ul><li>表面张力：液体表面总是试图获得最小</li></ul><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;水和生命密切相关。&lt;/p&gt;
&lt;h2 id=&quot;水的特点&quot;&gt;&lt;a href=&quot;#水的特点&quot; class=&quot;headerlink&quot; title=&quot;水的特点&quot;&gt;&lt;/a&gt;水的特点&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;内聚力和粘附力&lt;/li&gt;
&lt;li&gt;水的热容量&lt;/li&gt;
&lt;li&gt;固态轻于液态水&lt;/li&gt;
&lt;li&gt;水是良好的溶剂&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;内聚力&quot;&gt;&lt;a href=&quot;#内聚力&quot; class=&quot;headerlink&quot; title=&quot;内聚力&quot;&gt;&lt;/a&gt;内聚力&lt;/h3&gt;&lt;p&gt;内聚力：氢键使物质凝聚一起的现象&lt;/p&gt;
&lt;p&gt;水形成concave效应&lt;/p&gt;
&lt;h3 id=&quot;粘附力&quot;&gt;&lt;a href=&quot;#粘附力&quot; class=&quot;headerlink&quot; title=&quot;粘附力&quot;&gt;&lt;/a&gt;粘附力&lt;/h3&gt;&lt;p&gt;黏附在其他分子上&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;内聚力和粘附力解释生物学想象：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表面张力：液体表面总是试图获得最小&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Biology" scheme="https://www.blankspace.cn/categories/Biology/"/>
    
      <category term="现代生物学导论" scheme="https://www.blankspace.cn/categories/Biology/%E7%8E%B0%E4%BB%A3%E7%94%9F%E7%89%A9%E5%AD%A6%E5%AF%BC%E8%AE%BA/"/>
    
      <category term="生命的化学基础" scheme="https://www.blankspace.cn/categories/Biology/%E7%8E%B0%E4%BB%A3%E7%94%9F%E7%89%A9%E5%AD%A6%E5%AF%BC%E8%AE%BA/%E7%94%9F%E5%91%BD%E7%9A%84%E5%8C%96%E5%AD%A6%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="H2O" scheme="https://www.blankspace.cn/tags/H2O/"/>
    
  </entry>
  
  <entry>
    <title>聚类、回归等数据挖掘问题简介</title>
    <link href="https://www.blankspace.cn/2018/09/19/data-mining-ch01-s02/"/>
    <id>https://www.blankspace.cn/2018/09/19/data-mining-ch01-s02/</id>
    <published>2018-09-19T14:12:43.000Z</published>
    <updated>2018-09-20T08:16:42.661Z</updated>
    
    <content type="html"><![CDATA[<h2 id="聚类（Clustering）"><a href="#聚类（Clustering）" class="headerlink" title="聚类（Clustering）"></a>聚类（Clustering）</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>将观察到无标记项集合划分成若干子集（subsets成为clusters簇）,同一个簇中的项具有相似性。</p><blockquote><p> Clustering is the assignment of a set of observations into subsets (called clusters) so that observations in the same cluster are similar in some sense.</p></blockquote><h3 id="距离度量（Distance-Metrics）"><a href="#距离度量（Distance-Metrics）" class="headerlink" title="距离度量（Distance Metrics）"></a>距离度量（Distance Metrics）</h3><ul><li>欧氏距离（Euclidean Distance）</li><li>曼哈顿距离（Manhattan Distance）</li><li>马氏距离（Mahalanobis Distance）</li><li>…</li></ul><h3 id="层次聚类"><a href="#层次聚类" class="headerlink" title="层次聚类"></a>层次聚类</h3><p>分层分组</p><h3 id="关联分析"><a href="#关联分析" class="headerlink" title="关联分析"></a>关联分析</h3><h2 id="回归"><a href="#回归" class="headerlink" title="回归"></a>回归</h2><p>线性回归，线性是参数和变量之间是线性的。</p><h3 id="过拟合"><a href="#过拟合" class="headerlink" title="过拟合"></a>过拟合</h3><h2 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h2><p>可解释性</p><h2 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h2><p>忌讳“GIGO”，Garbage In Garbage Out。</p><p>“脏”数据：</p><ul><li>属性缺失（Missing Attribute Values）</li><li>不一致（Inconsistent Data）</li><li>不可行（Infeasible Values）</li><li>异常值（离群点，Outliers）</li><li>…</li></ul><p>所以要进行数据清洗：</p><ul><li>完备</li><li>准确</li><li>可解释</li><li>…</li></ul><p>处理：</p><ul><li>标准化</li><li>类型转化</li><li>…</li></ul><h2 id="隐私保护数据分析"><a href="#隐私保护数据分析" class="headerlink" title="隐私保护数据分析"></a>隐私保护数据分析</h2><p>举例：敏感问题问卷分析</p><h2 id="云"><a href="#云" class="headerlink" title="云"></a>云</h2><ul><li>Pay As You Go.（弹性计算）</li><li>计算就是资源。</li><li>SaaS（Software as a Service）</li></ul><h2 id="并行计算"><a href="#并行计算" class="headerlink" title="并行计算"></a>并行计算</h2><ul><li>GPU</li><li>运算集群</li><li>…</li></ul><h2 id="数据挖掘-大数据-算法-算力"><a href="#数据挖掘-大数据-算法-算力" class="headerlink" title="数据挖掘==大数据+算法+算力"></a>数据挖掘==大数据+算法+算力</h2><h3 id="“三驾马车”"><a href="#“三驾马车”" class="headerlink" title="“三驾马车”"></a>“三驾马车”</h3><div class="bs-callout bs-callout-info"><p>季向阳教授：三驾马车——数据，算法，算力。</p></div><h3 id="没有免费午餐"><a href="#没有免费午餐" class="headerlink" title="没有免费午餐"></a>没有免费午餐</h3><ul><li>针对具体问题采用合适的算法</li><li>阿卡姆剃刀</li></ul><h2 id="数据挖掘的“陷阱”"><a href="#数据挖掘的“陷阱”" class="headerlink" title="数据挖掘的“陷阱”"></a>数据挖掘的“陷阱”</h2><ul><li>幸存者偏差</li><li>数据本身的随机性</li><li>相关并不代表因果</li><li>宏观和微观</li><li>…</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;聚类（Clustering）&quot;&gt;&lt;a href=&quot;#聚类（Clustering）&quot; class=&quot;headerlink&quot; title=&quot;聚类（Clustering）&quot;&gt;&lt;/a&gt;聚类（Clustering）&lt;/h2&gt;&lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot;
      
    
    </summary>
    
      <category term="Data Science" scheme="https://www.blankspace.cn/categories/Data-Science/"/>
    
      <category term="Data Mining" scheme="https://www.blankspace.cn/categories/Data-Science/Data-Mining/"/>
    
    
      <category term="Unsupervised Learning" scheme="https://www.blankspace.cn/tags/Unsupervised-Learning/"/>
    
      <category term="Clustering" scheme="https://www.blankspace.cn/tags/Clustering/"/>
    
  </entry>
  
  <entry>
    <title>实验设计的误差分析</title>
    <link href="https://www.blankspace.cn/2018/09/19/experiment-design-ch01/"/>
    <id>https://www.blankspace.cn/2018/09/19/experiment-design-ch01/</id>
    <published>2018-09-19T01:24:18.000Z</published>
    <updated>2018-09-19T11:14:23.280Z</updated>
    
    <content type="html"><![CDATA[<h2 id="真值和误差"><a href="#真值和误差" class="headerlink" title="真值和误差"></a>真值和误差</h2><h3 id="真值（True-Value）"><a href="#真值（True-Value）" class="headerlink" title="真值（True Value）"></a>真值（True Value）</h3><p>真值，在某一时刻和某一状态下，某量的客观真实值。真值一般是未知的，相对的意义上真值是已知的。</p><h3 id="误差（Error）"><a href="#误差（Error）" class="headerlink" title="误差（Error）"></a>误差（Error）</h3><p>误差，是试验中获得的试验值和它的<strong>客观真实值</strong>在数值上的不一致。<em>试验结果都有误差，误差自始至终存在于一切科学实验过程中</em></p><h4 id="绝对误差（Absolute-Error）"><a href="#绝对误差（Absolute-Error）" class="headerlink" title="绝对误差（Absolute Error）"></a>绝对误差（Absolute Error）</h4><script type="math/tex; mode=display">\text{绝对误差=试验值-真值}</script><script type="math/tex; mode=display">\Delta x = x-x_t</script><ul><li>真值未知则绝对误差也未知</li><li>$\vert \Delta x \vert = \vert x-x_t \vert \leq \vert \Delta x|_{max} \Rightarrow x_t \approx x\pm \vert\Delta x \vert_{max}, \text{其中}  \vert\Delta x \vert_{max} \text{为绝对误差限或误差上界}$</li><li>绝对误差的估算方法：<ul><li>最小刻度的一半为绝对误差，最小刻度误最大绝对误差</li><li>根据仪表精度等级计算：$\text{绝对误差=量程*精度等级%}$</li></ul></li></ul><h4 id="相对误差"><a href="#相对误差" class="headerlink" title="相对误差"></a>相对误差</h4><p>相对误差定义：</p><script type="math/tex; mode=display">E_R=\frac{\Delta x}{x_t}</script><p>若真值未知，通常将绝对误差（$\Delta x$）与试验值（$x$）或平均值之比作为相对误差（的近似替代）：</p><script type="math/tex; mode=display">E_R\approx \frac{\Delta x}{x} \quad\text{或} \quad E_R\approx \frac{\Delta x}{\overline{x}}</script><h4 id="算数平均差异（Average-Discrepancy）"><a href="#算数平均差异（Average-Discrepancy）" class="headerlink" title="算数平均差异（Average Discrepancy）"></a>算数平均差异（Average Discrepancy）</h4><p>算数平均差异可以用来反应一组实验数据的误差大小。</p><script type="math/tex; mode=display">\Delta = \frac{\sum_{i=1}^{n} \vert x_i - \overline{x} \vert}{n}=\frac{\sum_{i=1}^{n}\vert d_i \vert}{n}</script><p>其中$d_i$表示试验值$x_i$与试验值的算数平均值$\overline{x}$的偏差。</p><h4 id="标准误差（Standard-Error）"><a href="#标准误差（Standard-Error）" class="headerlink" title="标准误差（Standard Error）"></a>标准误差（Standard Error）</h4><ul><li>当试验次数n无穷大时，总体标准差：</li></ul><script type="math/tex; mode=display">\sigma=\sqrt{\frac{\sum_{i=1}^{n}(x_i-\overline{x})^2}{n}}=\sqrt{\frac{\sum_{i=1}^{n}x^2-(\sum_{i=1}^{n}x_i)^2/n}{n}}</script><ul><li>当试验次数为有限次时，样本标准差：</li></ul><script type="math/tex; mode=display">\sigma=\sqrt{\frac{\sum_{i=1}^{n}d_i^2}{n-1}}=\sqrt{\frac{\sum_{i=1}^{n-1}(x_i-\overline{x})^2}{n-1}}=\sqrt{\frac{\sum_{i=1}^{n}x^2-(\sum_{i=1}^{n}x_i)^2/n}{n-1}}</script><p>表示试验值的精密度，标准差$\downarrow$，试验数据精度$\uparrow$</p><p><strong>$\mathbb{\color{red}{\text{疑问：为什么总体标准差和样本标准差，一个是$n$一个是$n-1$? }}}$</strong></p><h4 id="误差分类"><a href="#误差分类" class="headerlink" title="误差分类"></a>误差分类</h4><ul><li><p>系统误差</p><ul><li>概念：在一定试验条件下，由某个或者某些因素按照某一确定的规律起作用而形成的误差</li><li>产生原因：多方面</li><li>特点：系统误差大小及其符号在同一试验中是恒定的<ul><li>不能通过多次试验被发现，也不能通过取多次试验值的平局值而减小</li><li>对系统误差原因有充分认识，才能进行校准或设法消除</li></ul></li></ul></li><li><p>随机误差</p><ul><li><p>概念：以不可预知的规律变化着的误差，时正时负，时大时小</p></li><li><p>产生原因：偶然因素</p></li><li><p>特点：具有统计规律</p><ul><li>当试验次数足够多时，误差的平均值趋向于零，可以通过增加试验次数来减小随机误差</li><li>小误差比大误差出现机会多</li></ul></li></ul></li></ul><ul><li><p>过失误差</p><ul><li>概念：显然和事实不符合的误差</li><li>产生原因：细节，试验人员粗心大意</li><li>特点：<ul><li>完全可以避免</li></ul></li></ul></li></ul><h3 id="试验"><a href="#试验" class="headerlink" title="试验"></a>试验</h3><h3 id="平均值（Mean）"><a href="#平均值（Mean）" class="headerlink" title="平均值（Mean）"></a>平均值（Mean）</h3><h3 id="算数平均值（Arithmetic-Mean）"><a href="#算数平均值（Arithmetic-Mean）" class="headerlink" title="算数平均值（Arithmetic Mean）"></a>算数平均值（Arithmetic Mean）</h3><script type="math/tex; mode=display">\overline{x}=(x_1+x_2+...+x_n)/n=\frac{\sum_{i=1}^{n}x_i}n</script><p>适合：</p><ul><li>等精度试验值</li><li>试验值服从正态分布</li></ul><h3 id="加权平均值（Weighted-Mean）"><a href="#加权平均值（Weighted-Mean）" class="headerlink" title="加权平均值（Weighted Mean）"></a>加权平均值（Weighted Mean）</h3><script type="math/tex; mode=display">\mathcal{\overline{x_W}=\frac{w_1x_1+w_2x_2+...+w_nx_n}{w1+w_2+...+w_n}=\frac{\sum_{i=1}^{n}w_ix_i}{\sum_{i=1}^{n}w_i}}</script><p>其中$w_i$表示权重。</p><p>适合：</p><ul><li>不同试验值的精度或可靠性不一致时，如GPA的计算</li></ul><h3 id="对数平均值（Logarithmic-Mean）"><a href="#对数平均值（Logarithmic-Mean）" class="headerlink" title="对数平均值（Logarithmic Mean）"></a>对数平均值（Logarithmic Mean）</h3><script type="math/tex; mode=display">\overline{x_L}=\frac{x_1-x_2}{\ln{x_1}-\ln{x_2}}=\frac{x_1-x_2}{\ln{\frac{x_1}{x_2}}}=\frac{x_2-x_1}{\ln{\frac{x_2}{x_1}}}</script><p>其中$x_1, x_2\gt0$。</p><p><strong>注意</strong>：</p><ul><li>若数据的分布具有对数特性，宜使用对数平均值</li><li>对数平均值$\leq$算数平均值</li><li>若$1/2\leq x_1 \leq 2$时，可用算数平均值替代对数平均值</li></ul><h3 id="几何平均值"><a href="#几何平均值" class="headerlink" title="几何平均值"></a>几何平均值</h3><script type="math/tex; mode=display">\overline{x_G}=\sqrt[n]{x_1x_2\cdots x_n}=(x_1x_2\cdots x_n)^{1/n}</script><p><strong>注意</strong>：</p><ul><li>几何平均值$\leq$算数平均值</li><li>当一组试验值取对数后所得数据的分布曲线更加对称时，宜采用几何平均值</li></ul><h3 id="调和平均值（Harmonic-Mean）"><a href="#调和平均值（Harmonic-Mean）" class="headerlink" title="调和平均值（Harmonic Mean）"></a>调和平均值（Harmonic Mean）</h3><p>假设有$n$个正试验值：$x_1, x_2, \dots ,x_n$则：</p><script type="math/tex; mode=display">\frac{1}{H}=\frac{\frac{1}{x_1}+\frac{1}{x_2}+\dots+\frac{1}{x_n}}{n}=\frac{\sum_{i=1}^{n}\frac{1}{x_i}}n</script><p>试验值倒数的算数平均值的倒数是调和平均值。</p><p><strong>注意</strong>：</p><ul><li>常用在涉及到一些量的倒数相关的场合</li><li>$\mathrm{H\leq \overline{x_G} \leq \overline{x}}$</li></ul><h2 id="误差分析（Error-Analysis）"><a href="#误差分析（Error-Analysis）" class="headerlink" title="误差分析（Error Analysis）"></a>误差分析（Error Analysis）</h2><p>目的：对原始数据的可靠性进行客观地评定。</p><h3 id="卡方检验-（-mathbf-chi-2-Test）"><a href="#卡方检验-（-mathbf-chi-2-Test）" class="headerlink" title="卡方检验 （$\mathbf{\chi^{2} }$-Test）"></a>卡方检验 （$\mathbf{\chi^{2} }$-Test）</h3><h3 id="F检验"><a href="#F检验" class="headerlink" title="F检验"></a>F检验</h3><a id="more"></a><h3 id="单尾检验和双尾检验"><a href="#单尾检验和双尾检验" class="headerlink" title="单尾检验和双尾检验"></a>单尾检验和双尾检验</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;真值和误差&quot;&gt;&lt;a href=&quot;#真值和误差&quot; class=&quot;headerlink&quot; title=&quot;真值和误差&quot;&gt;&lt;/a&gt;真值和误差&lt;/h2&gt;&lt;h3 id=&quot;真值（True-Value）&quot;&gt;&lt;a href=&quot;#真值（True-Value）&quot; class=&quot;headerlink&quot; title=&quot;真值（True Value）&quot;&gt;&lt;/a&gt;真值（True Value）&lt;/h3&gt;&lt;p&gt;真值，在某一时刻和某一状态下，某量的客观真实值。真值一般是未知的，相对的意义上真值是已知的。&lt;/p&gt;
&lt;h3 id=&quot;误差（Error）&quot;&gt;&lt;a href=&quot;#误差（Error）&quot; class=&quot;headerlink&quot; title=&quot;误差（Error）&quot;&gt;&lt;/a&gt;误差（Error）&lt;/h3&gt;&lt;p&gt;误差，是试验中获得的试验值和它的&lt;strong&gt;客观真实值&lt;/strong&gt;在数值上的不一致。&lt;em&gt;试验结果都有误差，误差自始至终存在于一切科学实验过程中&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&quot;绝对误差（Absolute-Error）&quot;&gt;&lt;a href=&quot;#绝对误差（Absolute-Error）&quot; class=&quot;headerlink&quot; title=&quot;绝对误差（Absolute Error）&quot;&gt;&lt;/a&gt;绝对误差（Absolute Error）&lt;/h4&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\text{绝对误差=试验值-真值}&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\Delta x = x-x_t&lt;/script&gt;&lt;ul&gt;
&lt;li&gt;真值未知则绝对误差也未知&lt;/li&gt;
&lt;li&gt;$\vert \Delta x \vert = \vert x-x_t \vert \leq \vert \Delta x|_{max} \Rightarrow x_t \approx x\pm \vert\Delta x \vert_{max}, \text{其中}  \vert\Delta x \vert_{max} \text{为绝对误差限或误差上界}$&lt;/li&gt;
&lt;li&gt;绝对误差的估算方法：&lt;ul&gt;
&lt;li&gt;最小刻度的一半为绝对误差，最小刻度误最大绝对误差&lt;/li&gt;
&lt;li&gt;根据仪表精度等级计算：$\text{绝对误差=量程*精度等级%}$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;相对误差&quot;&gt;&lt;a href=&quot;#相对误差&quot; class=&quot;headerlink&quot; title=&quot;相对误差&quot;&gt;&lt;/a&gt;相对误差&lt;/h4&gt;&lt;p&gt;相对误差定义：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
E_R=\frac{\Delta x}{x_t}&lt;/script&gt;&lt;p&gt;若真值未知，通常将绝对误差（$\Delta x$）与试验值（$x$）或平均值之比作为相对误差（的近似替代）：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
E_R\approx \frac{\Delta x}{x} \quad\text{或} \quad E_R\approx \frac{\Delta x}{\overline{x}}&lt;/script&gt;&lt;h4 id=&quot;算数平均差异（Average-Discrepancy）&quot;&gt;&lt;a href=&quot;#算数平均差异（Average-Discrepancy）&quot; class=&quot;headerlink&quot; title=&quot;算数平均差异（Average Discrepancy）&quot;&gt;&lt;/a&gt;算数平均差异（Average Discrepancy）&lt;/h4&gt;&lt;p&gt;算数平均差异可以用来反应一组实验数据的误差大小。&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\Delta = \frac{\sum_{i=1}^{n} \vert x_i - \overline{x} \vert}{n}=\frac{\sum_{i=1}^{n}\vert d_i \vert}{n}&lt;/script&gt;&lt;p&gt;其中$d_i$表示试验值$x_i$与试验值的算数平均值$\overline{x}$的偏差。&lt;/p&gt;
&lt;h4 id=&quot;标准误差（Standard-Error）&quot;&gt;&lt;a href=&quot;#标准误差（Standard-Error）&quot; class=&quot;headerlink&quot; title=&quot;标准误差（Standard Error）&quot;&gt;&lt;/a&gt;标准误差（Standard Error）&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;当试验次数n无穷大时，总体标准差：&lt;/li&gt;
&lt;/ul&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\sigma=\sqrt{\frac{\sum_{i=1}^{n}(x_i-\overline{x})^2}{n}}=\sqrt{\frac{\sum_{i=1}^{n}x^2-(\sum_{i=1}^{n}x_i)^2/n}{n}}&lt;/script&gt;&lt;ul&gt;
&lt;li&gt;当试验次数为有限次时，样本标准差：&lt;/li&gt;
&lt;/ul&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\sigma=\sqrt{\frac{\sum_{i=1}^{n}d_i^2}{n-1}}=\sqrt{\frac{\sum_{i=1}^{n-1}(x_i-\overline{x})^2}{n-1}}=\sqrt{\frac{\sum_{i=1}^{n}x^2-(\sum_{i=1}^{n}x_i)^2/n}{n-1}}&lt;/script&gt;&lt;p&gt;表示试验值的精密度，标准差$\downarrow$，试验数据精度$\uparrow$&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;$\mathbb{\color{red}{\text{疑问：为什么总体标准差和样本标准差，一个是$n$一个是$n-1$? }}}$&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;误差分类&quot;&gt;&lt;a href=&quot;#误差分类&quot; class=&quot;headerlink&quot; title=&quot;误差分类&quot;&gt;&lt;/a&gt;误差分类&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;系统误差&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概念：在一定试验条件下，由某个或者某些因素按照某一确定的规律起作用而形成的误差&lt;/li&gt;
&lt;li&gt;产生原因：多方面&lt;/li&gt;
&lt;li&gt;特点：系统误差大小及其符号在同一试验中是恒定的&lt;ul&gt;
&lt;li&gt;不能通过多次试验被发现，也不能通过取多次试验值的平局值而减小&lt;/li&gt;
&lt;li&gt;对系统误差原因有充分认识，才能进行校准或设法消除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;随机误差&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;概念：以不可预知的规律变化着的误差，时正时负，时大时小&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;产生原因：偶然因素&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;特点：具有统计规律&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当试验次数足够多时，误差的平均值趋向于零，可以通过增加试验次数来减小随机误差&lt;/li&gt;
&lt;li&gt;小误差比大误差出现机会多&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;过失误差&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概念：显然和事实不符合的误差&lt;/li&gt;
&lt;li&gt;产生原因：细节，试验人员粗心大意&lt;/li&gt;
&lt;li&gt;特点：&lt;ul&gt;
&lt;li&gt;完全可以避免&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;试验&quot;&gt;&lt;a href=&quot;#试验&quot; class=&quot;headerlink&quot; title=&quot;试验&quot;&gt;&lt;/a&gt;试验&lt;/h3&gt;&lt;h3 id=&quot;平均值（Mean）&quot;&gt;&lt;a href=&quot;#平均值（Mean）&quot; class=&quot;headerlink&quot; title=&quot;平均值（Mean）&quot;&gt;&lt;/a&gt;平均值（Mean）&lt;/h3&gt;&lt;h3 id=&quot;算数平均值（Arithmetic-Mean）&quot;&gt;&lt;a href=&quot;#算数平均值（Arithmetic-Mean）&quot; class=&quot;headerlink&quot; title=&quot;算数平均值（Arithmetic Mean）&quot;&gt;&lt;/a&gt;算数平均值（Arithmetic Mean）&lt;/h3&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\overline{x}=(x_1+x_2+...+x_n)/n=\frac{\sum_{i=1}^{n}x_i}n&lt;/script&gt;&lt;p&gt;适合：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;等精度试验值&lt;/li&gt;
&lt;li&gt;试验值服从正态分布&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;加权平均值（Weighted-Mean）&quot;&gt;&lt;a href=&quot;#加权平均值（Weighted-Mean）&quot; class=&quot;headerlink&quot; title=&quot;加权平均值（Weighted Mean）&quot;&gt;&lt;/a&gt;加权平均值（Weighted Mean）&lt;/h3&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\mathcal{\overline{x_W}=\frac{w_1x_1+w_2x_2+...+w_nx_n}{w1+w_2+...+w_n}=\frac{\sum_{i=1}^{n}w_ix_i}{\sum_{i=1}^{n}w_i}}&lt;/script&gt;&lt;p&gt;其中$w_i$表示权重。&lt;/p&gt;
&lt;p&gt;适合：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不同试验值的精度或可靠性不一致时，如GPA的计算&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;对数平均值（Logarithmic-Mean）&quot;&gt;&lt;a href=&quot;#对数平均值（Logarithmic-Mean）&quot; class=&quot;headerlink&quot; title=&quot;对数平均值（Logarithmic Mean）&quot;&gt;&lt;/a&gt;对数平均值（Logarithmic Mean）&lt;/h3&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\overline{x_L}=\frac{x_1-x_2}{\ln{x_1}-\ln{x_2}}=\frac{x_1-x_2}{\ln{\frac{x_1}{x_2}}}=\frac{x_2-x_1}{\ln{\frac{x_2}{x_1}}}&lt;/script&gt;&lt;p&gt;其中$x_1, x_2\gt0$。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若数据的分布具有对数特性，宜使用对数平均值&lt;/li&gt;
&lt;li&gt;对数平均值$\leq$算数平均值&lt;/li&gt;
&lt;li&gt;若$1/2\leq x_1 \leq 2$时，可用算数平均值替代对数平均值&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;几何平均值&quot;&gt;&lt;a href=&quot;#几何平均值&quot; class=&quot;headerlink&quot; title=&quot;几何平均值&quot;&gt;&lt;/a&gt;几何平均值&lt;/h3&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\overline{x_G}=\sqrt[n]{x_1x_2\cdots x_n}=(x_1x_2\cdots x_n)^{1/n}&lt;/script&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;几何平均值$\leq$算数平均值&lt;/li&gt;
&lt;li&gt;当一组试验值取对数后所得数据的分布曲线更加对称时，宜采用几何平均值&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;调和平均值（Harmonic-Mean）&quot;&gt;&lt;a href=&quot;#调和平均值（Harmonic-Mean）&quot; class=&quot;headerlink&quot; title=&quot;调和平均值（Harmonic Mean）&quot;&gt;&lt;/a&gt;调和平均值（Harmonic Mean）&lt;/h3&gt;&lt;p&gt;假设有$n$个正试验值：$x_1, x_2, \dots ,x_n$则：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\frac{1}{H}=\frac{\frac{1}{x_1}+\frac{1}{x_2}+\dots+\frac{1}{x_n}}{n}=\frac{\sum_{i=1}^{n}\frac{1}{x_i}}n&lt;/script&gt;&lt;p&gt;试验值倒数的算数平均值的倒数是调和平均值。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常用在涉及到一些量的倒数相关的场合&lt;/li&gt;
&lt;li&gt;$\mathrm{H\leq \overline{x_G} \leq \overline{x}}$&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;误差分析（Error-Analysis）&quot;&gt;&lt;a href=&quot;#误差分析（Error-Analysis）&quot; class=&quot;headerlink&quot; title=&quot;误差分析（Error Analysis）&quot;&gt;&lt;/a&gt;误差分析（Error Analysis）&lt;/h2&gt;&lt;p&gt;目的：对原始数据的可靠性进行客观地评定。&lt;/p&gt;
&lt;h3 id=&quot;卡方检验-（-mathbf-chi-2-Test）&quot;&gt;&lt;a href=&quot;#卡方检验-（-mathbf-chi-2-Test）&quot; class=&quot;headerlink&quot; title=&quot;卡方检验 （$\mathbf{\chi^{2} }$-Test）&quot;&gt;&lt;/a&gt;卡方检验 （$\mathbf{\chi^{2} }$-Test）&lt;/h3&gt;&lt;h3 id=&quot;F检验&quot;&gt;&lt;a href=&quot;#F检验&quot; class=&quot;headerlink&quot; title=&quot;F检验&quot;&gt;&lt;/a&gt;F检验&lt;/h3&gt;
    
    </summary>
    
      <category term="Math" scheme="https://www.blankspace.cn/categories/Math/"/>
    
      <category term="Experiment Design &amp; Data Processing" scheme="https://www.blankspace.cn/categories/Math/Experiment-Design-Data-Processing/"/>
    
    
      <category term="Error Analysis" scheme="https://www.blankspace.cn/tags/Error-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>数据挖掘绪论</title>
    <link href="https://www.blankspace.cn/2018/09/18/data-mining-ch1-s1/"/>
    <id>https://www.blankspace.cn/2018/09/18/data-mining-ch1-s1/</id>
    <published>2018-09-18T15:15:06.000Z</published>
    <updated>2018-09-20T08:16:56.867Z</updated>
    
    <content type="html"><![CDATA[<p>这是选修清华大学深圳研究生院袁博老师《数据挖掘》课程资料整理。</p><h2 id="DRIP"><a href="#DRIP" class="headerlink" title="DRIP"></a>DRIP</h2><blockquote><p>Data Rich Information Poor</p></blockquote><h2 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h2><h3 id="教材"><a href="#教材" class="headerlink" title="教材"></a>教材</h3><ul><li>数据挖掘概念和技术</li><li>模式分类</li><li>Data Mining</li><li>Beautiful Data</li></ul><h3 id="顶级会议"><a href="#顶级会议" class="headerlink" title="顶级会议"></a>顶级会议</h3><p><a href="https://www.myhuiban.com/search?SearchForm%5Bkey%5D=data+mining" target="_blank" rel="noopener">数据挖掘顶级会议</a></p><h3 id="软件工具"><a href="#软件工具" class="headerlink" title="软件工具"></a>软件工具</h3><ul><li>信息搜索：Google等</li><li>数学模拟：Matlab，<a href="https://www.cs.waikato.ac.nz/ml/weka/" target="_blank" rel="noopener">Weka 3: Data Mining Software in Java</a>等</li><li>数据集：<a href="http://archive.ics.uci.edu/ml/index.php" target="_blank" rel="noopener">UCI</a>，<a href="https://www.kdnuggets.com/datasets/index.html" target="_blank" rel="noopener">KDnuggets</a></li><li>…</li></ul><h3 id="学习方法"><a href="#学习方法" class="headerlink" title="学习方法"></a>学习方法</h3><ul><li>课堂：认真思考，讨论</li><li>阅读材料</li><li>勤于动手</li><li>主动思考，刨根问底</li></ul><h2 id="大数据"><a href="#大数据" class="headerlink" title="大数据"></a>大数据</h2><p>特点3V</p><ul><li>Velocity速度</li><li>Varity种类</li><li>Volume体量</li></ul><p><img src="/2018/09/18/data-mining-ch1-s1/大数据特点3V.png" alt="大数据核心特点——3V"></p><h2 id="数据挖掘-知识发现"><a href="#数据挖掘-知识发现" class="headerlink" title="数据挖掘==知识发现"></a>数据挖掘==知识发现</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>从大规模，不完整，有噪声的数据中，自动提取<strong>有趣</strong>，<strong>有用</strong>且原来<strong>未知</strong>的模式的过程。</p><p><img src="/2018/09/18/data-mining-ch1-s1/从数据到决策.png" alt="从数据到智能：数据是最底层的"></p><h3 id="数据整合和分析（传统方式ETL）"><a href="#数据整合和分析（传统方式ETL）" class="headerlink" title="数据整合和分析（传统方式ETL）"></a>数据整合和分析（传统方式ETL）</h3><ul><li>E：Extration，提取</li><li>T：Transform，转换</li><li>L：Load，装载</li></ul><p><img src="https://panoply.io/uploads/versions/diagram4---x----750-328x---.jpg" alt="ETL：提取，转换和装载"></p><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p><img src="/2018/09/18/data-mining-ch1-s1/数据挖掘流程.png" alt="数据挖掘流程：定义问题；数据收集；数据预处理；数据建模；分析评估；应用部署不断迭代"></p><h2 id="分类问题"><a href="#分类问题" class="headerlink" title="分类问题"></a>分类问题</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>给定一个训练集${(x_1,y_1),(x_2, y_2), …, (x_n, y_n)}$，产生一个分类器（函数）对于未知的对象$x_i$将其映射到其类别标记$y_i$上。</p><h3 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h3><p>超平面上的分界面。</p><h3 id="分界面特点"><a href="#分界面特点" class="headerlink" title="分界面特点"></a>分界面特点</h3><ul><li>防止过拟合</li><li>应当平滑</li></ul><h3 id="交叉验证"><a href="#交叉验证" class="headerlink" title="交叉验证"></a>交叉验证</h3><p>将数据集分成<strong>训练集</strong>，<strong>验证集</strong>和<strong>测试集</strong>。</p><p>验证集用来验证模型的好坏。</p><h2 id="混淆矩阵"><a href="#混淆矩阵" class="headerlink" title="混淆矩阵"></a>混淆矩阵</h2><p><img src="/2018/09/18/data-mining-ch1-s1/混淆矩阵.png" alt="混淆矩阵：TP真正例；TN真负例；FP假正例；FN假负例"></p><h3 id="Accuracy正确率，Precision查准率，Recall查全率和F1度量F1-Measure"><a href="#Accuracy正确率，Precision查准率，Recall查全率和F1度量F1-Measure" class="headerlink" title="Accuracy正确率，Precision查准率，Recall查全率和F1度量F1-Measure"></a>Accuracy正确率，Precision查准率，Recall查全率和F1度量F1-Measure</h3><ul><li>Accuracy正确率/准确率</li></ul><script type="math/tex; mode=display">\mathbf{Accuracy=\frac{TP+TN}{TP+FP+TN+FN}}</script><p>表示猜对的在总样本中占比</p><ul><li>Precision查准率/精确率</li></ul><script type="math/tex; mode=display">\mathbf{Precision=TP/(TP+FP)}</script><p>表示真正例在所有猜测为正例中的占比</p><ul><li>Recall召回率/查全率</li></ul><script type="math/tex; mode=display">\mathbf{Recall=TP/(TP+FN)}</script><p>表示真正例在所有实际为正例中的占比</p><ul><li>F1（基于查准率和查全率的调和平均$\frac{1}{F1}=\frac{1}{2}\left(\frac{1}{P}+\frac{1}{R}\right)$得到）</li></ul><script type="math/tex; mode=display">\mathbf{F1=(2*Precision*Recall)/(Precision+Recall)}</script><p>由这些度量可以做出不同的曲线，如P-R曲线，纵轴为P，横轴为R；ROC曲线，纵轴为TPR, 横轴为FPR。</p><h3 id="真正例率（True-Positive-Rate-TPR）和假正例率（False-Positive-Rate）"><a href="#真正例率（True-Positive-Rate-TPR）和假正例率（False-Positive-Rate）" class="headerlink" title="真正例率（True Positive Rate, TPR）和假正例率（False Positive Rate）"></a>真正例率（True Positive Rate, TPR）和假正例率（False Positive Rate）</h3><script type="math/tex; mode=display">\mathbf{TPR = TP/(TP+FN)}\\\mathbf{FPR=FP/(FP+TN)}</script><h3 id="ROC和AUC"><a href="#ROC和AUC" class="headerlink" title="ROC和AUC"></a>ROC和AUC</h3><p>ROC：受试者工作特征（Receiver Operating Characteristic）</p><p>AUC：Area under ROC curve，ROC曲线下的面积。面积越大一般表明该机器学习算法更好。</p><h3 id="代价敏感"><a href="#代价敏感" class="headerlink" title="代价敏感"></a>代价敏感</h3><p>不同类型的错误后果（权重）不同</p><h2 id="Lift分析"><a href="#Lift分析" class="headerlink" title="Lift分析"></a>Lift分析</h2><script type="math/tex; mode=display">\mathbf{Lift = predicted\_rate / average\_ rate ) }</script><p>一种机器学习性能评价指标</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是选修清华大学深圳研究生院袁博老师《数据挖掘》课程资料整理。&lt;/p&gt;
&lt;h2 id=&quot;DRIP&quot;&gt;&lt;a href=&quot;#DRIP&quot; class=&quot;headerlink&quot; title=&quot;DRIP&quot;&gt;&lt;/a&gt;DRIP&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Data Rich 
      
    
    </summary>
    
      <category term="Data Science" scheme="https://www.blankspace.cn/categories/Data-Science/"/>
    
      <category term="Data Mining" scheme="https://www.blankspace.cn/categories/Data-Science/Data-Mining/"/>
    
    
      <category term="Data Mining" scheme="https://www.blankspace.cn/tags/Data-Mining/"/>
    
  </entry>
  
  <entry>
    <title>用户和文件权限管理</title>
    <link href="https://www.blankspace.cn/2018/09/17/linux-shiyan3/"/>
    <id>https://www.blankspace.cn/2018/09/17/linux-shiyan3/</id>
    <published>2018-09-17T08:10:46.000Z</published>
    <updated>2018-09-17T14:57:54.288Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查看用户"><a href="#查看用户" class="headerlink" title="查看用户"></a>查看用户</h2><p>打开终端输入：<code>who am i</code>或<code>who mom likes</code>：</p><p><img src="/2018/09/17/linux-shiyan3/shell-who.gif" alt="查看用户：who am i &amp; who mom likes"></p><p>输出：</p><ul><li>第一列：打开当前终端用户用户名（只查看用户名使用<code>whoami</code>即可）</li><li>第二列：<code>pts/0</code>中<code>pts</code>表示伪终端，伪是相对于<code>dev/tty</code>而言的，上一节中使用<code>Ctrl+Alt+F1~F7</code>切换的是真终端，伪终端是在图形用户界面使用<code>/dev/tty[0-7]</code>时打开的一个终端，<code>pts/0</code>中数字就是打开的伪终端号</li><li>第三列：启动时间</li></ul><p><code>who</code> 命令其它常用参数</p><div class="table-container"><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>-a</code></td><td>打印能打印的全部</td></tr><tr><td><code>-d</code></td><td>打印死掉的进程</td></tr><tr><td><code>-m</code></td><td>同<code>am i</code>,<code>mom likes</code></td></tr><tr><td><code>-q</code></td><td>打印当前登录用户数及用户名</td></tr><tr><td><code>-u</code></td><td>打印当前登录用户登录信息</td></tr><tr><td><code>-r</code></td><td>打印运行等级</td></tr></tbody></table></div><h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><p>一般登录时使用普通账户身份登录的，创建用户需要用到<strong>root权限<sup><a href="#fn_1" id="reffn_1">1</a></sup></strong>，此时需要使用<code>sudo</code>命令。</p><p>使用<code>sudo</code>前提:</p><ol><li>要知道当前登录用户的密码</li><li>当前用户必须要在<code>sudo</code>用户组</li></ol><p>命令：</p><p><code>sudo adduser &lt;username&gt;</code></p><h2 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo deluser &lt;username&gt; --remove-home</span><br></pre></td></tr></table></figure><blockquote id="fn_ 1"><sup> 1</sup>. root权限是系统权限的一种，与SYSTEM权限可以理解为一个概念，但高于Administrator权限，root是Unix/Linux中的超级管理员账户，可以操作所有对象。<a href="#reffn_ 1" title="Jump back to footnote [ 1] in the text."> &#8617;</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;查看用户&quot;&gt;&lt;a href=&quot;#查看用户&quot; class=&quot;headerlink&quot; title=&quot;查看用户&quot;&gt;&lt;/a&gt;查看用户&lt;/h2&gt;&lt;p&gt;打开终端输入：&lt;code&gt;who am i&lt;/code&gt;或&lt;code&gt;who mom likes&lt;/code&gt;：&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="Linux" scheme="https://www.blankspace.cn/categories/Linux/"/>
    
      <category term="Linux Basic" scheme="https://www.blankspace.cn/categories/Linux/Linux-Basic/"/>
    
    
      <category term="Shell" scheme="https://www.blankspace.cn/tags/Shell/"/>
    
      <category term="Linux" scheme="https://www.blankspace.cn/tags/Linux/"/>
    
      <category term="Priority" scheme="https://www.blankspace.cn/tags/Priority/"/>
    
  </entry>
  
  <entry>
    <title>Linux基础概念和操作</title>
    <link href="https://www.blankspace.cn/2018/09/17/linux-shiyan2/"/>
    <id>https://www.blankspace.cn/2018/09/17/linux-shiyan2/</id>
    <published>2018-09-17T02:54:24.000Z</published>
    <updated>2018-09-19T03:17:21.092Z</updated>
    
    <content type="html"><![CDATA[<p>Unix/Linux本身没有图形界面，我们看到的是运行在其上的一套软件，类似于Windows95前运行在DOS之上的图形界面。</p><h2 id="Linux桌面环境"><a href="#Linux桌面环境" class="headerlink" title="Linux桌面环境"></a>Linux桌面环境</h2><p><img src="/2018/09/17/linux-shiyan2/Unix_Linux内核的x window图形架构.jpg" alt="Unix_Linux内核的x window图形架构:xorg实现了X协议规范提供图像系统服务。而目前的Windows图形环境是直接建立在Windows系统内核上的和Unix/Linux不同"></p><h2 id="Linux终端"><a href="#Linux终端" class="headerlink" title="Linux终端"></a>Linux终端</h2><p>终端（Terminal）本质对应着Linux上的<code>/dev/tty</code>设备，Linux多用户登录就是通过其完成的。</p><p>Linux提供了6个纯命令行界面的“terminal”（准确说是6个<code>virtual console</code>）来让用户登录。可以使用<code>Ctrl+Alt+F1~F6</code>进行切换。按下<code>Ctrl+Alt+F7</code>返回图形界面。</p><h3 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h3><p>在图形界面中通常使用的不是上面所说的6个终端而是各种终端模拟器，就是Shell（壳）。壳里面包裹的就是核（Kernel），核就是Unix/Linux内核。Shell是指“提供给使用者使用界面”的命令解析器，类似于DOS下的命令行和后来的cmd.exe，其隐藏了操作系统底层的细节。</p><p>Unix/Linux中比较流行的Shell有bash、zsh、ksh等。Ubuntu终端默认的是bash，默认桌面环境是GNOME或者Unity（基于GNOME）。</p><h2 id="命令行操作"><a href="#命令行操作" class="headerlink" title="命令行操作"></a>命令行操作</h2><h3 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h3><ul><li>输入</li><li>输出</li></ul><p><img src="/2018/09/17/linux-shiyan2/pwd-touch.gif" alt=""></p><p>例子中涉及：</p><ul><li><code>pwd</code>：当前路径</li><li><code>touch</code>：新建文件</li></ul><h3 id="重要快捷键"><a href="#重要快捷键" class="headerlink" title="重要快捷键"></a>重要快捷键</h3><div class="bs-callout bs-callout-info"><p><i class="fa fa-info-circle"></i> </p><p><code>Tap</code>：自动补齐</p><p><code>Ctrl+c</code>：强制终止当前程序</p><p><code>Ctrl+d</code>：键盘输入结束或者退出终端</p><p><code>Ctrl+s</code>：暂停当前程序，暂停后按下任意键恢复运行</p><p><code>Ctrl+z</code>：后台运行当前程序，恢复到前台使用<code>fg</code></p><p><code>Ctrl+a</code>：光标移动到行头</p><p><code>Ctrl+k</code>：删除光标位置到行末的内容</p><p><code>Alt+Backspace</code>：删除前面一个单词</p><p><code>Shift+PgUp</code>：将终端向上滚动</p><p><code>Shift+PgDn</code>：将终端向下滚动</p></div><p><img src="/2018/09/17/linux-shiyan2/shell-shortcuts-1.gif" alt="Shell常用快捷键"></p><h3 id="输入历史"><a href="#输入历史" class="headerlink" title="输入历史"></a>输入历史</h3><ul><li><code>↑</code>：恢复之前输入</li></ul><h3 id="使用通配符"><a href="#使用通配符" class="headerlink" title="使用通配符"></a>使用通配符</h3><div class="table-container"><table><thead><tr><th>字符</th><th>含义</th></tr></thead><tbody><tr><td><code>*</code></td><td>匹配0个或者多个任意字符</td></tr><tr><td><code>?</code></td><td>匹配任意一个字符</td></tr><tr><td><code>[list]</code></td><td>匹配list中的任意单一字符</td></tr><tr><td><code>[^list]</code></td><td>匹配除了list中任意单一字符外的字符</td></tr><tr><td><code>[c1-c2]</code></td><td>匹配从c1到c2中的任意单一字符，例如：<code>[0-9]</code>、<code>[a-z]</code></td></tr><tr><td><code>{str1, str2...}</code></td><td>匹配字符串数组中的一个或者更多字符串<br><em>注：实验失败，暂时无法通配。</em></td></tr><tr><td><code>{c1..c2}</code></td><td>匹配从c1到c2中全部字符，例如：{1..10}</td></tr></tbody></table></div><p><img src="/2018/09/17/linux-shiyan2/shell-通配符-2.gif" alt="使用通配符来匹配字符串"></p><a id="more"></a><h3 id="获取帮助"><a href="#获取帮助" class="headerlink" title="获取帮助"></a>获取帮助</h3><ul><li><p><code>man &lt;command_name&gt;</code>：获取帮助，其中<code>man</code>代表<code>manual pages</code></p><ul><li>man手册分区，使用如<code>man 1 ls</code>：<ul><li>1一般命令</li><li>2系统调用</li><li>3库函数，涵盖了C标准函数库</li><li>4特殊文件（通常是/dev中的设备）和驱动程序</li><li>5文件格式和约定</li><li>6游戏和屏保</li><li>7杂项</li></ul></li><li>查找：<code>/&lt;要查找的内容&gt;</code><ul><li><code>n</code>：下一个</li><li><code>shift+n</code>：上一个</li><li><code>Space(空格键)</code>：翻页</li><li><code>Enter</code>：向下滚动一行</li></ul></li></ul></li><li><p><code>&lt;command_name&gt; --help</code>：查找具体参数和作用</p></li></ul><p><img src="/2018/09/17/linux-shiyan2/shell-帮助.gif" alt="获取帮助：man命令还有--help方式"></p><h2 id="有趣的Linux命令"><a href="#有趣的Linux命令" class="headerlink" title="有趣的Linux命令"></a>有趣的Linux命令</h2><video width="600px" max-width="600px" controls>  <source src="/2018/09/17/linux-shiyan2/homework.mp4" type="video/mp4">Your browser does not support the video tag.</video>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Unix/Linux本身没有图形界面，我们看到的是运行在其上的一套软件，类似于Windows95前运行在DOS之上的图形界面。&lt;/p&gt;
&lt;h2 id=&quot;Linux桌面环境&quot;&gt;&lt;a href=&quot;#Linux桌面环境&quot; class=&quot;headerlink&quot; title=&quot;Linux桌面环境&quot;&gt;&lt;/a&gt;Linux桌面环境&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/2018/09/17/linux-shiyan2/Unix_Linux内核的x window图形架构.jpg&quot; alt=&quot;Unix_Linux内核的x window图形架构:xorg实现了X协议规范提供图像系统服务。而目前的Windows图形环境是直接建立在Windows系统内核上的和Unix/Linux不同&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Linux终端&quot;&gt;&lt;a href=&quot;#Linux终端&quot; class=&quot;headerlink&quot; title=&quot;Linux终端&quot;&gt;&lt;/a&gt;Linux终端&lt;/h2&gt;&lt;p&gt;终端（Terminal）本质对应着Linux上的&lt;code&gt;/dev/tty&lt;/code&gt;设备，Linux多用户登录就是通过其完成的。&lt;/p&gt;
&lt;p&gt;Linux提供了6个纯命令行界面的“terminal”（准确说是6个&lt;code&gt;virtual console&lt;/code&gt;）来让用户登录。可以使用&lt;code&gt;Ctrl+Alt+F1~F6&lt;/code&gt;进行切换。按下&lt;code&gt;Ctrl+Alt+F7&lt;/code&gt;返回图形界面。&lt;/p&gt;
&lt;h3 id=&quot;Shell&quot;&gt;&lt;a href=&quot;#Shell&quot; class=&quot;headerlink&quot; title=&quot;Shell&quot;&gt;&lt;/a&gt;Shell&lt;/h3&gt;&lt;p&gt;在图形界面中通常使用的不是上面所说的6个终端而是各种终端模拟器，就是Shell（壳）。壳里面包裹的就是核（Kernel），核就是Unix/Linux内核。Shell是指“提供给使用者使用界面”的命令解析器，类似于DOS下的命令行和后来的cmd.exe，其隐藏了操作系统底层的细节。&lt;/p&gt;
&lt;p&gt;Unix/Linux中比较流行的Shell有bash、zsh、ksh等。Ubuntu终端默认的是bash，默认桌面环境是GNOME或者Unity（基于GNOME）。&lt;/p&gt;
&lt;h2 id=&quot;命令行操作&quot;&gt;&lt;a href=&quot;#命令行操作&quot; class=&quot;headerlink&quot; title=&quot;命令行操作&quot;&gt;&lt;/a&gt;命令行操作&lt;/h2&gt;&lt;h3 id=&quot;过程&quot;&gt;&lt;a href=&quot;#过程&quot; class=&quot;headerlink&quot; title=&quot;过程&quot;&gt;&lt;/a&gt;过程&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;输入&lt;/li&gt;
&lt;li&gt;输出&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/2018/09/17/linux-shiyan2/pwd-touch.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;例子中涉及：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pwd&lt;/code&gt;：当前路径&lt;/li&gt;
&lt;li&gt;&lt;code&gt;touch&lt;/code&gt;：新建文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;重要快捷键&quot;&gt;&lt;a href=&quot;#重要快捷键&quot; class=&quot;headerlink&quot; title=&quot;重要快捷键&quot;&gt;&lt;/a&gt;重要快捷键&lt;/h3&gt;&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;&lt;p&gt;&lt;i class=&quot;fa fa-info-circle&quot;&gt;&lt;/i&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Tap&lt;/code&gt;：自动补齐&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Ctrl+c&lt;/code&gt;：强制终止当前程序&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Ctrl+d&lt;/code&gt;：键盘输入结束或者退出终端&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Ctrl+s&lt;/code&gt;：暂停当前程序，暂停后按下任意键恢复运行&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Ctrl+z&lt;/code&gt;：后台运行当前程序，恢复到前台使用&lt;code&gt;fg&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Ctrl+a&lt;/code&gt;：光标移动到行头&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Ctrl+k&lt;/code&gt;：删除光标位置到行末的内容&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Alt+Backspace&lt;/code&gt;：删除前面一个单词&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Shift+PgUp&lt;/code&gt;：将终端向上滚动&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Shift+PgDn&lt;/code&gt;：将终端向下滚动&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/2018/09/17/linux-shiyan2/shell-shortcuts-1.gif&quot; alt=&quot;Shell常用快捷键&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;输入历史&quot;&gt;&lt;a href=&quot;#输入历史&quot; class=&quot;headerlink&quot; title=&quot;输入历史&quot;&gt;&lt;/a&gt;输入历史&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;↑&lt;/code&gt;：恢复之前输入&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;使用通配符&quot;&gt;&lt;a href=&quot;#使用通配符&quot; class=&quot;headerlink&quot; title=&quot;使用通配符&quot;&gt;&lt;/a&gt;使用通配符&lt;/h3&gt;&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字符&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配0个或者多个任意字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;?&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配任意一个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[list]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配list中的任意单一字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[^list]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配除了list中任意单一字符外的字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[c1-c2]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配从c1到c2中的任意单一字符，例如：&lt;code&gt;[0-9]&lt;/code&gt;、&lt;code&gt;[a-z]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;{str1, str2...}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配字符串数组中的一个或者更多字符串&lt;br&gt;&lt;em&gt;注：实验失败，暂时无法通配。&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;{c1..c2}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配从c1到c2中全部字符，例如：{1..10}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/2018/09/17/linux-shiyan2/shell-通配符-2.gif&quot; alt=&quot;使用通配符来匹配字符串&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.blankspace.cn/categories/Linux/"/>
    
      <category term="Linux Basic" scheme="https://www.blankspace.cn/categories/Linux/Linux-Basic/"/>
    
    
      <category term="Shell" scheme="https://www.blankspace.cn/tags/Shell/"/>
    
      <category term="Linux" scheme="https://www.blankspace.cn/tags/Linux/"/>
    
  </entry>
  
</feed>
